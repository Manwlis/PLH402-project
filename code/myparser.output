Terminals unused in grammar

   KW_IF
   KW_THEN
   KW_ELSE
   KW_FI
   KW_WHILE
   KW_LOOP
   KW_POOL
   KW_LET
   KW_BREAK
   KW_RETURN
   DIFFERENT_OP
   EQUAL_LESS_OP
   AND_OP
   OR_OP
   NOT_OP
   ADD_POS_OP
   SUBTRACT_NEG_OP
   MULTIPLY_OP
   DIVIDE_OP
   MOD_OP


Rules useless in parser due to conflicts

   30 expr: POS_INT
   31     | POS_REAL


State 28 conflicts: 3 reduce/reduce
State 29 conflicts: 3 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'

    2 decl_list: decl_list decl
    3          | decl

    4 decl: KW_CONST const_decl_body

    5 const_decl_body: const_decl_list ':' type_spec ';'

    6 const_decl_list: const_decl_list ',' const_decl_init
    7                | const_decl_init

    8 const_decl_init: const_decl_id ASSIGN_OP expr
    9                | table_id ASSIGN_OP '{' table_init '}'
   10                | const_decl_id ASSIGN_OP bool
   11                | table_id ASSIGN_OP bool
   12                | const_decl_id ASSIGN_OP string
   13                | table_id ASSIGN_OP string
   14                | const_decl_id ASSIGN_OP IDENTIFIER

   15 const_decl_id: IDENTIFIER
   16              | IDENTIFIER '[' ']'

   17 type_spec: KW_INT
   18          | KW_REAL
   19          | KW_BOOL
   20          | KW_STRING

   21 expr: POS_INT
   22     | POS_REAL

   23 string: STRING

   24 table_id: IDENTIFIER '[' POS_INT ']'

   25 table_init: table_init table_init_expr
   26           | expr
   27           | bool

   28 table_init_expr: ',' expr
   29                | ',' bool

   30 expr: POS_INT
   31     | POS_REAL

   32 bool: KW_TRUE
   33     | KW_FALSE

   34 body: %empty


Terminals, with rules where they appear

$end (0) 0
'(' (40) 1
')' (41) 1
',' (44) 6 28 29
':' (58) 1 5
';' (59) 5
'[' (91) 16 24
']' (93) 16 24
'{' (123) 1 9
'}' (125) 1 9
error (256)
KW_INT (258) 1 17
KW_REAL (259) 18
KW_BOOL (260) 19
KW_STRING (261) 20
KW_IF (262)
KW_THEN (263)
KW_ELSE (264)
KW_FI (265)
KW_WHILE (266)
KW_LOOP (267)
KW_POOL (268)
KW_CONST (269) 1 4
KW_LET (270)
KW_BREAK (271)
KW_RETURN (272)
KW_START (273) 1
DIFFERENT_OP (274)
EQUAL_LESS_OP (275)
AND_OP (276)
OR_OP (277)
NOT_OP (278)
ASSIGN_OP (279) 1 8 9 10 11 12 13 14
ARROW_OP (280) 1
POS_INT (281) 21 24 30
POS_REAL (282) 22 31
KW_TRUE (283) 32
KW_FALSE (284) 33
IDENTIFIER (285) 14 15 16 24
STRING (286) 23
ADD_POS_OP (287)
SUBTRACT_NEG_OP (288)
MULTIPLY_OP (289)
DIVIDE_OP (290)
MOD_OP (291)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program (47)
    on left: 1, on right: 0
decl_list (48)
    on left: 2 3, on right: 1 2
decl (49)
    on left: 4, on right: 2 3
const_decl_body (50)
    on left: 5, on right: 4
const_decl_list (51)
    on left: 6 7, on right: 5 6
const_decl_init (52)
    on left: 8 9 10 11 12 13 14, on right: 6 7
const_decl_id (53)
    on left: 15 16, on right: 8 10 12 14
type_spec (54)
    on left: 17 18 19 20, on right: 5
expr (55)
    on left: 21 22 30 31, on right: 8 26 28
string (56)
    on left: 23, on right: 12 13
table_id (57)
    on left: 24, on right: 9 11 13
table_init (58)
    on left: 25 26 27, on right: 9 25
table_init_expr (59)
    on left: 28 29, on right: 25
bool (60)
    on left: 32 33, on right: 10 11 27 29
body (61)
    on left: 34, on right: 1


State 0

    0 $accept: . program $end
    1 program: . decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
    2 decl_list: . decl_list decl
    3          | . decl
    4 decl: . KW_CONST const_decl_body

    KW_CONST  shift, and go to state 1

    program    go to state 2
    decl_list  go to state 3
    decl       go to state 4


State 1

    4 decl: KW_CONST . const_decl_body
    5 const_decl_body: . const_decl_list ':' type_spec ';'
    6 const_decl_list: . const_decl_list ',' const_decl_init
    7                | . const_decl_init
    8 const_decl_init: . const_decl_id ASSIGN_OP expr
    9                | . table_id ASSIGN_OP '{' table_init '}'
   10                | . const_decl_id ASSIGN_OP bool
   11                | . table_id ASSIGN_OP bool
   12                | . const_decl_id ASSIGN_OP string
   13                | . table_id ASSIGN_OP string
   14                | . const_decl_id ASSIGN_OP IDENTIFIER
   15 const_decl_id: . IDENTIFIER
   16              | . IDENTIFIER '[' ']'
   24 table_id: . IDENTIFIER '[' POS_INT ']'

    IDENTIFIER  shift, and go to state 5

    const_decl_body  go to state 6
    const_decl_list  go to state 7
    const_decl_init  go to state 8
    const_decl_id    go to state 9
    table_id         go to state 10


State 2

    0 $accept: program . $end

    $end  shift, and go to state 11


State 3

    1 program: decl_list . KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
    2 decl_list: decl_list . decl
    4 decl: . KW_CONST const_decl_body

    KW_CONST  shift, and go to state 12

    decl  go to state 13


State 4

    3 decl_list: decl .

    $default  reduce using rule 3 (decl_list)


State 5

   15 const_decl_id: IDENTIFIER .  [ASSIGN_OP]
   16              | IDENTIFIER . '[' ']'
   24 table_id: IDENTIFIER . '[' POS_INT ']'

    '['  shift, and go to state 14

    $default  reduce using rule 15 (const_decl_id)


State 6

    4 decl: KW_CONST const_decl_body .

    $default  reduce using rule 4 (decl)


State 7

    5 const_decl_body: const_decl_list . ':' type_spec ';'
    6 const_decl_list: const_decl_list . ',' const_decl_init

    ':'  shift, and go to state 15
    ','  shift, and go to state 16


State 8

    7 const_decl_list: const_decl_init .

    $default  reduce using rule 7 (const_decl_list)


State 9

    8 const_decl_init: const_decl_id . ASSIGN_OP expr
   10                | const_decl_id . ASSIGN_OP bool
   12                | const_decl_id . ASSIGN_OP string
   14                | const_decl_id . ASSIGN_OP IDENTIFIER

    ASSIGN_OP  shift, and go to state 17


State 10

    9 const_decl_init: table_id . ASSIGN_OP '{' table_init '}'
   11                | table_id . ASSIGN_OP bool
   13                | table_id . ASSIGN_OP string

    ASSIGN_OP  shift, and go to state 18


State 11

    0 $accept: program $end .

    $default  accept


State 12

    1 program: decl_list KW_CONST . KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
    4 decl: KW_CONST . const_decl_body
    5 const_decl_body: . const_decl_list ':' type_spec ';'
    6 const_decl_list: . const_decl_list ',' const_decl_init
    7                | . const_decl_init
    8 const_decl_init: . const_decl_id ASSIGN_OP expr
    9                | . table_id ASSIGN_OP '{' table_init '}'
   10                | . const_decl_id ASSIGN_OP bool
   11                | . table_id ASSIGN_OP bool
   12                | . const_decl_id ASSIGN_OP string
   13                | . table_id ASSIGN_OP string
   14                | . const_decl_id ASSIGN_OP IDENTIFIER
   15 const_decl_id: . IDENTIFIER
   16              | . IDENTIFIER '[' ']'
   24 table_id: . IDENTIFIER '[' POS_INT ']'

    KW_START    shift, and go to state 19
    IDENTIFIER  shift, and go to state 5

    const_decl_body  go to state 6
    const_decl_list  go to state 7
    const_decl_init  go to state 8
    const_decl_id    go to state 9
    table_id         go to state 10


State 13

    2 decl_list: decl_list decl .

    $default  reduce using rule 2 (decl_list)


State 14

   16 const_decl_id: IDENTIFIER '[' . ']'
   24 table_id: IDENTIFIER '[' . POS_INT ']'

    POS_INT  shift, and go to state 20
    ']'      shift, and go to state 21


State 15

    5 const_decl_body: const_decl_list ':' . type_spec ';'
   17 type_spec: . KW_INT
   18          | . KW_REAL
   19          | . KW_BOOL
   20          | . KW_STRING

    KW_INT     shift, and go to state 22
    KW_REAL    shift, and go to state 23
    KW_BOOL    shift, and go to state 24
    KW_STRING  shift, and go to state 25

    type_spec  go to state 26


State 16

    6 const_decl_list: const_decl_list ',' . const_decl_init
    8 const_decl_init: . const_decl_id ASSIGN_OP expr
    9                | . table_id ASSIGN_OP '{' table_init '}'
   10                | . const_decl_id ASSIGN_OP bool
   11                | . table_id ASSIGN_OP bool
   12                | . const_decl_id ASSIGN_OP string
   13                | . table_id ASSIGN_OP string
   14                | . const_decl_id ASSIGN_OP IDENTIFIER
   15 const_decl_id: . IDENTIFIER
   16              | . IDENTIFIER '[' ']'
   24 table_id: . IDENTIFIER '[' POS_INT ']'

    IDENTIFIER  shift, and go to state 5

    const_decl_init  go to state 27
    const_decl_id    go to state 9
    table_id         go to state 10


State 17

    8 const_decl_init: const_decl_id ASSIGN_OP . expr
   10                | const_decl_id ASSIGN_OP . bool
   12                | const_decl_id ASSIGN_OP . string
   14                | const_decl_id ASSIGN_OP . IDENTIFIER
   21 expr: . POS_INT
   22     | . POS_REAL
   23 string: . STRING
   30 expr: . POS_INT
   31     | . POS_REAL
   32 bool: . KW_TRUE
   33     | . KW_FALSE

    POS_INT     shift, and go to state 28
    POS_REAL    shift, and go to state 29
    KW_TRUE     shift, and go to state 30
    KW_FALSE    shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    STRING      shift, and go to state 33

    expr    go to state 34
    string  go to state 35
    bool    go to state 36


State 18

    9 const_decl_init: table_id ASSIGN_OP . '{' table_init '}'
   11                | table_id ASSIGN_OP . bool
   13                | table_id ASSIGN_OP . string
   23 string: . STRING
   32 bool: . KW_TRUE
   33     | . KW_FALSE

    KW_TRUE   shift, and go to state 30
    KW_FALSE  shift, and go to state 31
    STRING    shift, and go to state 33
    '{'       shift, and go to state 37

    string  go to state 38
    bool    go to state 39


State 19

    1 program: decl_list KW_CONST KW_START . ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'

    ASSIGN_OP  shift, and go to state 40


State 20

   24 table_id: IDENTIFIER '[' POS_INT . ']'

    ']'  shift, and go to state 41


State 21

   16 const_decl_id: IDENTIFIER '[' ']' .

    $default  reduce using rule 16 (const_decl_id)


State 22

   17 type_spec: KW_INT .

    $default  reduce using rule 17 (type_spec)


State 23

   18 type_spec: KW_REAL .

    $default  reduce using rule 18 (type_spec)


State 24

   19 type_spec: KW_BOOL .

    $default  reduce using rule 19 (type_spec)


State 25

   20 type_spec: KW_STRING .

    $default  reduce using rule 20 (type_spec)


State 26

    5 const_decl_body: const_decl_list ':' type_spec . ';'

    ';'  shift, and go to state 42


State 27

    6 const_decl_list: const_decl_list ',' const_decl_init .

    $default  reduce using rule 6 (const_decl_list)


State 28

   21 expr: POS_INT .  [':', '}', ',']
   30     | POS_INT .  [':', '}', ',']

    ':'       reduce using rule 21 (expr)
    ':'       [reduce using rule 30 (expr)]
    '}'       reduce using rule 21 (expr)
    '}'       [reduce using rule 30 (expr)]
    ','       reduce using rule 21 (expr)
    ','       [reduce using rule 30 (expr)]
    $default  reduce using rule 21 (expr)


State 29

   22 expr: POS_REAL .  [':', '}', ',']
   31     | POS_REAL .  [':', '}', ',']

    ':'       reduce using rule 22 (expr)
    ':'       [reduce using rule 31 (expr)]
    '}'       reduce using rule 22 (expr)
    '}'       [reduce using rule 31 (expr)]
    ','       reduce using rule 22 (expr)
    ','       [reduce using rule 31 (expr)]
    $default  reduce using rule 22 (expr)


State 30

   32 bool: KW_TRUE .

    $default  reduce using rule 32 (bool)


State 31

   33 bool: KW_FALSE .

    $default  reduce using rule 33 (bool)


State 32

   14 const_decl_init: const_decl_id ASSIGN_OP IDENTIFIER .

    $default  reduce using rule 14 (const_decl_init)


State 33

   23 string: STRING .

    $default  reduce using rule 23 (string)


State 34

    8 const_decl_init: const_decl_id ASSIGN_OP expr .

    $default  reduce using rule 8 (const_decl_init)


State 35

   12 const_decl_init: const_decl_id ASSIGN_OP string .

    $default  reduce using rule 12 (const_decl_init)


State 36

   10 const_decl_init: const_decl_id ASSIGN_OP bool .

    $default  reduce using rule 10 (const_decl_init)


State 37

    9 const_decl_init: table_id ASSIGN_OP '{' . table_init '}'
   21 expr: . POS_INT
   22     | . POS_REAL
   25 table_init: . table_init table_init_expr
   26           | . expr
   27           | . bool
   30 expr: . POS_INT
   31     | . POS_REAL
   32 bool: . KW_TRUE
   33     | . KW_FALSE

    POS_INT   shift, and go to state 28
    POS_REAL  shift, and go to state 29
    KW_TRUE   shift, and go to state 30
    KW_FALSE  shift, and go to state 31

    expr        go to state 43
    table_init  go to state 44
    bool        go to state 45


State 38

   13 const_decl_init: table_id ASSIGN_OP string .

    $default  reduce using rule 13 (const_decl_init)


State 39

   11 const_decl_init: table_id ASSIGN_OP bool .

    $default  reduce using rule 11 (const_decl_init)


State 40

    1 program: decl_list KW_CONST KW_START ASSIGN_OP . '(' ')' ':' KW_INT ARROW_OP '{' body '}'

    '('  shift, and go to state 46


State 41

   24 table_id: IDENTIFIER '[' POS_INT ']' .

    $default  reduce using rule 24 (table_id)


State 42

    5 const_decl_body: const_decl_list ':' type_spec ';' .

    $default  reduce using rule 5 (const_decl_body)


State 43

   26 table_init: expr .

    $default  reduce using rule 26 (table_init)


State 44

    9 const_decl_init: table_id ASSIGN_OP '{' table_init . '}'
   25 table_init: table_init . table_init_expr
   28 table_init_expr: . ',' expr
   29                | . ',' bool

    '}'  shift, and go to state 47
    ','  shift, and go to state 48

    table_init_expr  go to state 49


State 45

   27 table_init: bool .

    $default  reduce using rule 27 (table_init)


State 46

    1 program: decl_list KW_CONST KW_START ASSIGN_OP '(' . ')' ':' KW_INT ARROW_OP '{' body '}'

    ')'  shift, and go to state 50


State 47

    9 const_decl_init: table_id ASSIGN_OP '{' table_init '}' .

    $default  reduce using rule 9 (const_decl_init)


State 48

   21 expr: . POS_INT
   22     | . POS_REAL
   28 table_init_expr: ',' . expr
   29                | ',' . bool
   30 expr: . POS_INT
   31     | . POS_REAL
   32 bool: . KW_TRUE
   33     | . KW_FALSE

    POS_INT   shift, and go to state 28
    POS_REAL  shift, and go to state 29
    KW_TRUE   shift, and go to state 30
    KW_FALSE  shift, and go to state 31

    expr  go to state 51
    bool  go to state 52


State 49

   25 table_init: table_init table_init_expr .

    $default  reduce using rule 25 (table_init)


State 50

    1 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' . ':' KW_INT ARROW_OP '{' body '}'

    ':'  shift, and go to state 53


State 51

   28 table_init_expr: ',' expr .

    $default  reduce using rule 28 (table_init_expr)


State 52

   29 table_init_expr: ',' bool .

    $default  reduce using rule 29 (table_init_expr)


State 53

    1 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' . KW_INT ARROW_OP '{' body '}'

    KW_INT  shift, and go to state 54


State 54

    1 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT . ARROW_OP '{' body '}'

    ARROW_OP  shift, and go to state 55


State 55

    1 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP . '{' body '}'

    '{'  shift, and go to state 56


State 56

    1 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' . body '}'
   34 body: . %empty

    $default  reduce using rule 34 (body)

    body  go to state 57


State 57

    1 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body . '}'

    '}'  shift, and go to state 58


State 58

    1 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}' .

    $default  reduce using rule 1 (program)
