Terminals unused in grammar

   KW_IF
   KW_THEN
   KW_ELSE
   KW_FI
   KW_WHILE
   KW_LOOP
   KW_POOL
   KW_BREAK
   DIFFERENT_OP
   EQUAL_LESS_OP
   AND_OP
   OR_OP
   NOT_OP


Grammar

    0 $accept: program $end

    1 program: decl_list func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
    2        | func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
    3        | decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
    4        | KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'

    5 decl_list: decl_list decl
    6          | decl

    7 decl: KW_CONST const_decl_body
    8     | KW_LET let_decl_body

    9 const_decl_body: const_decl_list ':' type_spec ';'

   10 const_decl_list: const_decl_list ',' const_decl_init
   11                | const_decl_init

   12 const_decl_init: decl_id ASSIGN_OP expr
   13                | decl_id ASSIGN_OP STRING
   14                | decl_id ASSIGN_OP table_init

   15 let_decl_body: let_decl_list ':' type_spec ';'

   16 let_decl_list: let_decl_list ',' let_decl_init
   17              | let_decl_init

   18 let_decl_init: decl_id
   19              | decl_id ASSIGN_OP expr
   20              | decl_id ASSIGN_OP STRING
   21              | decl_id ASSIGN_OP table_init

   22 func_list: func_list func
   23          | func

   24 func: KW_CONST decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}'

   25 func_param_list: %empty
   26                | func_param_list ',' func_param
   27                | func_param

   28 func_param: param_list ':' type_spec

   29 param_list: param_list ',' decl_id
   30           | decl_id

   31 body: commands
   32     | body_decl_list commands
   33     | commands return
   34     | body_decl_list commands return

   35 body_decl_list: body_decl_list decl
   36               | decl

   37 commands: %empty

   38 return: KW_RETURN expr ';'
   39       | KW_RETURN ';'

   40 type_spec: KW_INT
   41          | KW_REAL
   42          | KW_BOOL
   43          | KW_STRING
   44          | '[' ']' KW_INT
   45          | '[' ']' KW_REAL
   46          | '[' ']' KW_BOOL
   47          | '[' ']' KW_STRING

   48 decl_id: IDENTIFIER
   49        | IDENTIFIER '[' ']'
   50        | table_id

   51 table_id: IDENTIFIER '[' POS_INT ']'

   52 table_init: '{' table_init_values '}'

   53 table_init_values: table_init_values ',' expr
   54                  | expr

   55 expr: POS_INT
   56     | POS_REAL
   57     | bool
   58     | decl_id

   59 bool: KW_TRUE
   60     | KW_FALSE


Terminals, with rules where they appear

$end (0) 0
'(' (40) 1 2 3 4 24
')' (41) 1 2 3 4 24
',' (44) 10 16 26 29 53
':' (58) 1 2 3 4 9 15 24 28
';' (59) 9 15 38 39
'[' (91) 44 45 46 47 49 51
']' (93) 44 45 46 47 49 51
'{' (123) 1 2 3 4 24 52
'}' (125) 1 2 3 4 24 52
error (256)
KW_INT (258) 1 2 3 4 40 44
KW_REAL (259) 41 45
KW_BOOL (260) 42 46
KW_STRING (261) 43 47
KW_IF (262)
KW_THEN (263)
KW_ELSE (264)
KW_FI (265)
KW_WHILE (266)
KW_LOOP (267)
KW_POOL (268)
KW_CONST (269) 1 2 3 4 7 24
KW_LET (270) 8
KW_BREAK (271)
KW_RETURN (272) 38 39
KW_START (273) 1 2 3 4
DIFFERENT_OP (274)
EQUAL_LESS_OP (275)
AND_OP (276)
OR_OP (277)
NOT_OP (278)
ASSIGN_OP (279) 1 2 3 4 12 13 14 19 20 21 24
ARROW_OP (280) 1 2 3 4 24
POS_INT (281) 51 55
POS_REAL (282) 56
KW_TRUE (283) 59
KW_FALSE (284) 60
IDENTIFIER (285) 48 49 51
STRING (286) 13 20


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
program (42)
    on left: 1 2 3 4, on right: 0
decl_list (43)
    on left: 5 6, on right: 1 3 5
decl (44)
    on left: 7 8, on right: 5 6 35 36
const_decl_body (45)
    on left: 9, on right: 7
const_decl_list (46)
    on left: 10 11, on right: 9 10
const_decl_init (47)
    on left: 12 13 14, on right: 10 11
let_decl_body (48)
    on left: 15, on right: 8
let_decl_list (49)
    on left: 16 17, on right: 15 16
let_decl_init (50)
    on left: 18 19 20 21, on right: 16 17
func_list (51)
    on left: 22 23, on right: 1 2 22
func (52)
    on left: 24, on right: 22 23
func_param_list (53)
    on left: 25 26 27, on right: 24 26
func_param (54)
    on left: 28, on right: 26 27
param_list (55)
    on left: 29 30, on right: 28 29
body (56)
    on left: 31 32 33 34, on right: 1 2 3 4 24
body_decl_list (57)
    on left: 35 36, on right: 32 34 35
commands (58)
    on left: 37, on right: 31 32 33 34
return (59)
    on left: 38 39, on right: 33 34
type_spec (60)
    on left: 40 41 42 43 44 45 46 47, on right: 9 15 24 28
decl_id (61)
    on left: 48 49 50, on right: 12 13 14 18 19 20 21 24 29 30 58
table_id (62)
    on left: 51, on right: 50
table_init (63)
    on left: 52, on right: 14 21
table_init_values (64)
    on left: 53 54, on right: 52 53
expr (65)
    on left: 55 56 57 58, on right: 12 19 38 53 54
bool (66)
    on left: 59 60, on right: 57


State 0

    0 $accept: . program $end
    1 program: . decl_list func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
    2        | . func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
    3        | . decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
    4        | . KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
    5 decl_list: . decl_list decl
    6          | . decl
    7 decl: . KW_CONST const_decl_body
    8     | . KW_LET let_decl_body
   22 func_list: . func_list func
   23          | . func
   24 func: . KW_CONST decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}'

    KW_CONST  shift, and go to state 1
    KW_LET    shift, and go to state 2

    program    go to state 3
    decl_list  go to state 4
    decl       go to state 5
    func_list  go to state 6
    func       go to state 7


State 1

    4 program: KW_CONST . KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
    7 decl: KW_CONST . const_decl_body
    9 const_decl_body: . const_decl_list ':' type_spec ';'
   10 const_decl_list: . const_decl_list ',' const_decl_init
   11                | . const_decl_init
   12 const_decl_init: . decl_id ASSIGN_OP expr
   13                | . decl_id ASSIGN_OP STRING
   14                | . decl_id ASSIGN_OP table_init
   24 func: KW_CONST . decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}'
   48 decl_id: . IDENTIFIER
   49        | . IDENTIFIER '[' ']'
   50        | . table_id
   51 table_id: . IDENTIFIER '[' POS_INT ']'

    KW_START    shift, and go to state 8
    IDENTIFIER  shift, and go to state 9

    const_decl_body  go to state 10
    const_decl_list  go to state 11
    const_decl_init  go to state 12
    decl_id          go to state 13
    table_id         go to state 14


State 2

    8 decl: KW_LET . let_decl_body
   15 let_decl_body: . let_decl_list ':' type_spec ';'
   16 let_decl_list: . let_decl_list ',' let_decl_init
   17              | . let_decl_init
   18 let_decl_init: . decl_id
   19              | . decl_id ASSIGN_OP expr
   20              | . decl_id ASSIGN_OP STRING
   21              | . decl_id ASSIGN_OP table_init
   48 decl_id: . IDENTIFIER
   49        | . IDENTIFIER '[' ']'
   50        | . table_id
   51 table_id: . IDENTIFIER '[' POS_INT ']'

    IDENTIFIER  shift, and go to state 9

    let_decl_body  go to state 15
    let_decl_list  go to state 16
    let_decl_init  go to state 17
    decl_id        go to state 18
    table_id       go to state 14


State 3

    0 $accept: program . $end

    $end  shift, and go to state 19


State 4

    1 program: decl_list . func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
    3        | decl_list . KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
    5 decl_list: decl_list . decl
    7 decl: . KW_CONST const_decl_body
    8     | . KW_LET let_decl_body
   22 func_list: . func_list func
   23          | . func
   24 func: . KW_CONST decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}'

    KW_CONST  shift, and go to state 20
    KW_LET    shift, and go to state 2

    decl       go to state 21
    func_list  go to state 22
    func       go to state 7


State 5

    6 decl_list: decl .

    $default  reduce using rule 6 (decl_list)


State 6

    2 program: func_list . KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
   22 func_list: func_list . func
   24 func: . KW_CONST decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}'

    KW_CONST  shift, and go to state 23

    func  go to state 24


State 7

   23 func_list: func .

    $default  reduce using rule 23 (func_list)


State 8

    4 program: KW_CONST KW_START . ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'

    ASSIGN_OP  shift, and go to state 25


State 9

   48 decl_id: IDENTIFIER .  [ASSIGN_OP, ':', '}', ';', ',']
   49        | IDENTIFIER . '[' ']'
   51 table_id: IDENTIFIER . '[' POS_INT ']'

    '['  shift, and go to state 26

    $default  reduce using rule 48 (decl_id)


State 10

    7 decl: KW_CONST const_decl_body .

    $default  reduce using rule 7 (decl)


State 11

    9 const_decl_body: const_decl_list . ':' type_spec ';'
   10 const_decl_list: const_decl_list . ',' const_decl_init

    ':'  shift, and go to state 27
    ','  shift, and go to state 28


State 12

   11 const_decl_list: const_decl_init .

    $default  reduce using rule 11 (const_decl_list)


State 13

   12 const_decl_init: decl_id . ASSIGN_OP expr
   13                | decl_id . ASSIGN_OP STRING
   14                | decl_id . ASSIGN_OP table_init
   24 func: KW_CONST decl_id . ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}'

    ASSIGN_OP  shift, and go to state 29


State 14

   50 decl_id: table_id .

    $default  reduce using rule 50 (decl_id)


State 15

    8 decl: KW_LET let_decl_body .

    $default  reduce using rule 8 (decl)


State 16

   15 let_decl_body: let_decl_list . ':' type_spec ';'
   16 let_decl_list: let_decl_list . ',' let_decl_init

    ':'  shift, and go to state 30
    ','  shift, and go to state 31


State 17

   17 let_decl_list: let_decl_init .

    $default  reduce using rule 17 (let_decl_list)


State 18

   18 let_decl_init: decl_id .  [':', ',']
   19              | decl_id . ASSIGN_OP expr
   20              | decl_id . ASSIGN_OP STRING
   21              | decl_id . ASSIGN_OP table_init

    ASSIGN_OP  shift, and go to state 32

    $default  reduce using rule 18 (let_decl_init)


State 19

    0 $accept: program $end .

    $default  accept


State 20

    3 program: decl_list KW_CONST . KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
    7 decl: KW_CONST . const_decl_body
    9 const_decl_body: . const_decl_list ':' type_spec ';'
   10 const_decl_list: . const_decl_list ',' const_decl_init
   11                | . const_decl_init
   12 const_decl_init: . decl_id ASSIGN_OP expr
   13                | . decl_id ASSIGN_OP STRING
   14                | . decl_id ASSIGN_OP table_init
   24 func: KW_CONST . decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}'
   48 decl_id: . IDENTIFIER
   49        | . IDENTIFIER '[' ']'
   50        | . table_id
   51 table_id: . IDENTIFIER '[' POS_INT ']'

    KW_START    shift, and go to state 33
    IDENTIFIER  shift, and go to state 9

    const_decl_body  go to state 10
    const_decl_list  go to state 11
    const_decl_init  go to state 12
    decl_id          go to state 13
    table_id         go to state 14


State 21

    5 decl_list: decl_list decl .

    $default  reduce using rule 5 (decl_list)


State 22

    1 program: decl_list func_list . KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
   22 func_list: func_list . func
   24 func: . KW_CONST decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}'

    KW_CONST  shift, and go to state 34

    func  go to state 24


State 23

    2 program: func_list KW_CONST . KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
   24 func: KW_CONST . decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}'
   48 decl_id: . IDENTIFIER
   49        | . IDENTIFIER '[' ']'
   50        | . table_id
   51 table_id: . IDENTIFIER '[' POS_INT ']'

    KW_START    shift, and go to state 35
    IDENTIFIER  shift, and go to state 9

    decl_id   go to state 36
    table_id  go to state 14


State 24

   22 func_list: func_list func .

    $default  reduce using rule 22 (func_list)


State 25

    4 program: KW_CONST KW_START ASSIGN_OP . '(' ')' ':' KW_INT ARROW_OP '{' body '}'

    '('  shift, and go to state 37


State 26

   49 decl_id: IDENTIFIER '[' . ']'
   51 table_id: IDENTIFIER '[' . POS_INT ']'

    POS_INT  shift, and go to state 38
    ']'      shift, and go to state 39


State 27

    9 const_decl_body: const_decl_list ':' . type_spec ';'
   40 type_spec: . KW_INT
   41          | . KW_REAL
   42          | . KW_BOOL
   43          | . KW_STRING
   44          | . '[' ']' KW_INT
   45          | . '[' ']' KW_REAL
   46          | . '[' ']' KW_BOOL
   47          | . '[' ']' KW_STRING

    KW_INT     shift, and go to state 40
    KW_REAL    shift, and go to state 41
    KW_BOOL    shift, and go to state 42
    KW_STRING  shift, and go to state 43
    '['        shift, and go to state 44

    type_spec  go to state 45


State 28

   10 const_decl_list: const_decl_list ',' . const_decl_init
   12 const_decl_init: . decl_id ASSIGN_OP expr
   13                | . decl_id ASSIGN_OP STRING
   14                | . decl_id ASSIGN_OP table_init
   48 decl_id: . IDENTIFIER
   49        | . IDENTIFIER '[' ']'
   50        | . table_id
   51 table_id: . IDENTIFIER '[' POS_INT ']'

    IDENTIFIER  shift, and go to state 9

    const_decl_init  go to state 46
    decl_id          go to state 47
    table_id         go to state 14


State 29

   12 const_decl_init: decl_id ASSIGN_OP . expr
   13                | decl_id ASSIGN_OP . STRING
   14                | decl_id ASSIGN_OP . table_init
   24 func: KW_CONST decl_id ASSIGN_OP . '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}'
   48 decl_id: . IDENTIFIER
   49        | . IDENTIFIER '[' ']'
   50        | . table_id
   51 table_id: . IDENTIFIER '[' POS_INT ']'
   52 table_init: . '{' table_init_values '}'
   55 expr: . POS_INT
   56     | . POS_REAL
   57     | . bool
   58     | . decl_id
   59 bool: . KW_TRUE
   60     | . KW_FALSE

    POS_INT     shift, and go to state 48
    POS_REAL    shift, and go to state 49
    KW_TRUE     shift, and go to state 50
    KW_FALSE    shift, and go to state 51
    IDENTIFIER  shift, and go to state 9
    STRING      shift, and go to state 52
    '('         shift, and go to state 53
    '{'         shift, and go to state 54

    decl_id     go to state 55
    table_id    go to state 14
    table_init  go to state 56
    expr        go to state 57
    bool        go to state 58


State 30

   15 let_decl_body: let_decl_list ':' . type_spec ';'
   40 type_spec: . KW_INT
   41          | . KW_REAL
   42          | . KW_BOOL
   43          | . KW_STRING
   44          | . '[' ']' KW_INT
   45          | . '[' ']' KW_REAL
   46          | . '[' ']' KW_BOOL
   47          | . '[' ']' KW_STRING

    KW_INT     shift, and go to state 40
    KW_REAL    shift, and go to state 41
    KW_BOOL    shift, and go to state 42
    KW_STRING  shift, and go to state 43
    '['        shift, and go to state 44

    type_spec  go to state 59


State 31

   16 let_decl_list: let_decl_list ',' . let_decl_init
   18 let_decl_init: . decl_id
   19              | . decl_id ASSIGN_OP expr
   20              | . decl_id ASSIGN_OP STRING
   21              | . decl_id ASSIGN_OP table_init
   48 decl_id: . IDENTIFIER
   49        | . IDENTIFIER '[' ']'
   50        | . table_id
   51 table_id: . IDENTIFIER '[' POS_INT ']'

    IDENTIFIER  shift, and go to state 9

    let_decl_init  go to state 60
    decl_id        go to state 18
    table_id       go to state 14


State 32

   19 let_decl_init: decl_id ASSIGN_OP . expr
   20              | decl_id ASSIGN_OP . STRING
   21              | decl_id ASSIGN_OP . table_init
   48 decl_id: . IDENTIFIER
   49        | . IDENTIFIER '[' ']'
   50        | . table_id
   51 table_id: . IDENTIFIER '[' POS_INT ']'
   52 table_init: . '{' table_init_values '}'
   55 expr: . POS_INT
   56     | . POS_REAL
   57     | . bool
   58     | . decl_id
   59 bool: . KW_TRUE
   60     | . KW_FALSE

    POS_INT     shift, and go to state 48
    POS_REAL    shift, and go to state 49
    KW_TRUE     shift, and go to state 50
    KW_FALSE    shift, and go to state 51
    IDENTIFIER  shift, and go to state 9
    STRING      shift, and go to state 61
    '{'         shift, and go to state 54

    decl_id     go to state 55
    table_id    go to state 14
    table_init  go to state 62
    expr        go to state 63
    bool        go to state 58


State 33

    3 program: decl_list KW_CONST KW_START . ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'

    ASSIGN_OP  shift, and go to state 64


State 34

    1 program: decl_list func_list KW_CONST . KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
   24 func: KW_CONST . decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}'
   48 decl_id: . IDENTIFIER
   49        | . IDENTIFIER '[' ']'
   50        | . table_id
   51 table_id: . IDENTIFIER '[' POS_INT ']'

    KW_START    shift, and go to state 65
    IDENTIFIER  shift, and go to state 9

    decl_id   go to state 36
    table_id  go to state 14


State 35

    2 program: func_list KW_CONST KW_START . ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'

    ASSIGN_OP  shift, and go to state 66


State 36

   24 func: KW_CONST decl_id . ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}'

    ASSIGN_OP  shift, and go to state 67


State 37

    4 program: KW_CONST KW_START ASSIGN_OP '(' . ')' ':' KW_INT ARROW_OP '{' body '}'

    ')'  shift, and go to state 68


State 38

   51 table_id: IDENTIFIER '[' POS_INT . ']'

    ']'  shift, and go to state 69


State 39

   49 decl_id: IDENTIFIER '[' ']' .

    $default  reduce using rule 49 (decl_id)


State 40

   40 type_spec: KW_INT .

    $default  reduce using rule 40 (type_spec)


State 41

   41 type_spec: KW_REAL .

    $default  reduce using rule 41 (type_spec)


State 42

   42 type_spec: KW_BOOL .

    $default  reduce using rule 42 (type_spec)


State 43

   43 type_spec: KW_STRING .

    $default  reduce using rule 43 (type_spec)


State 44

   44 type_spec: '[' . ']' KW_INT
   45          | '[' . ']' KW_REAL
   46          | '[' . ']' KW_BOOL
   47          | '[' . ']' KW_STRING

    ']'  shift, and go to state 70


State 45

    9 const_decl_body: const_decl_list ':' type_spec . ';'

    ';'  shift, and go to state 71


State 46

   10 const_decl_list: const_decl_list ',' const_decl_init .

    $default  reduce using rule 10 (const_decl_list)


State 47

   12 const_decl_init: decl_id . ASSIGN_OP expr
   13                | decl_id . ASSIGN_OP STRING
   14                | decl_id . ASSIGN_OP table_init

    ASSIGN_OP  shift, and go to state 72


State 48

   55 expr: POS_INT .

    $default  reduce using rule 55 (expr)


State 49

   56 expr: POS_REAL .

    $default  reduce using rule 56 (expr)


State 50

   59 bool: KW_TRUE .

    $default  reduce using rule 59 (bool)


State 51

   60 bool: KW_FALSE .

    $default  reduce using rule 60 (bool)


State 52

   13 const_decl_init: decl_id ASSIGN_OP STRING .

    $default  reduce using rule 13 (const_decl_init)


State 53

   24 func: KW_CONST decl_id ASSIGN_OP '(' . func_param_list ')' ':' type_spec ARROW_OP '{' body '}'
   25 func_param_list: . %empty  [')', ',']
   26                | . func_param_list ',' func_param
   27                | . func_param
   28 func_param: . param_list ':' type_spec
   29 param_list: . param_list ',' decl_id
   30           | . decl_id
   48 decl_id: . IDENTIFIER
   49        | . IDENTIFIER '[' ']'
   50        | . table_id
   51 table_id: . IDENTIFIER '[' POS_INT ']'

    IDENTIFIER  shift, and go to state 9

    $default  reduce using rule 25 (func_param_list)

    func_param_list  go to state 73
    func_param       go to state 74
    param_list       go to state 75
    decl_id          go to state 76
    table_id         go to state 14


State 54

   48 decl_id: . IDENTIFIER
   49        | . IDENTIFIER '[' ']'
   50        | . table_id
   51 table_id: . IDENTIFIER '[' POS_INT ']'
   52 table_init: '{' . table_init_values '}'
   53 table_init_values: . table_init_values ',' expr
   54                  | . expr
   55 expr: . POS_INT
   56     | . POS_REAL
   57     | . bool
   58     | . decl_id
   59 bool: . KW_TRUE
   60     | . KW_FALSE

    POS_INT     shift, and go to state 48
    POS_REAL    shift, and go to state 49
    KW_TRUE     shift, and go to state 50
    KW_FALSE    shift, and go to state 51
    IDENTIFIER  shift, and go to state 9

    decl_id            go to state 55
    table_id           go to state 14
    table_init_values  go to state 77
    expr               go to state 78
    bool               go to state 58


State 55

   58 expr: decl_id .

    $default  reduce using rule 58 (expr)


State 56

   14 const_decl_init: decl_id ASSIGN_OP table_init .

    $default  reduce using rule 14 (const_decl_init)


State 57

   12 const_decl_init: decl_id ASSIGN_OP expr .

    $default  reduce using rule 12 (const_decl_init)


State 58

   57 expr: bool .

    $default  reduce using rule 57 (expr)


State 59

   15 let_decl_body: let_decl_list ':' type_spec . ';'

    ';'  shift, and go to state 79


State 60

   16 let_decl_list: let_decl_list ',' let_decl_init .

    $default  reduce using rule 16 (let_decl_list)


State 61

   20 let_decl_init: decl_id ASSIGN_OP STRING .

    $default  reduce using rule 20 (let_decl_init)


State 62

   21 let_decl_init: decl_id ASSIGN_OP table_init .

    $default  reduce using rule 21 (let_decl_init)


State 63

   19 let_decl_init: decl_id ASSIGN_OP expr .

    $default  reduce using rule 19 (let_decl_init)


State 64

    3 program: decl_list KW_CONST KW_START ASSIGN_OP . '(' ')' ':' KW_INT ARROW_OP '{' body '}'

    '('  shift, and go to state 80


State 65

    1 program: decl_list func_list KW_CONST KW_START . ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'

    ASSIGN_OP  shift, and go to state 81


State 66

    2 program: func_list KW_CONST KW_START ASSIGN_OP . '(' ')' ':' KW_INT ARROW_OP '{' body '}'

    '('  shift, and go to state 82


State 67

   24 func: KW_CONST decl_id ASSIGN_OP . '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}'

    '('  shift, and go to state 53


State 68

    4 program: KW_CONST KW_START ASSIGN_OP '(' ')' . ':' KW_INT ARROW_OP '{' body '}'

    ':'  shift, and go to state 83


State 69

   51 table_id: IDENTIFIER '[' POS_INT ']' .

    $default  reduce using rule 51 (table_id)


State 70

   44 type_spec: '[' ']' . KW_INT
   45          | '[' ']' . KW_REAL
   46          | '[' ']' . KW_BOOL
   47          | '[' ']' . KW_STRING

    KW_INT     shift, and go to state 84
    KW_REAL    shift, and go to state 85
    KW_BOOL    shift, and go to state 86
    KW_STRING  shift, and go to state 87


State 71

    9 const_decl_body: const_decl_list ':' type_spec ';' .

    $default  reduce using rule 9 (const_decl_body)


State 72

   12 const_decl_init: decl_id ASSIGN_OP . expr
   13                | decl_id ASSIGN_OP . STRING
   14                | decl_id ASSIGN_OP . table_init
   48 decl_id: . IDENTIFIER
   49        | . IDENTIFIER '[' ']'
   50        | . table_id
   51 table_id: . IDENTIFIER '[' POS_INT ']'
   52 table_init: . '{' table_init_values '}'
   55 expr: . POS_INT
   56     | . POS_REAL
   57     | . bool
   58     | . decl_id
   59 bool: . KW_TRUE
   60     | . KW_FALSE

    POS_INT     shift, and go to state 48
    POS_REAL    shift, and go to state 49
    KW_TRUE     shift, and go to state 50
    KW_FALSE    shift, and go to state 51
    IDENTIFIER  shift, and go to state 9
    STRING      shift, and go to state 52
    '{'         shift, and go to state 54

    decl_id     go to state 55
    table_id    go to state 14
    table_init  go to state 56
    expr        go to state 57
    bool        go to state 58


State 73

   24 func: KW_CONST decl_id ASSIGN_OP '(' func_param_list . ')' ':' type_spec ARROW_OP '{' body '}'
   26 func_param_list: func_param_list . ',' func_param

    ')'  shift, and go to state 88
    ','  shift, and go to state 89


State 74

   27 func_param_list: func_param .

    $default  reduce using rule 27 (func_param_list)


State 75

   28 func_param: param_list . ':' type_spec
   29 param_list: param_list . ',' decl_id

    ':'  shift, and go to state 90
    ','  shift, and go to state 91


State 76

   30 param_list: decl_id .

    $default  reduce using rule 30 (param_list)


State 77

   52 table_init: '{' table_init_values . '}'
   53 table_init_values: table_init_values . ',' expr

    '}'  shift, and go to state 92
    ','  shift, and go to state 93


State 78

   54 table_init_values: expr .

    $default  reduce using rule 54 (table_init_values)


State 79

   15 let_decl_body: let_decl_list ':' type_spec ';' .

    $default  reduce using rule 15 (let_decl_body)


State 80

    3 program: decl_list KW_CONST KW_START ASSIGN_OP '(' . ')' ':' KW_INT ARROW_OP '{' body '}'

    ')'  shift, and go to state 94


State 81

    1 program: decl_list func_list KW_CONST KW_START ASSIGN_OP . '(' ')' ':' KW_INT ARROW_OP '{' body '}'

    '('  shift, and go to state 95


State 82

    2 program: func_list KW_CONST KW_START ASSIGN_OP '(' . ')' ':' KW_INT ARROW_OP '{' body '}'

    ')'  shift, and go to state 96


State 83

    4 program: KW_CONST KW_START ASSIGN_OP '(' ')' ':' . KW_INT ARROW_OP '{' body '}'

    KW_INT  shift, and go to state 97


State 84

   44 type_spec: '[' ']' KW_INT .

    $default  reduce using rule 44 (type_spec)


State 85

   45 type_spec: '[' ']' KW_REAL .

    $default  reduce using rule 45 (type_spec)


State 86

   46 type_spec: '[' ']' KW_BOOL .

    $default  reduce using rule 46 (type_spec)


State 87

   47 type_spec: '[' ']' KW_STRING .

    $default  reduce using rule 47 (type_spec)


State 88

   24 func: KW_CONST decl_id ASSIGN_OP '(' func_param_list ')' . ':' type_spec ARROW_OP '{' body '}'

    ':'  shift, and go to state 98


State 89

   26 func_param_list: func_param_list ',' . func_param
   28 func_param: . param_list ':' type_spec
   29 param_list: . param_list ',' decl_id
   30           | . decl_id
   48 decl_id: . IDENTIFIER
   49        | . IDENTIFIER '[' ']'
   50        | . table_id
   51 table_id: . IDENTIFIER '[' POS_INT ']'

    IDENTIFIER  shift, and go to state 9

    func_param  go to state 99
    param_list  go to state 75
    decl_id     go to state 76
    table_id    go to state 14


State 90

   28 func_param: param_list ':' . type_spec
   40 type_spec: . KW_INT
   41          | . KW_REAL
   42          | . KW_BOOL
   43          | . KW_STRING
   44          | . '[' ']' KW_INT
   45          | . '[' ']' KW_REAL
   46          | . '[' ']' KW_BOOL
   47          | . '[' ']' KW_STRING

    KW_INT     shift, and go to state 40
    KW_REAL    shift, and go to state 41
    KW_BOOL    shift, and go to state 42
    KW_STRING  shift, and go to state 43
    '['        shift, and go to state 44

    type_spec  go to state 100


State 91

   29 param_list: param_list ',' . decl_id
   48 decl_id: . IDENTIFIER
   49        | . IDENTIFIER '[' ']'
   50        | . table_id
   51 table_id: . IDENTIFIER '[' POS_INT ']'

    IDENTIFIER  shift, and go to state 9

    decl_id   go to state 101
    table_id  go to state 14


State 92

   52 table_init: '{' table_init_values '}' .

    $default  reduce using rule 52 (table_init)


State 93

   48 decl_id: . IDENTIFIER
   49        | . IDENTIFIER '[' ']'
   50        | . table_id
   51 table_id: . IDENTIFIER '[' POS_INT ']'
   53 table_init_values: table_init_values ',' . expr
   55 expr: . POS_INT
   56     | . POS_REAL
   57     | . bool
   58     | . decl_id
   59 bool: . KW_TRUE
   60     | . KW_FALSE

    POS_INT     shift, and go to state 48
    POS_REAL    shift, and go to state 49
    KW_TRUE     shift, and go to state 50
    KW_FALSE    shift, and go to state 51
    IDENTIFIER  shift, and go to state 9

    decl_id   go to state 55
    table_id  go to state 14
    expr      go to state 102
    bool      go to state 58


State 94

    3 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' . ':' KW_INT ARROW_OP '{' body '}'

    ':'  shift, and go to state 103


State 95

    1 program: decl_list func_list KW_CONST KW_START ASSIGN_OP '(' . ')' ':' KW_INT ARROW_OP '{' body '}'

    ')'  shift, and go to state 104


State 96

    2 program: func_list KW_CONST KW_START ASSIGN_OP '(' ')' . ':' KW_INT ARROW_OP '{' body '}'

    ':'  shift, and go to state 105


State 97

    4 program: KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT . ARROW_OP '{' body '}'

    ARROW_OP  shift, and go to state 106


State 98

   24 func: KW_CONST decl_id ASSIGN_OP '(' func_param_list ')' ':' . type_spec ARROW_OP '{' body '}'
   40 type_spec: . KW_INT
   41          | . KW_REAL
   42          | . KW_BOOL
   43          | . KW_STRING
   44          | . '[' ']' KW_INT
   45          | . '[' ']' KW_REAL
   46          | . '[' ']' KW_BOOL
   47          | . '[' ']' KW_STRING

    KW_INT     shift, and go to state 40
    KW_REAL    shift, and go to state 41
    KW_BOOL    shift, and go to state 42
    KW_STRING  shift, and go to state 43
    '['        shift, and go to state 44

    type_spec  go to state 107


State 99

   26 func_param_list: func_param_list ',' func_param .

    $default  reduce using rule 26 (func_param_list)


State 100

   28 func_param: param_list ':' type_spec .

    $default  reduce using rule 28 (func_param)


State 101

   29 param_list: param_list ',' decl_id .

    $default  reduce using rule 29 (param_list)


State 102

   53 table_init_values: table_init_values ',' expr .

    $default  reduce using rule 53 (table_init_values)


State 103

    3 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' . KW_INT ARROW_OP '{' body '}'

    KW_INT  shift, and go to state 108


State 104

    1 program: decl_list func_list KW_CONST KW_START ASSIGN_OP '(' ')' . ':' KW_INT ARROW_OP '{' body '}'

    ':'  shift, and go to state 109


State 105

    2 program: func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' . KW_INT ARROW_OP '{' body '}'

    KW_INT  shift, and go to state 110


State 106

    4 program: KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP . '{' body '}'

    '{'  shift, and go to state 111


State 107

   24 func: KW_CONST decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec . ARROW_OP '{' body '}'

    ARROW_OP  shift, and go to state 112


State 108

    3 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT . ARROW_OP '{' body '}'

    ARROW_OP  shift, and go to state 113


State 109

    1 program: decl_list func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' . KW_INT ARROW_OP '{' body '}'

    KW_INT  shift, and go to state 114


State 110

    2 program: func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT . ARROW_OP '{' body '}'

    ARROW_OP  shift, and go to state 115


State 111

    4 program: KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' . body '}'
    7 decl: . KW_CONST const_decl_body
    8     | . KW_LET let_decl_body
   31 body: . commands
   32     | . body_decl_list commands
   33     | . commands return
   34     | . body_decl_list commands return
   35 body_decl_list: . body_decl_list decl
   36               | . decl
   37 commands: . %empty  [KW_RETURN, '}']

    KW_CONST  shift, and go to state 116
    KW_LET    shift, and go to state 2

    $default  reduce using rule 37 (commands)

    decl            go to state 117
    body            go to state 118
    body_decl_list  go to state 119
    commands        go to state 120


State 112

   24 func: KW_CONST decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP . '{' body '}'

    '{'  shift, and go to state 121


State 113

    3 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP . '{' body '}'

    '{'  shift, and go to state 122


State 114

    1 program: decl_list func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT . ARROW_OP '{' body '}'

    ARROW_OP  shift, and go to state 123


State 115

    2 program: func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP . '{' body '}'

    '{'  shift, and go to state 124


State 116

    7 decl: KW_CONST . const_decl_body
    9 const_decl_body: . const_decl_list ':' type_spec ';'
   10 const_decl_list: . const_decl_list ',' const_decl_init
   11                | . const_decl_init
   12 const_decl_init: . decl_id ASSIGN_OP expr
   13                | . decl_id ASSIGN_OP STRING
   14                | . decl_id ASSIGN_OP table_init
   48 decl_id: . IDENTIFIER
   49        | . IDENTIFIER '[' ']'
   50        | . table_id
   51 table_id: . IDENTIFIER '[' POS_INT ']'

    IDENTIFIER  shift, and go to state 9

    const_decl_body  go to state 10
    const_decl_list  go to state 11
    const_decl_init  go to state 12
    decl_id          go to state 47
    table_id         go to state 14


State 117

   36 body_decl_list: decl .

    $default  reduce using rule 36 (body_decl_list)


State 118

    4 program: KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body . '}'

    '}'  shift, and go to state 125


State 119

    7 decl: . KW_CONST const_decl_body
    8     | . KW_LET let_decl_body
   32 body: body_decl_list . commands
   34     | body_decl_list . commands return
   35 body_decl_list: body_decl_list . decl
   37 commands: . %empty  [KW_RETURN, '}']

    KW_CONST  shift, and go to state 116
    KW_LET    shift, and go to state 2

    $default  reduce using rule 37 (commands)

    decl      go to state 126
    commands  go to state 127


State 120

   31 body: commands .  ['}']
   33     | commands . return
   38 return: . KW_RETURN expr ';'
   39       | . KW_RETURN ';'

    KW_RETURN  shift, and go to state 128

    $default  reduce using rule 31 (body)

    return  go to state 129


State 121

    7 decl: . KW_CONST const_decl_body
    8     | . KW_LET let_decl_body
   24 func: KW_CONST decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' . body '}'
   31 body: . commands
   32     | . body_decl_list commands
   33     | . commands return
   34     | . body_decl_list commands return
   35 body_decl_list: . body_decl_list decl
   36               | . decl
   37 commands: . %empty  [KW_RETURN, '}']

    KW_CONST  shift, and go to state 116
    KW_LET    shift, and go to state 2

    $default  reduce using rule 37 (commands)

    decl            go to state 117
    body            go to state 130
    body_decl_list  go to state 119
    commands        go to state 120


State 122

    3 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' . body '}'
    7 decl: . KW_CONST const_decl_body
    8     | . KW_LET let_decl_body
   31 body: . commands
   32     | . body_decl_list commands
   33     | . commands return
   34     | . body_decl_list commands return
   35 body_decl_list: . body_decl_list decl
   36               | . decl
   37 commands: . %empty  [KW_RETURN, '}']

    KW_CONST  shift, and go to state 116
    KW_LET    shift, and go to state 2

    $default  reduce using rule 37 (commands)

    decl            go to state 117
    body            go to state 131
    body_decl_list  go to state 119
    commands        go to state 120


State 123

    1 program: decl_list func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP . '{' body '}'

    '{'  shift, and go to state 132


State 124

    2 program: func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' . body '}'
    7 decl: . KW_CONST const_decl_body
    8     | . KW_LET let_decl_body
   31 body: . commands
   32     | . body_decl_list commands
   33     | . commands return
   34     | . body_decl_list commands return
   35 body_decl_list: . body_decl_list decl
   36               | . decl
   37 commands: . %empty  [KW_RETURN, '}']

    KW_CONST  shift, and go to state 116
    KW_LET    shift, and go to state 2

    $default  reduce using rule 37 (commands)

    decl            go to state 117
    body            go to state 133
    body_decl_list  go to state 119
    commands        go to state 120


State 125

    4 program: KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}' .

    $default  reduce using rule 4 (program)


State 126

   35 body_decl_list: body_decl_list decl .

    $default  reduce using rule 35 (body_decl_list)


State 127

   32 body: body_decl_list commands .  ['}']
   34     | body_decl_list commands . return
   38 return: . KW_RETURN expr ';'
   39       | . KW_RETURN ';'

    KW_RETURN  shift, and go to state 128

    $default  reduce using rule 32 (body)

    return  go to state 134


State 128

   38 return: KW_RETURN . expr ';'
   39       | KW_RETURN . ';'
   48 decl_id: . IDENTIFIER
   49        | . IDENTIFIER '[' ']'
   50        | . table_id
   51 table_id: . IDENTIFIER '[' POS_INT ']'
   55 expr: . POS_INT
   56     | . POS_REAL
   57     | . bool
   58     | . decl_id
   59 bool: . KW_TRUE
   60     | . KW_FALSE

    POS_INT     shift, and go to state 48
    POS_REAL    shift, and go to state 49
    KW_TRUE     shift, and go to state 50
    KW_FALSE    shift, and go to state 51
    IDENTIFIER  shift, and go to state 9
    ';'         shift, and go to state 135

    decl_id   go to state 55
    table_id  go to state 14
    expr      go to state 136
    bool      go to state 58


State 129

   33 body: commands return .

    $default  reduce using rule 33 (body)


State 130

   24 func: KW_CONST decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' body . '}'

    '}'  shift, and go to state 137


State 131

    3 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body . '}'

    '}'  shift, and go to state 138


State 132

    1 program: decl_list func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' . body '}'
    7 decl: . KW_CONST const_decl_body
    8     | . KW_LET let_decl_body
   31 body: . commands
   32     | . body_decl_list commands
   33     | . commands return
   34     | . body_decl_list commands return
   35 body_decl_list: . body_decl_list decl
   36               | . decl
   37 commands: . %empty  [KW_RETURN, '}']

    KW_CONST  shift, and go to state 116
    KW_LET    shift, and go to state 2

    $default  reduce using rule 37 (commands)

    decl            go to state 117
    body            go to state 139
    body_decl_list  go to state 119
    commands        go to state 120


State 133

    2 program: func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body . '}'

    '}'  shift, and go to state 140


State 134

   34 body: body_decl_list commands return .

    $default  reduce using rule 34 (body)


State 135

   39 return: KW_RETURN ';' .

    $default  reduce using rule 39 (return)


State 136

   38 return: KW_RETURN expr . ';'

    ';'  shift, and go to state 141


State 137

   24 func: KW_CONST decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}' .

    $default  reduce using rule 24 (func)


State 138

    3 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}' .

    $default  reduce using rule 3 (program)


State 139

    1 program: decl_list func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body . '}'

    '}'  shift, and go to state 142


State 140

    2 program: func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}' .

    $default  reduce using rule 2 (program)


State 141

   38 return: KW_RETURN expr ';' .

    $default  reduce using rule 38 (return)


State 142

    1 program: decl_list func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}' .

    $default  reduce using rule 1 (program)
