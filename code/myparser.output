Terminals unused in grammar

   KW_IF
   KW_THEN
   KW_ELSE
   KW_FI
   KW_WHILE
   KW_LOOP
   KW_POOL
   KW_BREAK
   KW_RETURN
   DIFFERENT_OP
   EQUAL_LESS_OP
   AND_OP
   OR_OP
   NOT_OP


Grammar

    0 $accept: program $end

    1 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
    2        | KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'

    3 decl_list: decl_list decl
    4          | decl

    5 decl: KW_CONST const_decl_body
    6     | KW_LET let_decl_body

    7 decl_id: IDENTIFIER
    8        | IDENTIFIER '[' ']'

    9 const_decl_body: const_decl_list ':' type_spec ';'

   10 const_decl_list: const_decl_list ',' const_decl_init
   11                | const_decl_init

   12 const_decl_init: decl_id ASSIGN_OP expr
   13                | decl_id ASSIGN_OP bool
   14                | decl_id ASSIGN_OP string
   15                | decl_id ASSIGN_OP IDENTIFIER
   16                | table_id ASSIGN_OP string
   17                | table_id ASSIGN_OP table_init

   18 let_decl_body: let_decl_list ':' type_spec ';'

   19 let_decl_list: let_decl_list ',' let_decl_init
   20              | let_decl_init

   21 let_decl_init: decl_id
   22              | decl_id ASSIGN_OP expr
   23              | decl_id ASSIGN_OP bool
   24              | decl_id ASSIGN_OP string
   25              | decl_id ASSIGN_OP IDENTIFIER
   26              | table_id
   27              | table_id ASSIGN_OP string
   28              | table_id ASSIGN_OP table_init

   29 type_spec: KW_INT
   30          | KW_REAL
   31          | KW_BOOL
   32          | KW_STRING

   33 string: STRING

   34 table_id: IDENTIFIER '[' POS_INT ']'

   35 table_init: '{' table_init_values '}'

   36 table_init_values: table_init_values ',' expr
   37                  | table_init_values ',' bool
   38                  | expr
   39                  | bool

   40 expr: POS_INT
   41     | POS_REAL

   42 bool: KW_TRUE
   43     | KW_FALSE

   44 body: %empty


Terminals, with rules where they appear

$end (0) 0
'(' (40) 1 2
')' (41) 1 2
',' (44) 10 19 36 37
':' (58) 1 2 9 18
';' (59) 9 18
'[' (91) 8 34
']' (93) 8 34
'{' (123) 1 2 35
'}' (125) 1 2 35
error (256)
KW_INT (258) 1 2 29
KW_REAL (259) 30
KW_BOOL (260) 31
KW_STRING (261) 32
KW_IF (262)
KW_THEN (263)
KW_ELSE (264)
KW_FI (265)
KW_WHILE (266)
KW_LOOP (267)
KW_POOL (268)
KW_CONST (269) 1 2 5
KW_LET (270) 6
KW_BREAK (271)
KW_RETURN (272)
KW_START (273) 1 2
DIFFERENT_OP (274)
EQUAL_LESS_OP (275)
AND_OP (276)
OR_OP (277)
NOT_OP (278)
ASSIGN_OP (279) 1 2 12 13 14 15 16 17 22 23 24 25 27 28
ARROW_OP (280) 1 2
POS_INT (281) 34 40
POS_REAL (282) 41
KW_TRUE (283) 42
KW_FALSE (284) 43
IDENTIFIER (285) 7 8 15 25 34
STRING (286) 33


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
program (42)
    on left: 1 2, on right: 0
decl_list (43)
    on left: 3 4, on right: 1 3
decl (44)
    on left: 5 6, on right: 3 4
decl_id (45)
    on left: 7 8, on right: 12 13 14 15 21 22 23 24 25
const_decl_body (46)
    on left: 9, on right: 5
const_decl_list (47)
    on left: 10 11, on right: 9 10
const_decl_init (48)
    on left: 12 13 14 15 16 17, on right: 10 11
let_decl_body (49)
    on left: 18, on right: 6
let_decl_list (50)
    on left: 19 20, on right: 18 19
let_decl_init (51)
    on left: 21 22 23 24 25 26 27 28, on right: 19 20
type_spec (52)
    on left: 29 30 31 32, on right: 9 18
string (53)
    on left: 33, on right: 14 16 24 27
table_id (54)
    on left: 34, on right: 16 17 26 27 28
table_init (55)
    on left: 35, on right: 17 28
table_init_values (56)
    on left: 36 37 38 39, on right: 35 36 37
expr (57)
    on left: 40 41, on right: 12 22 36 38
bool (58)
    on left: 42 43, on right: 13 23 37 39
body (59)
    on left: 44, on right: 1 2


State 0

    0 $accept: . program $end
    1 program: . decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
    2        | . KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
    3 decl_list: . decl_list decl
    4          | . decl
    5 decl: . KW_CONST const_decl_body
    6     | . KW_LET let_decl_body

    KW_CONST  shift, and go to state 1
    KW_LET    shift, and go to state 2

    program    go to state 3
    decl_list  go to state 4
    decl       go to state 5


State 1

    2 program: KW_CONST . KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
    5 decl: KW_CONST . const_decl_body
    7 decl_id: . IDENTIFIER
    8        | . IDENTIFIER '[' ']'
    9 const_decl_body: . const_decl_list ':' type_spec ';'
   10 const_decl_list: . const_decl_list ',' const_decl_init
   11                | . const_decl_init
   12 const_decl_init: . decl_id ASSIGN_OP expr
   13                | . decl_id ASSIGN_OP bool
   14                | . decl_id ASSIGN_OP string
   15                | . decl_id ASSIGN_OP IDENTIFIER
   16                | . table_id ASSIGN_OP string
   17                | . table_id ASSIGN_OP table_init
   34 table_id: . IDENTIFIER '[' POS_INT ']'

    KW_START    shift, and go to state 6
    IDENTIFIER  shift, and go to state 7

    decl_id          go to state 8
    const_decl_body  go to state 9
    const_decl_list  go to state 10
    const_decl_init  go to state 11
    table_id         go to state 12


State 2

    6 decl: KW_LET . let_decl_body
    7 decl_id: . IDENTIFIER
    8        | . IDENTIFIER '[' ']'
   18 let_decl_body: . let_decl_list ':' type_spec ';'
   19 let_decl_list: . let_decl_list ',' let_decl_init
   20              | . let_decl_init
   21 let_decl_init: . decl_id
   22              | . decl_id ASSIGN_OP expr
   23              | . decl_id ASSIGN_OP bool
   24              | . decl_id ASSIGN_OP string
   25              | . decl_id ASSIGN_OP IDENTIFIER
   26              | . table_id
   27              | . table_id ASSIGN_OP string
   28              | . table_id ASSIGN_OP table_init
   34 table_id: . IDENTIFIER '[' POS_INT ']'

    IDENTIFIER  shift, and go to state 7

    decl_id        go to state 13
    let_decl_body  go to state 14
    let_decl_list  go to state 15
    let_decl_init  go to state 16
    table_id       go to state 17


State 3

    0 $accept: program . $end

    $end  shift, and go to state 18


State 4

    1 program: decl_list . KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
    3 decl_list: decl_list . decl
    5 decl: . KW_CONST const_decl_body
    6     | . KW_LET let_decl_body

    KW_CONST  shift, and go to state 19
    KW_LET    shift, and go to state 2

    decl  go to state 20


State 5

    4 decl_list: decl .

    $default  reduce using rule 4 (decl_list)


State 6

    2 program: KW_CONST KW_START . ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'

    ASSIGN_OP  shift, and go to state 21


State 7

    7 decl_id: IDENTIFIER .  [ASSIGN_OP, ':', ',']
    8        | IDENTIFIER . '[' ']'
   34 table_id: IDENTIFIER . '[' POS_INT ']'

    '['  shift, and go to state 22

    $default  reduce using rule 7 (decl_id)


State 8

   12 const_decl_init: decl_id . ASSIGN_OP expr
   13                | decl_id . ASSIGN_OP bool
   14                | decl_id . ASSIGN_OP string
   15                | decl_id . ASSIGN_OP IDENTIFIER

    ASSIGN_OP  shift, and go to state 23


State 9

    5 decl: KW_CONST const_decl_body .

    $default  reduce using rule 5 (decl)


State 10

    9 const_decl_body: const_decl_list . ':' type_spec ';'
   10 const_decl_list: const_decl_list . ',' const_decl_init

    ':'  shift, and go to state 24
    ','  shift, and go to state 25


State 11

   11 const_decl_list: const_decl_init .

    $default  reduce using rule 11 (const_decl_list)


State 12

   16 const_decl_init: table_id . ASSIGN_OP string
   17                | table_id . ASSIGN_OP table_init

    ASSIGN_OP  shift, and go to state 26


State 13

   21 let_decl_init: decl_id .  [':', ',']
   22              | decl_id . ASSIGN_OP expr
   23              | decl_id . ASSIGN_OP bool
   24              | decl_id . ASSIGN_OP string
   25              | decl_id . ASSIGN_OP IDENTIFIER

    ASSIGN_OP  shift, and go to state 27

    $default  reduce using rule 21 (let_decl_init)


State 14

    6 decl: KW_LET let_decl_body .

    $default  reduce using rule 6 (decl)


State 15

   18 let_decl_body: let_decl_list . ':' type_spec ';'
   19 let_decl_list: let_decl_list . ',' let_decl_init

    ':'  shift, and go to state 28
    ','  shift, and go to state 29


State 16

   20 let_decl_list: let_decl_init .

    $default  reduce using rule 20 (let_decl_list)


State 17

   26 let_decl_init: table_id .  [':', ',']
   27              | table_id . ASSIGN_OP string
   28              | table_id . ASSIGN_OP table_init

    ASSIGN_OP  shift, and go to state 30

    $default  reduce using rule 26 (let_decl_init)


State 18

    0 $accept: program $end .

    $default  accept


State 19

    1 program: decl_list KW_CONST . KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
    5 decl: KW_CONST . const_decl_body
    7 decl_id: . IDENTIFIER
    8        | . IDENTIFIER '[' ']'
    9 const_decl_body: . const_decl_list ':' type_spec ';'
   10 const_decl_list: . const_decl_list ',' const_decl_init
   11                | . const_decl_init
   12 const_decl_init: . decl_id ASSIGN_OP expr
   13                | . decl_id ASSIGN_OP bool
   14                | . decl_id ASSIGN_OP string
   15                | . decl_id ASSIGN_OP IDENTIFIER
   16                | . table_id ASSIGN_OP string
   17                | . table_id ASSIGN_OP table_init
   34 table_id: . IDENTIFIER '[' POS_INT ']'

    KW_START    shift, and go to state 31
    IDENTIFIER  shift, and go to state 7

    decl_id          go to state 8
    const_decl_body  go to state 9
    const_decl_list  go to state 10
    const_decl_init  go to state 11
    table_id         go to state 12


State 20

    3 decl_list: decl_list decl .

    $default  reduce using rule 3 (decl_list)


State 21

    2 program: KW_CONST KW_START ASSIGN_OP . '(' ')' ':' KW_INT ARROW_OP '{' body '}'

    '('  shift, and go to state 32


State 22

    8 decl_id: IDENTIFIER '[' . ']'
   34 table_id: IDENTIFIER '[' . POS_INT ']'

    POS_INT  shift, and go to state 33
    ']'      shift, and go to state 34


State 23

   12 const_decl_init: decl_id ASSIGN_OP . expr
   13                | decl_id ASSIGN_OP . bool
   14                | decl_id ASSIGN_OP . string
   15                | decl_id ASSIGN_OP . IDENTIFIER
   33 string: . STRING
   40 expr: . POS_INT
   41     | . POS_REAL
   42 bool: . KW_TRUE
   43     | . KW_FALSE

    POS_INT     shift, and go to state 35
    POS_REAL    shift, and go to state 36
    KW_TRUE     shift, and go to state 37
    KW_FALSE    shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    STRING      shift, and go to state 40

    string  go to state 41
    expr    go to state 42
    bool    go to state 43


State 24

    9 const_decl_body: const_decl_list ':' . type_spec ';'
   29 type_spec: . KW_INT
   30          | . KW_REAL
   31          | . KW_BOOL
   32          | . KW_STRING

    KW_INT     shift, and go to state 44
    KW_REAL    shift, and go to state 45
    KW_BOOL    shift, and go to state 46
    KW_STRING  shift, and go to state 47

    type_spec  go to state 48


State 25

    7 decl_id: . IDENTIFIER
    8        | . IDENTIFIER '[' ']'
   10 const_decl_list: const_decl_list ',' . const_decl_init
   12 const_decl_init: . decl_id ASSIGN_OP expr
   13                | . decl_id ASSIGN_OP bool
   14                | . decl_id ASSIGN_OP string
   15                | . decl_id ASSIGN_OP IDENTIFIER
   16                | . table_id ASSIGN_OP string
   17                | . table_id ASSIGN_OP table_init
   34 table_id: . IDENTIFIER '[' POS_INT ']'

    IDENTIFIER  shift, and go to state 7

    decl_id          go to state 8
    const_decl_init  go to state 49
    table_id         go to state 12


State 26

   16 const_decl_init: table_id ASSIGN_OP . string
   17                | table_id ASSIGN_OP . table_init
   33 string: . STRING
   35 table_init: . '{' table_init_values '}'

    STRING  shift, and go to state 40
    '{'     shift, and go to state 50

    string      go to state 51
    table_init  go to state 52


State 27

   22 let_decl_init: decl_id ASSIGN_OP . expr
   23              | decl_id ASSIGN_OP . bool
   24              | decl_id ASSIGN_OP . string
   25              | decl_id ASSIGN_OP . IDENTIFIER
   33 string: . STRING
   40 expr: . POS_INT
   41     | . POS_REAL
   42 bool: . KW_TRUE
   43     | . KW_FALSE

    POS_INT     shift, and go to state 35
    POS_REAL    shift, and go to state 36
    KW_TRUE     shift, and go to state 37
    KW_FALSE    shift, and go to state 38
    IDENTIFIER  shift, and go to state 53
    STRING      shift, and go to state 40

    string  go to state 54
    expr    go to state 55
    bool    go to state 56


State 28

   18 let_decl_body: let_decl_list ':' . type_spec ';'
   29 type_spec: . KW_INT
   30          | . KW_REAL
   31          | . KW_BOOL
   32          | . KW_STRING

    KW_INT     shift, and go to state 44
    KW_REAL    shift, and go to state 45
    KW_BOOL    shift, and go to state 46
    KW_STRING  shift, and go to state 47

    type_spec  go to state 57


State 29

    7 decl_id: . IDENTIFIER
    8        | . IDENTIFIER '[' ']'
   19 let_decl_list: let_decl_list ',' . let_decl_init
   21 let_decl_init: . decl_id
   22              | . decl_id ASSIGN_OP expr
   23              | . decl_id ASSIGN_OP bool
   24              | . decl_id ASSIGN_OP string
   25              | . decl_id ASSIGN_OP IDENTIFIER
   26              | . table_id
   27              | . table_id ASSIGN_OP string
   28              | . table_id ASSIGN_OP table_init
   34 table_id: . IDENTIFIER '[' POS_INT ']'

    IDENTIFIER  shift, and go to state 7

    decl_id        go to state 13
    let_decl_init  go to state 58
    table_id       go to state 17


State 30

   27 let_decl_init: table_id ASSIGN_OP . string
   28              | table_id ASSIGN_OP . table_init
   33 string: . STRING
   35 table_init: . '{' table_init_values '}'

    STRING  shift, and go to state 40
    '{'     shift, and go to state 50

    string      go to state 59
    table_init  go to state 60


State 31

    1 program: decl_list KW_CONST KW_START . ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'

    ASSIGN_OP  shift, and go to state 61


State 32

    2 program: KW_CONST KW_START ASSIGN_OP '(' . ')' ':' KW_INT ARROW_OP '{' body '}'

    ')'  shift, and go to state 62


State 33

   34 table_id: IDENTIFIER '[' POS_INT . ']'

    ']'  shift, and go to state 63


State 34

    8 decl_id: IDENTIFIER '[' ']' .

    $default  reduce using rule 8 (decl_id)


State 35

   40 expr: POS_INT .

    $default  reduce using rule 40 (expr)


State 36

   41 expr: POS_REAL .

    $default  reduce using rule 41 (expr)


State 37

   42 bool: KW_TRUE .

    $default  reduce using rule 42 (bool)


State 38

   43 bool: KW_FALSE .

    $default  reduce using rule 43 (bool)


State 39

   15 const_decl_init: decl_id ASSIGN_OP IDENTIFIER .

    $default  reduce using rule 15 (const_decl_init)


State 40

   33 string: STRING .

    $default  reduce using rule 33 (string)


State 41

   14 const_decl_init: decl_id ASSIGN_OP string .

    $default  reduce using rule 14 (const_decl_init)


State 42

   12 const_decl_init: decl_id ASSIGN_OP expr .

    $default  reduce using rule 12 (const_decl_init)


State 43

   13 const_decl_init: decl_id ASSIGN_OP bool .

    $default  reduce using rule 13 (const_decl_init)


State 44

   29 type_spec: KW_INT .

    $default  reduce using rule 29 (type_spec)


State 45

   30 type_spec: KW_REAL .

    $default  reduce using rule 30 (type_spec)


State 46

   31 type_spec: KW_BOOL .

    $default  reduce using rule 31 (type_spec)


State 47

   32 type_spec: KW_STRING .

    $default  reduce using rule 32 (type_spec)


State 48

    9 const_decl_body: const_decl_list ':' type_spec . ';'

    ';'  shift, and go to state 64


State 49

   10 const_decl_list: const_decl_list ',' const_decl_init .

    $default  reduce using rule 10 (const_decl_list)


State 50

   35 table_init: '{' . table_init_values '}'
   36 table_init_values: . table_init_values ',' expr
   37                  | . table_init_values ',' bool
   38                  | . expr
   39                  | . bool
   40 expr: . POS_INT
   41     | . POS_REAL
   42 bool: . KW_TRUE
   43     | . KW_FALSE

    POS_INT   shift, and go to state 35
    POS_REAL  shift, and go to state 36
    KW_TRUE   shift, and go to state 37
    KW_FALSE  shift, and go to state 38

    table_init_values  go to state 65
    expr               go to state 66
    bool               go to state 67


State 51

   16 const_decl_init: table_id ASSIGN_OP string .

    $default  reduce using rule 16 (const_decl_init)


State 52

   17 const_decl_init: table_id ASSIGN_OP table_init .

    $default  reduce using rule 17 (const_decl_init)


State 53

   25 let_decl_init: decl_id ASSIGN_OP IDENTIFIER .

    $default  reduce using rule 25 (let_decl_init)


State 54

   24 let_decl_init: decl_id ASSIGN_OP string .

    $default  reduce using rule 24 (let_decl_init)


State 55

   22 let_decl_init: decl_id ASSIGN_OP expr .

    $default  reduce using rule 22 (let_decl_init)


State 56

   23 let_decl_init: decl_id ASSIGN_OP bool .

    $default  reduce using rule 23 (let_decl_init)


State 57

   18 let_decl_body: let_decl_list ':' type_spec . ';'

    ';'  shift, and go to state 68


State 58

   19 let_decl_list: let_decl_list ',' let_decl_init .

    $default  reduce using rule 19 (let_decl_list)


State 59

   27 let_decl_init: table_id ASSIGN_OP string .

    $default  reduce using rule 27 (let_decl_init)


State 60

   28 let_decl_init: table_id ASSIGN_OP table_init .

    $default  reduce using rule 28 (let_decl_init)


State 61

    1 program: decl_list KW_CONST KW_START ASSIGN_OP . '(' ')' ':' KW_INT ARROW_OP '{' body '}'

    '('  shift, and go to state 69


State 62

    2 program: KW_CONST KW_START ASSIGN_OP '(' ')' . ':' KW_INT ARROW_OP '{' body '}'

    ':'  shift, and go to state 70


State 63

   34 table_id: IDENTIFIER '[' POS_INT ']' .

    $default  reduce using rule 34 (table_id)


State 64

    9 const_decl_body: const_decl_list ':' type_spec ';' .

    $default  reduce using rule 9 (const_decl_body)


State 65

   35 table_init: '{' table_init_values . '}'
   36 table_init_values: table_init_values . ',' expr
   37                  | table_init_values . ',' bool

    '}'  shift, and go to state 71
    ','  shift, and go to state 72


State 66

   38 table_init_values: expr .

    $default  reduce using rule 38 (table_init_values)


State 67

   39 table_init_values: bool .

    $default  reduce using rule 39 (table_init_values)


State 68

   18 let_decl_body: let_decl_list ':' type_spec ';' .

    $default  reduce using rule 18 (let_decl_body)


State 69

    1 program: decl_list KW_CONST KW_START ASSIGN_OP '(' . ')' ':' KW_INT ARROW_OP '{' body '}'

    ')'  shift, and go to state 73


State 70

    2 program: KW_CONST KW_START ASSIGN_OP '(' ')' ':' . KW_INT ARROW_OP '{' body '}'

    KW_INT  shift, and go to state 74


State 71

   35 table_init: '{' table_init_values '}' .

    $default  reduce using rule 35 (table_init)


State 72

   36 table_init_values: table_init_values ',' . expr
   37                  | table_init_values ',' . bool
   40 expr: . POS_INT
   41     | . POS_REAL
   42 bool: . KW_TRUE
   43     | . KW_FALSE

    POS_INT   shift, and go to state 35
    POS_REAL  shift, and go to state 36
    KW_TRUE   shift, and go to state 37
    KW_FALSE  shift, and go to state 38

    expr  go to state 75
    bool  go to state 76


State 73

    1 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' . ':' KW_INT ARROW_OP '{' body '}'

    ':'  shift, and go to state 77


State 74

    2 program: KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT . ARROW_OP '{' body '}'

    ARROW_OP  shift, and go to state 78


State 75

   36 table_init_values: table_init_values ',' expr .

    $default  reduce using rule 36 (table_init_values)


State 76

   37 table_init_values: table_init_values ',' bool .

    $default  reduce using rule 37 (table_init_values)


State 77

    1 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' . KW_INT ARROW_OP '{' body '}'

    KW_INT  shift, and go to state 79


State 78

    2 program: KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP . '{' body '}'

    '{'  shift, and go to state 80


State 79

    1 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT . ARROW_OP '{' body '}'

    ARROW_OP  shift, and go to state 81


State 80

    2 program: KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' . body '}'
   44 body: . %empty

    $default  reduce using rule 44 (body)

    body  go to state 82


State 81

    1 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP . '{' body '}'

    '{'  shift, and go to state 83


State 82

    2 program: KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body . '}'

    '}'  shift, and go to state 84


State 83

    1 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' . body '}'
   44 body: . %empty

    $default  reduce using rule 44 (body)

    body  go to state 85


State 84

    2 program: KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}' .

    $default  reduce using rule 2 (program)


State 85

    1 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body . '}'

    '}'  shift, and go to state 86


State 86

    1 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}' .

    $default  reduce using rule 1 (program)
