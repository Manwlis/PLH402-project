Terminals unused in grammar

   KW_IF
   KW_THEN
   KW_ELSE
   KW_FI
   KW_WHILE
   KW_LOOP
   KW_POOL
   KW_BREAK


Grammar

    0 $accept: program $end

    1 program: decl_list func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
    2        | func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
    3        | decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
    4        | KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'

    5 type_spec: KW_INT
    6          | KW_REAL
    7          | KW_BOOL
    8          | KW_STRING
    9          | '[' ']' KW_INT
   10          | '[' ']' KW_REAL
   11          | '[' ']' KW_BOOL
   12          | '[' ']' KW_STRING

   13 decl_id: IDENTIFIER
   14        | IDENTIFIER '[' ']'
   15        | table_id

   16 table_id: IDENTIFIER '[' expr ']'

   17 table_init: '{' table_init_values '}'

   18 table_init_values: table_init_values ',' expr
   19                  | expr

   20 decl_list: decl_list decl
   21          | decl

   22 decl: KW_CONST const_decl_body
   23     | KW_LET let_decl_body

   24 let_decl_body: let_decl_list ':' type_spec ';'

   25 let_decl_list: let_decl_list ',' let_decl_init
   26              | let_decl_init

   27 let_decl_init: decl_id
   28              | decl_id ASSIGN_OP expr
   29              | decl_id ASSIGN_OP STRING
   30              | decl_id ASSIGN_OP table_init

   31 const_decl_body: const_decl_list ':' type_spec ';'

   32 const_decl_list: const_decl_list ',' const_decl_init
   33                | const_decl_init

   34 const_decl_init: decl_id ASSIGN_OP expr
   35                | decl_id ASSIGN_OP STRING
   36                | decl_id ASSIGN_OP table_init

   37 func_list: func_list func
   38          | func

   39 func: KW_CONST decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}'

   40 func_param_list: %empty
   41                | func_param_list ',' func_param
   42                | func_param

   43 func_param: param_list ':' type_spec

   44 param_list: param_list ',' decl_id
   45           | decl_id

   46 body: instr_list
   47     | body_decl_list instr_list

   48 body_decl_list: body_decl_list decl
   49               | decl

   50 instr_list: instr_list instr
   51           | instr

   52 expr: term '+' expr
   53     | term '-' expr
   54     | term '*' expr
   55     | term '/' expr
   56     | term '%' expr
   57     | term '=' expr
   58     | term '<' expr
   59     | term EQUAL_LESS_OP expr
   60     | term DIFFERENT_OP expr
   61     | term AND_OP expr
   62     | term OR_OP expr
   63     | term

   64 term: POS_INT
   65     | POS_REAL
   66     | bool
   67     | decl_id
   68     | func_call
   69     | '(' expr ')'
   70     | '-' term
   71     | '+' term
   72     | NOT_OP term

   73 bool: KW_TRUE
   74     | KW_FALSE

   75 func_call: IDENTIFIER '(' func_stm ')'
   76          | IDENTIFIER '(' ')'

   77 func_stm: func_stm ',' expr
   78         | expr

   79 instr: instr_func_call
   80      | instr_assigment
   81      | return

   82 instr_assigment: decl_id ASSIGN_OP expr ';'

   83 return: KW_RETURN expr ';'
   84       | KW_RETURN ';'

   85 instr_func_call: func_call ';'


Terminals, with rules where they appear

$end (0) 0
'%' (37) 56
'(' (40) 1 2 3 4 39 69 75 76
')' (41) 1 2 3 4 39 69 75 76
'*' (42) 54
'+' (43) 52 71
',' (44) 18 25 32 41 44 77
'-' (45) 53 70
'/' (47) 55
':' (58) 1 2 3 4 24 31 39 43
';' (59) 24 31 82 83 84 85
'<' (60) 58
'=' (61) 57
'[' (91) 9 10 11 12 14 16
']' (93) 9 10 11 12 14 16
'{' (123) 1 2 3 4 17 39
'}' (125) 1 2 3 4 17 39
error (256)
KW_INT (258) 1 2 3 4 5 9
KW_REAL (259) 6 10
KW_BOOL (260) 7 11
KW_STRING (261) 8 12
KW_IF (262)
KW_THEN (263)
KW_ELSE (264)
KW_FI (265)
KW_WHILE (266)
KW_LOOP (267)
KW_POOL (268)
KW_CONST (269) 1 2 3 4 22 39
KW_LET (270) 23
KW_BREAK (271)
KW_RETURN (272) 83 84
KW_START (273) 1 2 3 4
DIFFERENT_OP (274) 60
EQUAL_LESS_OP (275) 59
AND_OP (276) 61
OR_OP (277) 62
NOT_OP (278) 72
ASSIGN_OP (279) 1 2 3 4 28 29 30 34 35 36 39 82
ARROW_OP (280) 1 2 3 4 39
POS_INT (281) 64
POS_REAL (282) 65
KW_TRUE (283) 73
KW_FALSE (284) 74
IDENTIFIER (285) 13 14 16 75 76
STRING (286) 29 35


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1 2 3 4, on right: 0
type_spec (50)
    on left: 5 6 7 8 9 10 11 12, on right: 24 31 39 43
decl_id (51)
    on left: 13 14 15, on right: 27 28 29 30 34 35 36 39 44 45 67 82
table_id (52)
    on left: 16, on right: 15
table_init (53)
    on left: 17, on right: 30 36
table_init_values (54)
    on left: 18 19, on right: 17 18
decl_list (55)
    on left: 20 21, on right: 1 3 20
decl (56)
    on left: 22 23, on right: 20 21 48 49
let_decl_body (57)
    on left: 24, on right: 23
let_decl_list (58)
    on left: 25 26, on right: 24 25
let_decl_init (59)
    on left: 27 28 29 30, on right: 25 26
const_decl_body (60)
    on left: 31, on right: 22
const_decl_list (61)
    on left: 32 33, on right: 31 32
const_decl_init (62)
    on left: 34 35 36, on right: 32 33
func_list (63)
    on left: 37 38, on right: 1 2 37
func (64)
    on left: 39, on right: 37 38
func_param_list (65)
    on left: 40 41 42, on right: 39 41
func_param (66)
    on left: 43, on right: 41 42
param_list (67)
    on left: 44 45, on right: 43 44
body (68)
    on left: 46 47, on right: 1 2 3 4 39
body_decl_list (69)
    on left: 48 49, on right: 47 48
instr_list (70)
    on left: 50 51, on right: 46 47 50
expr (71)
    on left: 52 53 54 55 56 57 58 59 60 61 62 63, on right: 16 18 19
    28 34 52 53 54 55 56 57 58 59 60 61 62 69 77 78 82 83
term (72)
    on left: 64 65 66 67 68 69 70 71 72, on right: 52 53 54 55 56 57
    58 59 60 61 62 63 70 71 72
bool (73)
    on left: 73 74, on right: 66
func_call (74)
    on left: 75 76, on right: 68 85
func_stm (75)
    on left: 77 78, on right: 75 77
instr (76)
    on left: 79 80 81, on right: 50 51
instr_assigment (77)
    on left: 82, on right: 80
return (78)
    on left: 83 84, on right: 81
instr_func_call (79)
    on left: 85, on right: 79


State 0

    0 $accept: . program $end
    1 program: . decl_list func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
    2        | . func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
    3        | . decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
    4        | . KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
   20 decl_list: . decl_list decl
   21          | . decl
   22 decl: . KW_CONST const_decl_body
   23     | . KW_LET let_decl_body
   37 func_list: . func_list func
   38          | . func
   39 func: . KW_CONST decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}'

    KW_CONST  shift, and go to state 1
    KW_LET    shift, and go to state 2

    program    go to state 3
    decl_list  go to state 4
    decl       go to state 5
    func_list  go to state 6
    func       go to state 7


State 1

    4 program: KW_CONST . KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   22 decl: KW_CONST . const_decl_body
   31 const_decl_body: . const_decl_list ':' type_spec ';'
   32 const_decl_list: . const_decl_list ',' const_decl_init
   33                | . const_decl_init
   34 const_decl_init: . decl_id ASSIGN_OP expr
   35                | . decl_id ASSIGN_OP STRING
   36                | . decl_id ASSIGN_OP table_init
   39 func: KW_CONST . decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}'

    KW_START    shift, and go to state 8
    IDENTIFIER  shift, and go to state 9

    decl_id          go to state 10
    table_id         go to state 11
    const_decl_body  go to state 12
    const_decl_list  go to state 13
    const_decl_init  go to state 14


State 2

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   23 decl: KW_LET . let_decl_body
   24 let_decl_body: . let_decl_list ':' type_spec ';'
   25 let_decl_list: . let_decl_list ',' let_decl_init
   26              | . let_decl_init
   27 let_decl_init: . decl_id
   28              | . decl_id ASSIGN_OP expr
   29              | . decl_id ASSIGN_OP STRING
   30              | . decl_id ASSIGN_OP table_init

    IDENTIFIER  shift, and go to state 9

    decl_id        go to state 15
    table_id       go to state 11
    let_decl_body  go to state 16
    let_decl_list  go to state 17
    let_decl_init  go to state 18


State 3

    0 $accept: program . $end

    $end  shift, and go to state 19


State 4

    1 program: decl_list . func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
    3        | decl_list . KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
   20 decl_list: decl_list . decl
   22 decl: . KW_CONST const_decl_body
   23     | . KW_LET let_decl_body
   37 func_list: . func_list func
   38          | . func
   39 func: . KW_CONST decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}'

    KW_CONST  shift, and go to state 20
    KW_LET    shift, and go to state 2

    decl       go to state 21
    func_list  go to state 22
    func       go to state 7


State 5

   21 decl_list: decl .

    $default  reduce using rule 21 (decl_list)


State 6

    2 program: func_list . KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
   37 func_list: func_list . func
   39 func: . KW_CONST decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}'

    KW_CONST  shift, and go to state 23

    func  go to state 24


State 7

   38 func_list: func .

    $default  reduce using rule 38 (func_list)


State 8

    4 program: KW_CONST KW_START . ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'

    ASSIGN_OP  shift, and go to state 25


State 9

   13 decl_id: IDENTIFIER .  [ASSIGN_OP, ':', ',']
   14        | IDENTIFIER . '[' ']'
   16 table_id: IDENTIFIER . '[' expr ']'

    '['  shift, and go to state 26

    $default  reduce using rule 13 (decl_id)


State 10

   34 const_decl_init: decl_id . ASSIGN_OP expr
   35                | decl_id . ASSIGN_OP STRING
   36                | decl_id . ASSIGN_OP table_init
   39 func: KW_CONST decl_id . ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}'

    ASSIGN_OP  shift, and go to state 27


State 11

   15 decl_id: table_id .

    $default  reduce using rule 15 (decl_id)


State 12

   22 decl: KW_CONST const_decl_body .

    $default  reduce using rule 22 (decl)


State 13

   31 const_decl_body: const_decl_list . ':' type_spec ';'
   32 const_decl_list: const_decl_list . ',' const_decl_init

    ':'  shift, and go to state 28
    ','  shift, and go to state 29


State 14

   33 const_decl_list: const_decl_init .

    $default  reduce using rule 33 (const_decl_list)


State 15

   27 let_decl_init: decl_id .  [':', ',']
   28              | decl_id . ASSIGN_OP expr
   29              | decl_id . ASSIGN_OP STRING
   30              | decl_id . ASSIGN_OP table_init

    ASSIGN_OP  shift, and go to state 30

    $default  reduce using rule 27 (let_decl_init)


State 16

   23 decl: KW_LET let_decl_body .

    $default  reduce using rule 23 (decl)


State 17

   24 let_decl_body: let_decl_list . ':' type_spec ';'
   25 let_decl_list: let_decl_list . ',' let_decl_init

    ':'  shift, and go to state 31
    ','  shift, and go to state 32


State 18

   26 let_decl_list: let_decl_init .

    $default  reduce using rule 26 (let_decl_list)


State 19

    0 $accept: program $end .

    $default  accept


State 20

    3 program: decl_list KW_CONST . KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   22 decl: KW_CONST . const_decl_body
   31 const_decl_body: . const_decl_list ':' type_spec ';'
   32 const_decl_list: . const_decl_list ',' const_decl_init
   33                | . const_decl_init
   34 const_decl_init: . decl_id ASSIGN_OP expr
   35                | . decl_id ASSIGN_OP STRING
   36                | . decl_id ASSIGN_OP table_init
   39 func: KW_CONST . decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}'

    KW_START    shift, and go to state 33
    IDENTIFIER  shift, and go to state 9

    decl_id          go to state 10
    table_id         go to state 11
    const_decl_body  go to state 12
    const_decl_list  go to state 13
    const_decl_init  go to state 14


State 21

   20 decl_list: decl_list decl .

    $default  reduce using rule 20 (decl_list)


State 22

    1 program: decl_list func_list . KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
   37 func_list: func_list . func
   39 func: . KW_CONST decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}'

    KW_CONST  shift, and go to state 34

    func  go to state 24


State 23

    2 program: func_list KW_CONST . KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   39 func: KW_CONST . decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}'

    KW_START    shift, and go to state 35
    IDENTIFIER  shift, and go to state 9

    decl_id   go to state 36
    table_id  go to state 11


State 24

   37 func_list: func_list func .

    $default  reduce using rule 37 (func_list)


State 25

    4 program: KW_CONST KW_START ASSIGN_OP . '(' ')' ':' KW_INT ARROW_OP '{' body '}'

    '('  shift, and go to state 37


State 26

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   14        | IDENTIFIER '[' . ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   16         | IDENTIFIER '[' . expr ']'
   52 expr: . term '+' expr
   53     | . term '-' expr
   54     | . term '*' expr
   55     | . term '/' expr
   56     | . term '%' expr
   57     | . term '=' expr
   58     | . term '<' expr
   59     | . term EQUAL_LESS_OP expr
   60     | . term DIFFERENT_OP expr
   61     | . term AND_OP expr
   62     | . term OR_OP expr
   63     | . term
   64 term: . POS_INT
   65     | . POS_REAL
   66     | . bool
   67     | . decl_id
   68     | . func_call
   69     | . '(' expr ')'
   70     | . '-' term
   71     | . '+' term
   72     | . NOT_OP term
   73 bool: . KW_TRUE
   74     | . KW_FALSE
   75 func_call: . IDENTIFIER '(' func_stm ')'
   76          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '('         shift, and go to state 44
    ']'         shift, and go to state 45
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47

    decl_id    go to state 48
    table_id   go to state 11
    expr       go to state 49
    term       go to state 50
    bool       go to state 51
    func_call  go to state 52


State 27

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   17 table_init: . '{' table_init_values '}'
   34 const_decl_init: decl_id ASSIGN_OP . expr
   35                | decl_id ASSIGN_OP . STRING
   36                | decl_id ASSIGN_OP . table_init
   39 func: KW_CONST decl_id ASSIGN_OP . '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}'
   52 expr: . term '+' expr
   53     | . term '-' expr
   54     | . term '*' expr
   55     | . term '/' expr
   56     | . term '%' expr
   57     | . term '=' expr
   58     | . term '<' expr
   59     | . term EQUAL_LESS_OP expr
   60     | . term DIFFERENT_OP expr
   61     | . term AND_OP expr
   62     | . term OR_OP expr
   63     | . term
   64 term: . POS_INT
   65     | . POS_REAL
   66     | . bool
   67     | . decl_id
   68     | . func_call
   69     | . '(' expr ')'
   70     | . '-' term
   71     | . '+' term
   72     | . NOT_OP term
   73 bool: . KW_TRUE
   74     | . KW_FALSE
   75 func_call: . IDENTIFIER '(' func_stm ')'
   76          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    STRING      shift, and go to state 53
    '('         shift, and go to state 54
    '{'         shift, and go to state 55
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47

    decl_id     go to state 48
    table_id    go to state 11
    table_init  go to state 56
    expr        go to state 57
    term        go to state 50
    bool        go to state 51
    func_call   go to state 52


State 28

    5 type_spec: . KW_INT
    6          | . KW_REAL
    7          | . KW_BOOL
    8          | . KW_STRING
    9          | . '[' ']' KW_INT
   10          | . '[' ']' KW_REAL
   11          | . '[' ']' KW_BOOL
   12          | . '[' ']' KW_STRING
   31 const_decl_body: const_decl_list ':' . type_spec ';'

    KW_INT     shift, and go to state 58
    KW_REAL    shift, and go to state 59
    KW_BOOL    shift, and go to state 60
    KW_STRING  shift, and go to state 61
    '['        shift, and go to state 62

    type_spec  go to state 63


State 29

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   32 const_decl_list: const_decl_list ',' . const_decl_init
   34 const_decl_init: . decl_id ASSIGN_OP expr
   35                | . decl_id ASSIGN_OP STRING
   36                | . decl_id ASSIGN_OP table_init

    IDENTIFIER  shift, and go to state 9

    decl_id          go to state 64
    table_id         go to state 11
    const_decl_init  go to state 65


State 30

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   17 table_init: . '{' table_init_values '}'
   28 let_decl_init: decl_id ASSIGN_OP . expr
   29              | decl_id ASSIGN_OP . STRING
   30              | decl_id ASSIGN_OP . table_init
   52 expr: . term '+' expr
   53     | . term '-' expr
   54     | . term '*' expr
   55     | . term '/' expr
   56     | . term '%' expr
   57     | . term '=' expr
   58     | . term '<' expr
   59     | . term EQUAL_LESS_OP expr
   60     | . term DIFFERENT_OP expr
   61     | . term AND_OP expr
   62     | . term OR_OP expr
   63     | . term
   64 term: . POS_INT
   65     | . POS_REAL
   66     | . bool
   67     | . decl_id
   68     | . func_call
   69     | . '(' expr ')'
   70     | . '-' term
   71     | . '+' term
   72     | . NOT_OP term
   73 bool: . KW_TRUE
   74     | . KW_FALSE
   75 func_call: . IDENTIFIER '(' func_stm ')'
   76          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    STRING      shift, and go to state 66
    '('         shift, and go to state 44
    '{'         shift, and go to state 55
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47

    decl_id     go to state 48
    table_id    go to state 11
    table_init  go to state 67
    expr        go to state 68
    term        go to state 50
    bool        go to state 51
    func_call   go to state 52


State 31

    5 type_spec: . KW_INT
    6          | . KW_REAL
    7          | . KW_BOOL
    8          | . KW_STRING
    9          | . '[' ']' KW_INT
   10          | . '[' ']' KW_REAL
   11          | . '[' ']' KW_BOOL
   12          | . '[' ']' KW_STRING
   24 let_decl_body: let_decl_list ':' . type_spec ';'

    KW_INT     shift, and go to state 58
    KW_REAL    shift, and go to state 59
    KW_BOOL    shift, and go to state 60
    KW_STRING  shift, and go to state 61
    '['        shift, and go to state 62

    type_spec  go to state 69


State 32

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   25 let_decl_list: let_decl_list ',' . let_decl_init
   27 let_decl_init: . decl_id
   28              | . decl_id ASSIGN_OP expr
   29              | . decl_id ASSIGN_OP STRING
   30              | . decl_id ASSIGN_OP table_init

    IDENTIFIER  shift, and go to state 9

    decl_id        go to state 15
    table_id       go to state 11
    let_decl_init  go to state 70


State 33

    3 program: decl_list KW_CONST KW_START . ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'

    ASSIGN_OP  shift, and go to state 71


State 34

    1 program: decl_list func_list KW_CONST . KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   39 func: KW_CONST . decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}'

    KW_START    shift, and go to state 72
    IDENTIFIER  shift, and go to state 9

    decl_id   go to state 36
    table_id  go to state 11


State 35

    2 program: func_list KW_CONST KW_START . ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'

    ASSIGN_OP  shift, and go to state 73


State 36

   39 func: KW_CONST decl_id . ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}'

    ASSIGN_OP  shift, and go to state 74


State 37

    4 program: KW_CONST KW_START ASSIGN_OP '(' . ')' ':' KW_INT ARROW_OP '{' body '}'

    ')'  shift, and go to state 75


State 38

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   64 term: . POS_INT
   65     | . POS_REAL
   66     | . bool
   67     | . decl_id
   68     | . func_call
   69     | . '(' expr ')'
   70     | . '-' term
   71     | . '+' term
   72     | . NOT_OP term
   72     | NOT_OP . term
   73 bool: . KW_TRUE
   74     | . KW_FALSE
   75 func_call: . IDENTIFIER '(' func_stm ')'
   76          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '('         shift, and go to state 44
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47

    decl_id    go to state 48
    table_id   go to state 11
    term       go to state 76
    bool       go to state 51
    func_call  go to state 52


State 39

   64 term: POS_INT .

    $default  reduce using rule 64 (term)


State 40

   65 term: POS_REAL .

    $default  reduce using rule 65 (term)


State 41

   73 bool: KW_TRUE .

    $default  reduce using rule 73 (bool)


State 42

   74 bool: KW_FALSE .

    $default  reduce using rule 74 (bool)


State 43

   13 decl_id: IDENTIFIER .  [DIFFERENT_OP, EQUAL_LESS_OP, AND_OP, OR_OP, ASSIGN_OP, ')', ':', '}', ']', ',', ';', '+', '-', '*', '/', '%', '=', '<']
   14        | IDENTIFIER . '[' ']'
   16 table_id: IDENTIFIER . '[' expr ']'
   75 func_call: IDENTIFIER . '(' func_stm ')'
   76          | IDENTIFIER . '(' ')'

    '('  shift, and go to state 77
    '['  shift, and go to state 26

    $default  reduce using rule 13 (decl_id)


State 44

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   52 expr: . term '+' expr
   53     | . term '-' expr
   54     | . term '*' expr
   55     | . term '/' expr
   56     | . term '%' expr
   57     | . term '=' expr
   58     | . term '<' expr
   59     | . term EQUAL_LESS_OP expr
   60     | . term DIFFERENT_OP expr
   61     | . term AND_OP expr
   62     | . term OR_OP expr
   63     | . term
   64 term: . POS_INT
   65     | . POS_REAL
   66     | . bool
   67     | . decl_id
   68     | . func_call
   69     | . '(' expr ')'
   69     | '(' . expr ')'
   70     | . '-' term
   71     | . '+' term
   72     | . NOT_OP term
   73 bool: . KW_TRUE
   74     | . KW_FALSE
   75 func_call: . IDENTIFIER '(' func_stm ')'
   76          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '('         shift, and go to state 44
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47

    decl_id    go to state 48
    table_id   go to state 11
    expr       go to state 78
    term       go to state 50
    bool       go to state 51
    func_call  go to state 52


State 45

   14 decl_id: IDENTIFIER '[' ']' .

    $default  reduce using rule 14 (decl_id)


State 46

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   64 term: . POS_INT
   65     | . POS_REAL
   66     | . bool
   67     | . decl_id
   68     | . func_call
   69     | . '(' expr ')'
   70     | . '-' term
   71     | . '+' term
   71     | '+' . term
   72     | . NOT_OP term
   73 bool: . KW_TRUE
   74     | . KW_FALSE
   75 func_call: . IDENTIFIER '(' func_stm ')'
   76          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '('         shift, and go to state 44
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47

    decl_id    go to state 48
    table_id   go to state 11
    term       go to state 79
    bool       go to state 51
    func_call  go to state 52


State 47

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   64 term: . POS_INT
   65     | . POS_REAL
   66     | . bool
   67     | . decl_id
   68     | . func_call
   69     | . '(' expr ')'
   70     | . '-' term
   70     | '-' . term
   71     | . '+' term
   72     | . NOT_OP term
   73 bool: . KW_TRUE
   74     | . KW_FALSE
   75 func_call: . IDENTIFIER '(' func_stm ')'
   76          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '('         shift, and go to state 44
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47

    decl_id    go to state 48
    table_id   go to state 11
    term       go to state 80
    bool       go to state 51
    func_call  go to state 52


State 48

   67 term: decl_id .

    $default  reduce using rule 67 (term)


State 49

   16 table_id: IDENTIFIER '[' expr . ']'

    ']'  shift, and go to state 81


State 50

   52 expr: term . '+' expr
   53     | term . '-' expr
   54     | term . '*' expr
   55     | term . '/' expr
   56     | term . '%' expr
   57     | term . '=' expr
   58     | term . '<' expr
   59     | term . EQUAL_LESS_OP expr
   60     | term . DIFFERENT_OP expr
   61     | term . AND_OP expr
   62     | term . OR_OP expr
   63     | term .  [')', ':', '}', ']', ',', ';']

    DIFFERENT_OP   shift, and go to state 82
    EQUAL_LESS_OP  shift, and go to state 83
    AND_OP         shift, and go to state 84
    OR_OP          shift, and go to state 85
    '+'            shift, and go to state 86
    '-'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    '%'            shift, and go to state 90
    '='            shift, and go to state 91
    '<'            shift, and go to state 92

    $default  reduce using rule 63 (expr)


State 51

   66 term: bool .

    $default  reduce using rule 66 (term)


State 52

   68 term: func_call .

    $default  reduce using rule 68 (term)


State 53

   35 const_decl_init: decl_id ASSIGN_OP STRING .

    $default  reduce using rule 35 (const_decl_init)


State 54

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   39 func: KW_CONST decl_id ASSIGN_OP '(' . func_param_list ')' ':' type_spec ARROW_OP '{' body '}'
   40 func_param_list: . %empty  [')', ',']
   41                | . func_param_list ',' func_param
   42                | . func_param
   43 func_param: . param_list ':' type_spec
   44 param_list: . param_list ',' decl_id
   45           | . decl_id
   52 expr: . term '+' expr
   53     | . term '-' expr
   54     | . term '*' expr
   55     | . term '/' expr
   56     | . term '%' expr
   57     | . term '=' expr
   58     | . term '<' expr
   59     | . term EQUAL_LESS_OP expr
   60     | . term DIFFERENT_OP expr
   61     | . term AND_OP expr
   62     | . term OR_OP expr
   63     | . term
   64 term: . POS_INT
   65     | . POS_REAL
   66     | . bool
   67     | . decl_id
   68     | . func_call
   69     | . '(' expr ')'
   69     | '(' . expr ')'
   70     | . '-' term
   71     | . '+' term
   72     | . NOT_OP term
   73 bool: . KW_TRUE
   74     | . KW_FALSE
   75 func_call: . IDENTIFIER '(' func_stm ')'
   76          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '('         shift, and go to state 44
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47

    $default  reduce using rule 40 (func_param_list)

    decl_id          go to state 93
    table_id         go to state 11
    func_param_list  go to state 94
    func_param       go to state 95
    param_list       go to state 96
    expr             go to state 78
    term             go to state 50
    bool             go to state 51
    func_call        go to state 52


State 55

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   17 table_init: '{' . table_init_values '}'
   18 table_init_values: . table_init_values ',' expr
   19                  | . expr
   52 expr: . term '+' expr
   53     | . term '-' expr
   54     | . term '*' expr
   55     | . term '/' expr
   56     | . term '%' expr
   57     | . term '=' expr
   58     | . term '<' expr
   59     | . term EQUAL_LESS_OP expr
   60     | . term DIFFERENT_OP expr
   61     | . term AND_OP expr
   62     | . term OR_OP expr
   63     | . term
   64 term: . POS_INT
   65     | . POS_REAL
   66     | . bool
   67     | . decl_id
   68     | . func_call
   69     | . '(' expr ')'
   70     | . '-' term
   71     | . '+' term
   72     | . NOT_OP term
   73 bool: . KW_TRUE
   74     | . KW_FALSE
   75 func_call: . IDENTIFIER '(' func_stm ')'
   76          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '('         shift, and go to state 44
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47

    decl_id            go to state 48
    table_id           go to state 11
    table_init_values  go to state 97
    expr               go to state 98
    term               go to state 50
    bool               go to state 51
    func_call          go to state 52


State 56

   36 const_decl_init: decl_id ASSIGN_OP table_init .

    $default  reduce using rule 36 (const_decl_init)


State 57

   34 const_decl_init: decl_id ASSIGN_OP expr .

    $default  reduce using rule 34 (const_decl_init)


State 58

    5 type_spec: KW_INT .

    $default  reduce using rule 5 (type_spec)


State 59

    6 type_spec: KW_REAL .

    $default  reduce using rule 6 (type_spec)


State 60

    7 type_spec: KW_BOOL .

    $default  reduce using rule 7 (type_spec)


State 61

    8 type_spec: KW_STRING .

    $default  reduce using rule 8 (type_spec)


State 62

    9 type_spec: '[' . ']' KW_INT
   10          | '[' . ']' KW_REAL
   11          | '[' . ']' KW_BOOL
   12          | '[' . ']' KW_STRING

    ']'  shift, and go to state 99


State 63

   31 const_decl_body: const_decl_list ':' type_spec . ';'

    ';'  shift, and go to state 100


State 64

   34 const_decl_init: decl_id . ASSIGN_OP expr
   35                | decl_id . ASSIGN_OP STRING
   36                | decl_id . ASSIGN_OP table_init

    ASSIGN_OP  shift, and go to state 101


State 65

   32 const_decl_list: const_decl_list ',' const_decl_init .

    $default  reduce using rule 32 (const_decl_list)


State 66

   29 let_decl_init: decl_id ASSIGN_OP STRING .

    $default  reduce using rule 29 (let_decl_init)


State 67

   30 let_decl_init: decl_id ASSIGN_OP table_init .

    $default  reduce using rule 30 (let_decl_init)


State 68

   28 let_decl_init: decl_id ASSIGN_OP expr .

    $default  reduce using rule 28 (let_decl_init)


State 69

   24 let_decl_body: let_decl_list ':' type_spec . ';'

    ';'  shift, and go to state 102


State 70

   25 let_decl_list: let_decl_list ',' let_decl_init .

    $default  reduce using rule 25 (let_decl_list)


State 71

    3 program: decl_list KW_CONST KW_START ASSIGN_OP . '(' ')' ':' KW_INT ARROW_OP '{' body '}'

    '('  shift, and go to state 103


State 72

    1 program: decl_list func_list KW_CONST KW_START . ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'

    ASSIGN_OP  shift, and go to state 104


State 73

    2 program: func_list KW_CONST KW_START ASSIGN_OP . '(' ')' ':' KW_INT ARROW_OP '{' body '}'

    '('  shift, and go to state 105


State 74

   39 func: KW_CONST decl_id ASSIGN_OP . '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}'

    '('  shift, and go to state 106


State 75

    4 program: KW_CONST KW_START ASSIGN_OP '(' ')' . ':' KW_INT ARROW_OP '{' body '}'

    ':'  shift, and go to state 107


State 76

   72 term: NOT_OP term .

    $default  reduce using rule 72 (term)


State 77

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   52 expr: . term '+' expr
   53     | . term '-' expr
   54     | . term '*' expr
   55     | . term '/' expr
   56     | . term '%' expr
   57     | . term '=' expr
   58     | . term '<' expr
   59     | . term EQUAL_LESS_OP expr
   60     | . term DIFFERENT_OP expr
   61     | . term AND_OP expr
   62     | . term OR_OP expr
   63     | . term
   64 term: . POS_INT
   65     | . POS_REAL
   66     | . bool
   67     | . decl_id
   68     | . func_call
   69     | . '(' expr ')'
   70     | . '-' term
   71     | . '+' term
   72     | . NOT_OP term
   73 bool: . KW_TRUE
   74     | . KW_FALSE
   75 func_call: . IDENTIFIER '(' func_stm ')'
   75          | IDENTIFIER '(' . func_stm ')'
   76          | . IDENTIFIER '(' ')'
   76          | IDENTIFIER '(' . ')'
   77 func_stm: . func_stm ',' expr
   78         | . expr

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '('         shift, and go to state 44
    ')'         shift, and go to state 108
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47

    decl_id    go to state 48
    table_id   go to state 11
    expr       go to state 109
    term       go to state 50
    bool       go to state 51
    func_call  go to state 52
    func_stm   go to state 110


State 78

   69 term: '(' expr . ')'

    ')'  shift, and go to state 111


State 79

   71 term: '+' term .

    $default  reduce using rule 71 (term)


State 80

   70 term: '-' term .

    $default  reduce using rule 70 (term)


State 81

   16 table_id: IDENTIFIER '[' expr ']' .

    $default  reduce using rule 16 (table_id)


State 82

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   52 expr: . term '+' expr
   53     | . term '-' expr
   54     | . term '*' expr
   55     | . term '/' expr
   56     | . term '%' expr
   57     | . term '=' expr
   58     | . term '<' expr
   59     | . term EQUAL_LESS_OP expr
   60     | . term DIFFERENT_OP expr
   60     | term DIFFERENT_OP . expr
   61     | . term AND_OP expr
   62     | . term OR_OP expr
   63     | . term
   64 term: . POS_INT
   65     | . POS_REAL
   66     | . bool
   67     | . decl_id
   68     | . func_call
   69     | . '(' expr ')'
   70     | . '-' term
   71     | . '+' term
   72     | . NOT_OP term
   73 bool: . KW_TRUE
   74     | . KW_FALSE
   75 func_call: . IDENTIFIER '(' func_stm ')'
   76          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '('         shift, and go to state 44
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47

    decl_id    go to state 48
    table_id   go to state 11
    expr       go to state 112
    term       go to state 50
    bool       go to state 51
    func_call  go to state 52


State 83

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   52 expr: . term '+' expr
   53     | . term '-' expr
   54     | . term '*' expr
   55     | . term '/' expr
   56     | . term '%' expr
   57     | . term '=' expr
   58     | . term '<' expr
   59     | . term EQUAL_LESS_OP expr
   59     | term EQUAL_LESS_OP . expr
   60     | . term DIFFERENT_OP expr
   61     | . term AND_OP expr
   62     | . term OR_OP expr
   63     | . term
   64 term: . POS_INT
   65     | . POS_REAL
   66     | . bool
   67     | . decl_id
   68     | . func_call
   69     | . '(' expr ')'
   70     | . '-' term
   71     | . '+' term
   72     | . NOT_OP term
   73 bool: . KW_TRUE
   74     | . KW_FALSE
   75 func_call: . IDENTIFIER '(' func_stm ')'
   76          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '('         shift, and go to state 44
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47

    decl_id    go to state 48
    table_id   go to state 11
    expr       go to state 113
    term       go to state 50
    bool       go to state 51
    func_call  go to state 52


State 84

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   52 expr: . term '+' expr
   53     | . term '-' expr
   54     | . term '*' expr
   55     | . term '/' expr
   56     | . term '%' expr
   57     | . term '=' expr
   58     | . term '<' expr
   59     | . term EQUAL_LESS_OP expr
   60     | . term DIFFERENT_OP expr
   61     | . term AND_OP expr
   61     | term AND_OP . expr
   62     | . term OR_OP expr
   63     | . term
   64 term: . POS_INT
   65     | . POS_REAL
   66     | . bool
   67     | . decl_id
   68     | . func_call
   69     | . '(' expr ')'
   70     | . '-' term
   71     | . '+' term
   72     | . NOT_OP term
   73 bool: . KW_TRUE
   74     | . KW_FALSE
   75 func_call: . IDENTIFIER '(' func_stm ')'
   76          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '('         shift, and go to state 44
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47

    decl_id    go to state 48
    table_id   go to state 11
    expr       go to state 114
    term       go to state 50
    bool       go to state 51
    func_call  go to state 52


State 85

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   52 expr: . term '+' expr
   53     | . term '-' expr
   54     | . term '*' expr
   55     | . term '/' expr
   56     | . term '%' expr
   57     | . term '=' expr
   58     | . term '<' expr
   59     | . term EQUAL_LESS_OP expr
   60     | . term DIFFERENT_OP expr
   61     | . term AND_OP expr
   62     | . term OR_OP expr
   62     | term OR_OP . expr
   63     | . term
   64 term: . POS_INT
   65     | . POS_REAL
   66     | . bool
   67     | . decl_id
   68     | . func_call
   69     | . '(' expr ')'
   70     | . '-' term
   71     | . '+' term
   72     | . NOT_OP term
   73 bool: . KW_TRUE
   74     | . KW_FALSE
   75 func_call: . IDENTIFIER '(' func_stm ')'
   76          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '('         shift, and go to state 44
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47

    decl_id    go to state 48
    table_id   go to state 11
    expr       go to state 115
    term       go to state 50
    bool       go to state 51
    func_call  go to state 52


State 86

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   52 expr: . term '+' expr
   52     | term '+' . expr
   53     | . term '-' expr
   54     | . term '*' expr
   55     | . term '/' expr
   56     | . term '%' expr
   57     | . term '=' expr
   58     | . term '<' expr
   59     | . term EQUAL_LESS_OP expr
   60     | . term DIFFERENT_OP expr
   61     | . term AND_OP expr
   62     | . term OR_OP expr
   63     | . term
   64 term: . POS_INT
   65     | . POS_REAL
   66     | . bool
   67     | . decl_id
   68     | . func_call
   69     | . '(' expr ')'
   70     | . '-' term
   71     | . '+' term
   72     | . NOT_OP term
   73 bool: . KW_TRUE
   74     | . KW_FALSE
   75 func_call: . IDENTIFIER '(' func_stm ')'
   76          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '('         shift, and go to state 44
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47

    decl_id    go to state 48
    table_id   go to state 11
    expr       go to state 116
    term       go to state 50
    bool       go to state 51
    func_call  go to state 52


State 87

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   52 expr: . term '+' expr
   53     | . term '-' expr
   53     | term '-' . expr
   54     | . term '*' expr
   55     | . term '/' expr
   56     | . term '%' expr
   57     | . term '=' expr
   58     | . term '<' expr
   59     | . term EQUAL_LESS_OP expr
   60     | . term DIFFERENT_OP expr
   61     | . term AND_OP expr
   62     | . term OR_OP expr
   63     | . term
   64 term: . POS_INT
   65     | . POS_REAL
   66     | . bool
   67     | . decl_id
   68     | . func_call
   69     | . '(' expr ')'
   70     | . '-' term
   71     | . '+' term
   72     | . NOT_OP term
   73 bool: . KW_TRUE
   74     | . KW_FALSE
   75 func_call: . IDENTIFIER '(' func_stm ')'
   76          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '('         shift, and go to state 44
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47

    decl_id    go to state 48
    table_id   go to state 11
    expr       go to state 117
    term       go to state 50
    bool       go to state 51
    func_call  go to state 52


State 88

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   52 expr: . term '+' expr
   53     | . term '-' expr
   54     | . term '*' expr
   54     | term '*' . expr
   55     | . term '/' expr
   56     | . term '%' expr
   57     | . term '=' expr
   58     | . term '<' expr
   59     | . term EQUAL_LESS_OP expr
   60     | . term DIFFERENT_OP expr
   61     | . term AND_OP expr
   62     | . term OR_OP expr
   63     | . term
   64 term: . POS_INT
   65     | . POS_REAL
   66     | . bool
   67     | . decl_id
   68     | . func_call
   69     | . '(' expr ')'
   70     | . '-' term
   71     | . '+' term
   72     | . NOT_OP term
   73 bool: . KW_TRUE
   74     | . KW_FALSE
   75 func_call: . IDENTIFIER '(' func_stm ')'
   76          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '('         shift, and go to state 44
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47

    decl_id    go to state 48
    table_id   go to state 11
    expr       go to state 118
    term       go to state 50
    bool       go to state 51
    func_call  go to state 52


State 89

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   52 expr: . term '+' expr
   53     | . term '-' expr
   54     | . term '*' expr
   55     | . term '/' expr
   55     | term '/' . expr
   56     | . term '%' expr
   57     | . term '=' expr
   58     | . term '<' expr
   59     | . term EQUAL_LESS_OP expr
   60     | . term DIFFERENT_OP expr
   61     | . term AND_OP expr
   62     | . term OR_OP expr
   63     | . term
   64 term: . POS_INT
   65     | . POS_REAL
   66     | . bool
   67     | . decl_id
   68     | . func_call
   69     | . '(' expr ')'
   70     | . '-' term
   71     | . '+' term
   72     | . NOT_OP term
   73 bool: . KW_TRUE
   74     | . KW_FALSE
   75 func_call: . IDENTIFIER '(' func_stm ')'
   76          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '('         shift, and go to state 44
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47

    decl_id    go to state 48
    table_id   go to state 11
    expr       go to state 119
    term       go to state 50
    bool       go to state 51
    func_call  go to state 52


State 90

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   52 expr: . term '+' expr
   53     | . term '-' expr
   54     | . term '*' expr
   55     | . term '/' expr
   56     | . term '%' expr
   56     | term '%' . expr
   57     | . term '=' expr
   58     | . term '<' expr
   59     | . term EQUAL_LESS_OP expr
   60     | . term DIFFERENT_OP expr
   61     | . term AND_OP expr
   62     | . term OR_OP expr
   63     | . term
   64 term: . POS_INT
   65     | . POS_REAL
   66     | . bool
   67     | . decl_id
   68     | . func_call
   69     | . '(' expr ')'
   70     | . '-' term
   71     | . '+' term
   72     | . NOT_OP term
   73 bool: . KW_TRUE
   74     | . KW_FALSE
   75 func_call: . IDENTIFIER '(' func_stm ')'
   76          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '('         shift, and go to state 44
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47

    decl_id    go to state 48
    table_id   go to state 11
    expr       go to state 120
    term       go to state 50
    bool       go to state 51
    func_call  go to state 52


State 91

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   52 expr: . term '+' expr
   53     | . term '-' expr
   54     | . term '*' expr
   55     | . term '/' expr
   56     | . term '%' expr
   57     | . term '=' expr
   57     | term '=' . expr
   58     | . term '<' expr
   59     | . term EQUAL_LESS_OP expr
   60     | . term DIFFERENT_OP expr
   61     | . term AND_OP expr
   62     | . term OR_OP expr
   63     | . term
   64 term: . POS_INT
   65     | . POS_REAL
   66     | . bool
   67     | . decl_id
   68     | . func_call
   69     | . '(' expr ')'
   70     | . '-' term
   71     | . '+' term
   72     | . NOT_OP term
   73 bool: . KW_TRUE
   74     | . KW_FALSE
   75 func_call: . IDENTIFIER '(' func_stm ')'
   76          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '('         shift, and go to state 44
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47

    decl_id    go to state 48
    table_id   go to state 11
    expr       go to state 121
    term       go to state 50
    bool       go to state 51
    func_call  go to state 52


State 92

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   52 expr: . term '+' expr
   53     | . term '-' expr
   54     | . term '*' expr
   55     | . term '/' expr
   56     | . term '%' expr
   57     | . term '=' expr
   58     | . term '<' expr
   58     | term '<' . expr
   59     | . term EQUAL_LESS_OP expr
   60     | . term DIFFERENT_OP expr
   61     | . term AND_OP expr
   62     | . term OR_OP expr
   63     | . term
   64 term: . POS_INT
   65     | . POS_REAL
   66     | . bool
   67     | . decl_id
   68     | . func_call
   69     | . '(' expr ')'
   70     | . '-' term
   71     | . '+' term
   72     | . NOT_OP term
   73 bool: . KW_TRUE
   74     | . KW_FALSE
   75 func_call: . IDENTIFIER '(' func_stm ')'
   76          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '('         shift, and go to state 44
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47

    decl_id    go to state 48
    table_id   go to state 11
    expr       go to state 122
    term       go to state 50
    bool       go to state 51
    func_call  go to state 52


State 93

   45 param_list: decl_id .  [':', ',']
   67 term: decl_id .  [DIFFERENT_OP, EQUAL_LESS_OP, AND_OP, OR_OP, ')', '+', '-', '*', '/', '%', '=', '<']

    ':'       reduce using rule 45 (param_list)
    ','       reduce using rule 45 (param_list)
    $default  reduce using rule 67 (term)


State 94

   39 func: KW_CONST decl_id ASSIGN_OP '(' func_param_list . ')' ':' type_spec ARROW_OP '{' body '}'
   41 func_param_list: func_param_list . ',' func_param

    ')'  shift, and go to state 123
    ','  shift, and go to state 124


State 95

   42 func_param_list: func_param .

    $default  reduce using rule 42 (func_param_list)


State 96

   43 func_param: param_list . ':' type_spec
   44 param_list: param_list . ',' decl_id

    ':'  shift, and go to state 125
    ','  shift, and go to state 126


State 97

   17 table_init: '{' table_init_values . '}'
   18 table_init_values: table_init_values . ',' expr

    '}'  shift, and go to state 127
    ','  shift, and go to state 128


State 98

   19 table_init_values: expr .

    $default  reduce using rule 19 (table_init_values)


State 99

    9 type_spec: '[' ']' . KW_INT
   10          | '[' ']' . KW_REAL
   11          | '[' ']' . KW_BOOL
   12          | '[' ']' . KW_STRING

    KW_INT     shift, and go to state 129
    KW_REAL    shift, and go to state 130
    KW_BOOL    shift, and go to state 131
    KW_STRING  shift, and go to state 132


State 100

   31 const_decl_body: const_decl_list ':' type_spec ';' .

    $default  reduce using rule 31 (const_decl_body)


State 101

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   17 table_init: . '{' table_init_values '}'
   34 const_decl_init: decl_id ASSIGN_OP . expr
   35                | decl_id ASSIGN_OP . STRING
   36                | decl_id ASSIGN_OP . table_init
   52 expr: . term '+' expr
   53     | . term '-' expr
   54     | . term '*' expr
   55     | . term '/' expr
   56     | . term '%' expr
   57     | . term '=' expr
   58     | . term '<' expr
   59     | . term EQUAL_LESS_OP expr
   60     | . term DIFFERENT_OP expr
   61     | . term AND_OP expr
   62     | . term OR_OP expr
   63     | . term
   64 term: . POS_INT
   65     | . POS_REAL
   66     | . bool
   67     | . decl_id
   68     | . func_call
   69     | . '(' expr ')'
   70     | . '-' term
   71     | . '+' term
   72     | . NOT_OP term
   73 bool: . KW_TRUE
   74     | . KW_FALSE
   75 func_call: . IDENTIFIER '(' func_stm ')'
   76          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    STRING      shift, and go to state 53
    '('         shift, and go to state 44
    '{'         shift, and go to state 55
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47

    decl_id     go to state 48
    table_id    go to state 11
    table_init  go to state 56
    expr        go to state 57
    term        go to state 50
    bool        go to state 51
    func_call   go to state 52


State 102

   24 let_decl_body: let_decl_list ':' type_spec ';' .

    $default  reduce using rule 24 (let_decl_body)


State 103

    3 program: decl_list KW_CONST KW_START ASSIGN_OP '(' . ')' ':' KW_INT ARROW_OP '{' body '}'

    ')'  shift, and go to state 133


State 104

    1 program: decl_list func_list KW_CONST KW_START ASSIGN_OP . '(' ')' ':' KW_INT ARROW_OP '{' body '}'

    '('  shift, and go to state 134


State 105

    2 program: func_list KW_CONST KW_START ASSIGN_OP '(' . ')' ':' KW_INT ARROW_OP '{' body '}'

    ')'  shift, and go to state 135


State 106

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   39 func: KW_CONST decl_id ASSIGN_OP '(' . func_param_list ')' ':' type_spec ARROW_OP '{' body '}'
   40 func_param_list: . %empty  [')', ',']
   41                | . func_param_list ',' func_param
   42                | . func_param
   43 func_param: . param_list ':' type_spec
   44 param_list: . param_list ',' decl_id
   45           | . decl_id

    IDENTIFIER  shift, and go to state 9

    $default  reduce using rule 40 (func_param_list)

    decl_id          go to state 136
    table_id         go to state 11
    func_param_list  go to state 94
    func_param       go to state 95
    param_list       go to state 96


State 107

    4 program: KW_CONST KW_START ASSIGN_OP '(' ')' ':' . KW_INT ARROW_OP '{' body '}'

    KW_INT  shift, and go to state 137


State 108

   76 func_call: IDENTIFIER '(' ')' .

    $default  reduce using rule 76 (func_call)


State 109

   78 func_stm: expr .

    $default  reduce using rule 78 (func_stm)


State 110

   75 func_call: IDENTIFIER '(' func_stm . ')'
   77 func_stm: func_stm . ',' expr

    ')'  shift, and go to state 138
    ','  shift, and go to state 139


State 111

   69 term: '(' expr ')' .

    $default  reduce using rule 69 (term)


State 112

   60 expr: term DIFFERENT_OP expr .

    $default  reduce using rule 60 (expr)


State 113

   59 expr: term EQUAL_LESS_OP expr .

    $default  reduce using rule 59 (expr)


State 114

   61 expr: term AND_OP expr .

    $default  reduce using rule 61 (expr)


State 115

   62 expr: term OR_OP expr .

    $default  reduce using rule 62 (expr)


State 116

   52 expr: term '+' expr .

    $default  reduce using rule 52 (expr)


State 117

   53 expr: term '-' expr .

    $default  reduce using rule 53 (expr)


State 118

   54 expr: term '*' expr .

    $default  reduce using rule 54 (expr)


State 119

   55 expr: term '/' expr .

    $default  reduce using rule 55 (expr)


State 120

   56 expr: term '%' expr .

    $default  reduce using rule 56 (expr)


State 121

   57 expr: term '=' expr .

    $default  reduce using rule 57 (expr)


State 122

   58 expr: term '<' expr .

    $default  reduce using rule 58 (expr)


State 123

   39 func: KW_CONST decl_id ASSIGN_OP '(' func_param_list ')' . ':' type_spec ARROW_OP '{' body '}'

    ':'  shift, and go to state 140


State 124

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   41 func_param_list: func_param_list ',' . func_param
   43 func_param: . param_list ':' type_spec
   44 param_list: . param_list ',' decl_id
   45           | . decl_id

    IDENTIFIER  shift, and go to state 9

    decl_id     go to state 136
    table_id    go to state 11
    func_param  go to state 141
    param_list  go to state 96


State 125

    5 type_spec: . KW_INT
    6          | . KW_REAL
    7          | . KW_BOOL
    8          | . KW_STRING
    9          | . '[' ']' KW_INT
   10          | . '[' ']' KW_REAL
   11          | . '[' ']' KW_BOOL
   12          | . '[' ']' KW_STRING
   43 func_param: param_list ':' . type_spec

    KW_INT     shift, and go to state 58
    KW_REAL    shift, and go to state 59
    KW_BOOL    shift, and go to state 60
    KW_STRING  shift, and go to state 61
    '['        shift, and go to state 62

    type_spec  go to state 142


State 126

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   44 param_list: param_list ',' . decl_id

    IDENTIFIER  shift, and go to state 9

    decl_id   go to state 143
    table_id  go to state 11


State 127

   17 table_init: '{' table_init_values '}' .

    $default  reduce using rule 17 (table_init)


State 128

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   18 table_init_values: table_init_values ',' . expr
   52 expr: . term '+' expr
   53     | . term '-' expr
   54     | . term '*' expr
   55     | . term '/' expr
   56     | . term '%' expr
   57     | . term '=' expr
   58     | . term '<' expr
   59     | . term EQUAL_LESS_OP expr
   60     | . term DIFFERENT_OP expr
   61     | . term AND_OP expr
   62     | . term OR_OP expr
   63     | . term
   64 term: . POS_INT
   65     | . POS_REAL
   66     | . bool
   67     | . decl_id
   68     | . func_call
   69     | . '(' expr ')'
   70     | . '-' term
   71     | . '+' term
   72     | . NOT_OP term
   73 bool: . KW_TRUE
   74     | . KW_FALSE
   75 func_call: . IDENTIFIER '(' func_stm ')'
   76          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '('         shift, and go to state 44
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47

    decl_id    go to state 48
    table_id   go to state 11
    expr       go to state 144
    term       go to state 50
    bool       go to state 51
    func_call  go to state 52


State 129

    9 type_spec: '[' ']' KW_INT .

    $default  reduce using rule 9 (type_spec)


State 130

   10 type_spec: '[' ']' KW_REAL .

    $default  reduce using rule 10 (type_spec)


State 131

   11 type_spec: '[' ']' KW_BOOL .

    $default  reduce using rule 11 (type_spec)


State 132

   12 type_spec: '[' ']' KW_STRING .

    $default  reduce using rule 12 (type_spec)


State 133

    3 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' . ':' KW_INT ARROW_OP '{' body '}'

    ':'  shift, and go to state 145


State 134

    1 program: decl_list func_list KW_CONST KW_START ASSIGN_OP '(' . ')' ':' KW_INT ARROW_OP '{' body '}'

    ')'  shift, and go to state 146


State 135

    2 program: func_list KW_CONST KW_START ASSIGN_OP '(' ')' . ':' KW_INT ARROW_OP '{' body '}'

    ':'  shift, and go to state 147


State 136

   45 param_list: decl_id .

    $default  reduce using rule 45 (param_list)


State 137

    4 program: KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT . ARROW_OP '{' body '}'

    ARROW_OP  shift, and go to state 148


State 138

   75 func_call: IDENTIFIER '(' func_stm ')' .

    $default  reduce using rule 75 (func_call)


State 139

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   52 expr: . term '+' expr
   53     | . term '-' expr
   54     | . term '*' expr
   55     | . term '/' expr
   56     | . term '%' expr
   57     | . term '=' expr
   58     | . term '<' expr
   59     | . term EQUAL_LESS_OP expr
   60     | . term DIFFERENT_OP expr
   61     | . term AND_OP expr
   62     | . term OR_OP expr
   63     | . term
   64 term: . POS_INT
   65     | . POS_REAL
   66     | . bool
   67     | . decl_id
   68     | . func_call
   69     | . '(' expr ')'
   70     | . '-' term
   71     | . '+' term
   72     | . NOT_OP term
   73 bool: . KW_TRUE
   74     | . KW_FALSE
   75 func_call: . IDENTIFIER '(' func_stm ')'
   76          | . IDENTIFIER '(' ')'
   77 func_stm: func_stm ',' . expr

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '('         shift, and go to state 44
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47

    decl_id    go to state 48
    table_id   go to state 11
    expr       go to state 149
    term       go to state 50
    bool       go to state 51
    func_call  go to state 52


State 140

    5 type_spec: . KW_INT
    6          | . KW_REAL
    7          | . KW_BOOL
    8          | . KW_STRING
    9          | . '[' ']' KW_INT
   10          | . '[' ']' KW_REAL
   11          | . '[' ']' KW_BOOL
   12          | . '[' ']' KW_STRING
   39 func: KW_CONST decl_id ASSIGN_OP '(' func_param_list ')' ':' . type_spec ARROW_OP '{' body '}'

    KW_INT     shift, and go to state 58
    KW_REAL    shift, and go to state 59
    KW_BOOL    shift, and go to state 60
    KW_STRING  shift, and go to state 61
    '['        shift, and go to state 62

    type_spec  go to state 150


State 141

   41 func_param_list: func_param_list ',' func_param .

    $default  reduce using rule 41 (func_param_list)


State 142

   43 func_param: param_list ':' type_spec .

    $default  reduce using rule 43 (func_param)


State 143

   44 param_list: param_list ',' decl_id .

    $default  reduce using rule 44 (param_list)


State 144

   18 table_init_values: table_init_values ',' expr .

    $default  reduce using rule 18 (table_init_values)


State 145

    3 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' . KW_INT ARROW_OP '{' body '}'

    KW_INT  shift, and go to state 151


State 146

    1 program: decl_list func_list KW_CONST KW_START ASSIGN_OP '(' ')' . ':' KW_INT ARROW_OP '{' body '}'

    ':'  shift, and go to state 152


State 147

    2 program: func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' . KW_INT ARROW_OP '{' body '}'

    KW_INT  shift, and go to state 153


State 148

    4 program: KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP . '{' body '}'

    '{'  shift, and go to state 154


State 149

   77 func_stm: func_stm ',' expr .

    $default  reduce using rule 77 (func_stm)


State 150

   39 func: KW_CONST decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec . ARROW_OP '{' body '}'

    ARROW_OP  shift, and go to state 155


State 151

    3 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT . ARROW_OP '{' body '}'

    ARROW_OP  shift, and go to state 156


State 152

    1 program: decl_list func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' . KW_INT ARROW_OP '{' body '}'

    KW_INT  shift, and go to state 157


State 153

    2 program: func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT . ARROW_OP '{' body '}'

    ARROW_OP  shift, and go to state 158


State 154

    4 program: KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' . body '}'
   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   22 decl: . KW_CONST const_decl_body
   23     | . KW_LET let_decl_body
   46 body: . instr_list
   47     | . body_decl_list instr_list
   48 body_decl_list: . body_decl_list decl
   49               | . decl
   50 instr_list: . instr_list instr
   51           | . instr
   75 func_call: . IDENTIFIER '(' func_stm ')'
   76          | . IDENTIFIER '(' ')'
   79 instr: . instr_func_call
   80      | . instr_assigment
   81      | . return
   82 instr_assigment: . decl_id ASSIGN_OP expr ';'
   83 return: . KW_RETURN expr ';'
   84       | . KW_RETURN ';'
   85 instr_func_call: . func_call ';'

    KW_CONST    shift, and go to state 159
    KW_LET      shift, and go to state 2
    KW_RETURN   shift, and go to state 160
    IDENTIFIER  shift, and go to state 43

    decl_id          go to state 161
    table_id         go to state 11
    decl             go to state 162
    body             go to state 163
    body_decl_list   go to state 164
    instr_list       go to state 165
    func_call        go to state 166
    instr            go to state 167
    instr_assigment  go to state 168
    return           go to state 169
    instr_func_call  go to state 170


State 155

   39 func: KW_CONST decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP . '{' body '}'

    '{'  shift, and go to state 171


State 156

    3 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP . '{' body '}'

    '{'  shift, and go to state 172


State 157

    1 program: decl_list func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT . ARROW_OP '{' body '}'

    ARROW_OP  shift, and go to state 173


State 158

    2 program: func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP . '{' body '}'

    '{'  shift, and go to state 174


State 159

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   22 decl: KW_CONST . const_decl_body
   31 const_decl_body: . const_decl_list ':' type_spec ';'
   32 const_decl_list: . const_decl_list ',' const_decl_init
   33                | . const_decl_init
   34 const_decl_init: . decl_id ASSIGN_OP expr
   35                | . decl_id ASSIGN_OP STRING
   36                | . decl_id ASSIGN_OP table_init

    IDENTIFIER  shift, and go to state 9

    decl_id          go to state 64
    table_id         go to state 11
    const_decl_body  go to state 12
    const_decl_list  go to state 13
    const_decl_init  go to state 14


State 160

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   52 expr: . term '+' expr
   53     | . term '-' expr
   54     | . term '*' expr
   55     | . term '/' expr
   56     | . term '%' expr
   57     | . term '=' expr
   58     | . term '<' expr
   59     | . term EQUAL_LESS_OP expr
   60     | . term DIFFERENT_OP expr
   61     | . term AND_OP expr
   62     | . term OR_OP expr
   63     | . term
   64 term: . POS_INT
   65     | . POS_REAL
   66     | . bool
   67     | . decl_id
   68     | . func_call
   69     | . '(' expr ')'
   70     | . '-' term
   71     | . '+' term
   72     | . NOT_OP term
   73 bool: . KW_TRUE
   74     | . KW_FALSE
   75 func_call: . IDENTIFIER '(' func_stm ')'
   76          | . IDENTIFIER '(' ')'
   83 return: KW_RETURN . expr ';'
   84       | KW_RETURN . ';'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '('         shift, and go to state 44
    ';'         shift, and go to state 175
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47

    decl_id    go to state 48
    table_id   go to state 11
    expr       go to state 176
    term       go to state 50
    bool       go to state 51
    func_call  go to state 52


State 161

   82 instr_assigment: decl_id . ASSIGN_OP expr ';'

    ASSIGN_OP  shift, and go to state 177


State 162

   49 body_decl_list: decl .

    $default  reduce using rule 49 (body_decl_list)


State 163

    4 program: KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body . '}'

    '}'  shift, and go to state 178


State 164

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   22 decl: . KW_CONST const_decl_body
   23     | . KW_LET let_decl_body
   47 body: body_decl_list . instr_list
   48 body_decl_list: body_decl_list . decl
   50 instr_list: . instr_list instr
   51           | . instr
   75 func_call: . IDENTIFIER '(' func_stm ')'
   76          | . IDENTIFIER '(' ')'
   79 instr: . instr_func_call
   80      | . instr_assigment
   81      | . return
   82 instr_assigment: . decl_id ASSIGN_OP expr ';'
   83 return: . KW_RETURN expr ';'
   84       | . KW_RETURN ';'
   85 instr_func_call: . func_call ';'

    KW_CONST    shift, and go to state 159
    KW_LET      shift, and go to state 2
    KW_RETURN   shift, and go to state 160
    IDENTIFIER  shift, and go to state 43

    decl_id          go to state 161
    table_id         go to state 11
    decl             go to state 179
    instr_list       go to state 180
    func_call        go to state 166
    instr            go to state 167
    instr_assigment  go to state 168
    return           go to state 169
    instr_func_call  go to state 170


State 165

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   46 body: instr_list .  ['}']
   50 instr_list: instr_list . instr
   75 func_call: . IDENTIFIER '(' func_stm ')'
   76          | . IDENTIFIER '(' ')'
   79 instr: . instr_func_call
   80      | . instr_assigment
   81      | . return
   82 instr_assigment: . decl_id ASSIGN_OP expr ';'
   83 return: . KW_RETURN expr ';'
   84       | . KW_RETURN ';'
   85 instr_func_call: . func_call ';'

    KW_RETURN   shift, and go to state 160
    IDENTIFIER  shift, and go to state 43

    $default  reduce using rule 46 (body)

    decl_id          go to state 161
    table_id         go to state 11
    func_call        go to state 166
    instr            go to state 181
    instr_assigment  go to state 168
    return           go to state 169
    instr_func_call  go to state 170


State 166

   85 instr_func_call: func_call . ';'

    ';'  shift, and go to state 182


State 167

   51 instr_list: instr .

    $default  reduce using rule 51 (instr_list)


State 168

   80 instr: instr_assigment .

    $default  reduce using rule 80 (instr)


State 169

   81 instr: return .

    $default  reduce using rule 81 (instr)


State 170

   79 instr: instr_func_call .

    $default  reduce using rule 79 (instr)


State 171

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   22 decl: . KW_CONST const_decl_body
   23     | . KW_LET let_decl_body
   39 func: KW_CONST decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' . body '}'
   46 body: . instr_list
   47     | . body_decl_list instr_list
   48 body_decl_list: . body_decl_list decl
   49               | . decl
   50 instr_list: . instr_list instr
   51           | . instr
   75 func_call: . IDENTIFIER '(' func_stm ')'
   76          | . IDENTIFIER '(' ')'
   79 instr: . instr_func_call
   80      | . instr_assigment
   81      | . return
   82 instr_assigment: . decl_id ASSIGN_OP expr ';'
   83 return: . KW_RETURN expr ';'
   84       | . KW_RETURN ';'
   85 instr_func_call: . func_call ';'

    KW_CONST    shift, and go to state 159
    KW_LET      shift, and go to state 2
    KW_RETURN   shift, and go to state 160
    IDENTIFIER  shift, and go to state 43

    decl_id          go to state 161
    table_id         go to state 11
    decl             go to state 162
    body             go to state 183
    body_decl_list   go to state 164
    instr_list       go to state 165
    func_call        go to state 166
    instr            go to state 167
    instr_assigment  go to state 168
    return           go to state 169
    instr_func_call  go to state 170


State 172

    3 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' . body '}'
   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   22 decl: . KW_CONST const_decl_body
   23     | . KW_LET let_decl_body
   46 body: . instr_list
   47     | . body_decl_list instr_list
   48 body_decl_list: . body_decl_list decl
   49               | . decl
   50 instr_list: . instr_list instr
   51           | . instr
   75 func_call: . IDENTIFIER '(' func_stm ')'
   76          | . IDENTIFIER '(' ')'
   79 instr: . instr_func_call
   80      | . instr_assigment
   81      | . return
   82 instr_assigment: . decl_id ASSIGN_OP expr ';'
   83 return: . KW_RETURN expr ';'
   84       | . KW_RETURN ';'
   85 instr_func_call: . func_call ';'

    KW_CONST    shift, and go to state 159
    KW_LET      shift, and go to state 2
    KW_RETURN   shift, and go to state 160
    IDENTIFIER  shift, and go to state 43

    decl_id          go to state 161
    table_id         go to state 11
    decl             go to state 162
    body             go to state 184
    body_decl_list   go to state 164
    instr_list       go to state 165
    func_call        go to state 166
    instr            go to state 167
    instr_assigment  go to state 168
    return           go to state 169
    instr_func_call  go to state 170


State 173

    1 program: decl_list func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP . '{' body '}'

    '{'  shift, and go to state 185


State 174

    2 program: func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' . body '}'
   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   22 decl: . KW_CONST const_decl_body
   23     | . KW_LET let_decl_body
   46 body: . instr_list
   47     | . body_decl_list instr_list
   48 body_decl_list: . body_decl_list decl
   49               | . decl
   50 instr_list: . instr_list instr
   51           | . instr
   75 func_call: . IDENTIFIER '(' func_stm ')'
   76          | . IDENTIFIER '(' ')'
   79 instr: . instr_func_call
   80      | . instr_assigment
   81      | . return
   82 instr_assigment: . decl_id ASSIGN_OP expr ';'
   83 return: . KW_RETURN expr ';'
   84       | . KW_RETURN ';'
   85 instr_func_call: . func_call ';'

    KW_CONST    shift, and go to state 159
    KW_LET      shift, and go to state 2
    KW_RETURN   shift, and go to state 160
    IDENTIFIER  shift, and go to state 43

    decl_id          go to state 161
    table_id         go to state 11
    decl             go to state 162
    body             go to state 186
    body_decl_list   go to state 164
    instr_list       go to state 165
    func_call        go to state 166
    instr            go to state 167
    instr_assigment  go to state 168
    return           go to state 169
    instr_func_call  go to state 170


State 175

   84 return: KW_RETURN ';' .

    $default  reduce using rule 84 (return)


State 176

   83 return: KW_RETURN expr . ';'

    ';'  shift, and go to state 187


State 177

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   52 expr: . term '+' expr
   53     | . term '-' expr
   54     | . term '*' expr
   55     | . term '/' expr
   56     | . term '%' expr
   57     | . term '=' expr
   58     | . term '<' expr
   59     | . term EQUAL_LESS_OP expr
   60     | . term DIFFERENT_OP expr
   61     | . term AND_OP expr
   62     | . term OR_OP expr
   63     | . term
   64 term: . POS_INT
   65     | . POS_REAL
   66     | . bool
   67     | . decl_id
   68     | . func_call
   69     | . '(' expr ')'
   70     | . '-' term
   71     | . '+' term
   72     | . NOT_OP term
   73 bool: . KW_TRUE
   74     | . KW_FALSE
   75 func_call: . IDENTIFIER '(' func_stm ')'
   76          | . IDENTIFIER '(' ')'
   82 instr_assigment: decl_id ASSIGN_OP . expr ';'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '('         shift, and go to state 44
    '+'         shift, and go to state 46
    '-'         shift, and go to state 47

    decl_id    go to state 48
    table_id   go to state 11
    expr       go to state 188
    term       go to state 50
    bool       go to state 51
    func_call  go to state 52


State 178

    4 program: KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}' .

    $default  reduce using rule 4 (program)


State 179

   48 body_decl_list: body_decl_list decl .

    $default  reduce using rule 48 (body_decl_list)


State 180

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   47 body: body_decl_list instr_list .  ['}']
   50 instr_list: instr_list . instr
   75 func_call: . IDENTIFIER '(' func_stm ')'
   76          | . IDENTIFIER '(' ')'
   79 instr: . instr_func_call
   80      | . instr_assigment
   81      | . return
   82 instr_assigment: . decl_id ASSIGN_OP expr ';'
   83 return: . KW_RETURN expr ';'
   84       | . KW_RETURN ';'
   85 instr_func_call: . func_call ';'

    KW_RETURN   shift, and go to state 160
    IDENTIFIER  shift, and go to state 43

    $default  reduce using rule 47 (body)

    decl_id          go to state 161
    table_id         go to state 11
    func_call        go to state 166
    instr            go to state 181
    instr_assigment  go to state 168
    return           go to state 169
    instr_func_call  go to state 170


State 181

   50 instr_list: instr_list instr .

    $default  reduce using rule 50 (instr_list)


State 182

   85 instr_func_call: func_call ';' .

    $default  reduce using rule 85 (instr_func_call)


State 183

   39 func: KW_CONST decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' body . '}'

    '}'  shift, and go to state 189


State 184

    3 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body . '}'

    '}'  shift, and go to state 190


State 185

    1 program: decl_list func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' . body '}'
   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   22 decl: . KW_CONST const_decl_body
   23     | . KW_LET let_decl_body
   46 body: . instr_list
   47     | . body_decl_list instr_list
   48 body_decl_list: . body_decl_list decl
   49               | . decl
   50 instr_list: . instr_list instr
   51           | . instr
   75 func_call: . IDENTIFIER '(' func_stm ')'
   76          | . IDENTIFIER '(' ')'
   79 instr: . instr_func_call
   80      | . instr_assigment
   81      | . return
   82 instr_assigment: . decl_id ASSIGN_OP expr ';'
   83 return: . KW_RETURN expr ';'
   84       | . KW_RETURN ';'
   85 instr_func_call: . func_call ';'

    KW_CONST    shift, and go to state 159
    KW_LET      shift, and go to state 2
    KW_RETURN   shift, and go to state 160
    IDENTIFIER  shift, and go to state 43

    decl_id          go to state 161
    table_id         go to state 11
    decl             go to state 162
    body             go to state 191
    body_decl_list   go to state 164
    instr_list       go to state 165
    func_call        go to state 166
    instr            go to state 167
    instr_assigment  go to state 168
    return           go to state 169
    instr_func_call  go to state 170


State 186

    2 program: func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body . '}'

    '}'  shift, and go to state 192


State 187

   83 return: KW_RETURN expr ';' .

    $default  reduce using rule 83 (return)


State 188

   82 instr_assigment: decl_id ASSIGN_OP expr . ';'

    ';'  shift, and go to state 193


State 189

   39 func: KW_CONST decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}' .

    $default  reduce using rule 39 (func)


State 190

    3 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}' .

    $default  reduce using rule 3 (program)


State 191

    1 program: decl_list func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body . '}'

    '}'  shift, and go to state 194


State 192

    2 program: func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}' .

    $default  reduce using rule 2 (program)


State 193

   82 instr_assigment: decl_id ASSIGN_OP expr ';' .

    $default  reduce using rule 82 (instr_assigment)


State 194

    1 program: decl_list func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}' .

    $default  reduce using rule 1 (program)
