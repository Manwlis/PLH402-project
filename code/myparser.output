Terminals unused in grammar

   KW_BREAK


Grammar

    0 $accept: program $end

    1 program: decl_list func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
    2        | func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
    3        | decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
    4        | KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'

    5 type_spec: KW_INT
    6          | KW_REAL
    7          | KW_BOOL
    8          | KW_STRING
    9          | '[' ']' KW_INT
   10          | '[' ']' KW_REAL
   11          | '[' ']' KW_BOOL
   12          | '[' ']' KW_STRING

   13 decl_id: IDENTIFIER
   14        | IDENTIFIER '[' ']'
   15        | table_id

   16 table_id: IDENTIFIER '[' expr ']'

   17 table_init: '{' table_init_values '}'

   18 table_init_values: table_init_values ',' expr
   19                  | expr

   20 decl_list: decl_list decl
   21          | decl

   22 decl: KW_CONST const_decl_body
   23     | KW_LET let_decl_body

   24 let_decl_body: let_decl_list ':' type_spec ';'

   25 let_decl_list: let_decl_list ',' let_decl_init
   26              | let_decl_init

   27 let_decl_init: decl_id
   28              | decl_id ASSIGN_OP expr
   29              | decl_id ASSIGN_OP table_init

   30 const_decl_body: const_decl_list ':' type_spec ';'

   31 const_decl_list: const_decl_list ',' const_decl_init
   32                | const_decl_init

   33 const_decl_init: decl_id ASSIGN_OP expr
   34                | decl_id ASSIGN_OP table_init

   35 func_list: func_list func
   36          | func

   37 func: KW_CONST decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}' ';'

   38 func_param_list: %empty
   39                | func_param_list ',' func_param
   40                | func_param

   41 func_param: param_list ':' type_spec

   42 param_list: param_list ',' decl_id
   43           | decl_id

   44 body: instr_list
   45     | body_decl_list instr_list

   46 body_decl_list: body_decl_list decl
   47               | decl

   48 instr_list: instr_list instr
   49           | instr

   50 expr: term '+' expr
   51     | term '-' expr
   52     | term '*' expr
   53     | term '/' expr
   54     | term '%' expr
   55     | term '=' expr
   56     | term '<' expr
   57     | term EQUAL_LESS_OP expr
   58     | term DIFFERENT_OP expr
   59     | term AND_OP expr
   60     | term OR_OP expr
   61     | term

   62 term: POS_INT
   63     | POS_REAL
   64     | STRING
   65     | bool
   66     | decl_id
   67     | func_call
   68     | '(' expr ')'
   69     | '-' term
   70     | '+' term
   71     | NOT_OP term

   72 bool: KW_TRUE
   73     | KW_FALSE

   74 func_call: IDENTIFIER '(' func_stm ')'
   75          | IDENTIFIER '(' ')'

   76 func_stm: func_stm ',' expr
   77         | expr

   78 instr: instr_func_call
   79      | instr_assigment
   80      | instr_control
   81      | instr_loop
   82      | return

   83 instr_assigment: decl_id ASSIGN_OP expr ';'

   84 instr_control: KW_IF expr KW_THEN stmt KW_ELSE stmt KW_FI ';'
   85              | KW_IF expr KW_THEN stmt KW_FI ';'

   86 stmt: instr_list

   87 instr_loop: KW_WHILE expr KW_LOOP stmt KW_POOL ';'

   88 return: KW_RETURN expr ';'
   89       | KW_RETURN ';'

   90 instr_func_call: func_call ';'


Terminals, with rules where they appear

$end (0) 0
'%' (37) 54
'(' (40) 1 2 3 4 37 68 74 75
')' (41) 1 2 3 4 37 68 74 75
'*' (42) 52
'+' (43) 50 70
',' (44) 18 25 31 39 42 76
'-' (45) 51 69
'/' (47) 53
':' (58) 1 2 3 4 24 30 37 41
';' (59) 24 30 37 83 84 85 87 88 89 90
'<' (60) 56
'=' (61) 55
'[' (91) 9 10 11 12 14 16
']' (93) 9 10 11 12 14 16
'{' (123) 1 2 3 4 17 37
'}' (125) 1 2 3 4 17 37
error (256)
KW_INT (258) 1 2 3 4 5 9
KW_REAL (259) 6 10
KW_BOOL (260) 7 11
KW_STRING (261) 8 12
KW_IF (262) 84 85
KW_THEN (263) 84 85
KW_ELSE (264) 84
KW_FI (265) 84 85
KW_WHILE (266) 87
KW_LOOP (267) 87
KW_POOL (268) 87
KW_CONST (269) 1 2 3 4 22 37
KW_LET (270) 23
KW_BREAK (271)
KW_RETURN (272) 88 89
KW_START (273) 1 2 3 4
DIFFERENT_OP (274) 58
EQUAL_LESS_OP (275) 57
AND_OP (276) 59
OR_OP (277) 60
NOT_OP (278) 71
ASSIGN_OP (279) 1 2 3 4 28 29 33 34 37 83
ARROW_OP (280) 1 2 3 4 37
POS_INT (281) 62
POS_REAL (282) 63
KW_TRUE (283) 72
KW_FALSE (284) 73
IDENTIFIER (285) 13 14 16 74 75
STRING (286) 64


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1 2 3 4, on right: 0
type_spec (50)
    on left: 5 6 7 8 9 10 11 12, on right: 24 30 37 41
decl_id (51)
    on left: 13 14 15, on right: 27 28 29 33 34 37 42 43 66 83
table_id (52)
    on left: 16, on right: 15
table_init (53)
    on left: 17, on right: 29 34
table_init_values (54)
    on left: 18 19, on right: 17 18
decl_list (55)
    on left: 20 21, on right: 1 3 20
decl (56)
    on left: 22 23, on right: 20 21 46 47
let_decl_body (57)
    on left: 24, on right: 23
let_decl_list (58)
    on left: 25 26, on right: 24 25
let_decl_init (59)
    on left: 27 28 29, on right: 25 26
const_decl_body (60)
    on left: 30, on right: 22
const_decl_list (61)
    on left: 31 32, on right: 30 31
const_decl_init (62)
    on left: 33 34, on right: 31 32
func_list (63)
    on left: 35 36, on right: 1 2 35
func (64)
    on left: 37, on right: 35 36
func_param_list (65)
    on left: 38 39 40, on right: 37 39
func_param (66)
    on left: 41, on right: 39 40
param_list (67)
    on left: 42 43, on right: 41 42
body (68)
    on left: 44 45, on right: 1 2 3 4 37
body_decl_list (69)
    on left: 46 47, on right: 45 46
instr_list (70)
    on left: 48 49, on right: 44 45 48 86
expr (71)
    on left: 50 51 52 53 54 55 56 57 58 59 60 61, on right: 16 18 19
    28 33 50 51 52 53 54 55 56 57 58 59 60 68 76 77 83 84 85 87 88
term (72)
    on left: 62 63 64 65 66 67 68 69 70 71, on right: 50 51 52 53 54
    55 56 57 58 59 60 61 69 70 71
bool (73)
    on left: 72 73, on right: 65
func_call (74)
    on left: 74 75, on right: 67 90
func_stm (75)
    on left: 76 77, on right: 74 76
instr (76)
    on left: 78 79 80 81 82, on right: 48 49
instr_assigment (77)
    on left: 83, on right: 79
instr_control (78)
    on left: 84 85, on right: 80
stmt (79)
    on left: 86, on right: 84 85 87
instr_loop (80)
    on left: 87, on right: 81
return (81)
    on left: 88 89, on right: 82
instr_func_call (82)
    on left: 90, on right: 78


State 0

    0 $accept: . program $end
    1 program: . decl_list func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
    2        | . func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
    3        | . decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
    4        | . KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
   20 decl_list: . decl_list decl
   21          | . decl
   22 decl: . KW_CONST const_decl_body
   23     | . KW_LET let_decl_body
   35 func_list: . func_list func
   36          | . func
   37 func: . KW_CONST decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}' ';'

    KW_CONST  shift, and go to state 1
    KW_LET    shift, and go to state 2

    program    go to state 3
    decl_list  go to state 4
    decl       go to state 5
    func_list  go to state 6
    func       go to state 7


State 1

    4 program: KW_CONST . KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   22 decl: KW_CONST . const_decl_body
   30 const_decl_body: . const_decl_list ':' type_spec ';'
   31 const_decl_list: . const_decl_list ',' const_decl_init
   32                | . const_decl_init
   33 const_decl_init: . decl_id ASSIGN_OP expr
   34                | . decl_id ASSIGN_OP table_init
   37 func: KW_CONST . decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}' ';'

    KW_START    shift, and go to state 8
    IDENTIFIER  shift, and go to state 9

    decl_id          go to state 10
    table_id         go to state 11
    const_decl_body  go to state 12
    const_decl_list  go to state 13
    const_decl_init  go to state 14


State 2

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   23 decl: KW_LET . let_decl_body
   24 let_decl_body: . let_decl_list ':' type_spec ';'
   25 let_decl_list: . let_decl_list ',' let_decl_init
   26              | . let_decl_init
   27 let_decl_init: . decl_id
   28              | . decl_id ASSIGN_OP expr
   29              | . decl_id ASSIGN_OP table_init

    IDENTIFIER  shift, and go to state 9

    decl_id        go to state 15
    table_id       go to state 11
    let_decl_body  go to state 16
    let_decl_list  go to state 17
    let_decl_init  go to state 18


State 3

    0 $accept: program . $end

    $end  shift, and go to state 19


State 4

    1 program: decl_list . func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
    3        | decl_list . KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
   20 decl_list: decl_list . decl
   22 decl: . KW_CONST const_decl_body
   23     | . KW_LET let_decl_body
   35 func_list: . func_list func
   36          | . func
   37 func: . KW_CONST decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}' ';'

    KW_CONST  shift, and go to state 20
    KW_LET    shift, and go to state 2

    decl       go to state 21
    func_list  go to state 22
    func       go to state 7


State 5

   21 decl_list: decl .

    $default  reduce using rule 21 (decl_list)


State 6

    2 program: func_list . KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
   35 func_list: func_list . func
   37 func: . KW_CONST decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}' ';'

    KW_CONST  shift, and go to state 23

    func  go to state 24


State 7

   36 func_list: func .

    $default  reduce using rule 36 (func_list)


State 8

    4 program: KW_CONST KW_START . ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'

    ASSIGN_OP  shift, and go to state 25


State 9

   13 decl_id: IDENTIFIER .  [ASSIGN_OP, ':', ',']
   14        | IDENTIFIER . '[' ']'
   16 table_id: IDENTIFIER . '[' expr ']'

    '['  shift, and go to state 26

    $default  reduce using rule 13 (decl_id)


State 10

   33 const_decl_init: decl_id . ASSIGN_OP expr
   34                | decl_id . ASSIGN_OP table_init
   37 func: KW_CONST decl_id . ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}' ';'

    ASSIGN_OP  shift, and go to state 27


State 11

   15 decl_id: table_id .

    $default  reduce using rule 15 (decl_id)


State 12

   22 decl: KW_CONST const_decl_body .

    $default  reduce using rule 22 (decl)


State 13

   30 const_decl_body: const_decl_list . ':' type_spec ';'
   31 const_decl_list: const_decl_list . ',' const_decl_init

    ':'  shift, and go to state 28
    ','  shift, and go to state 29


State 14

   32 const_decl_list: const_decl_init .

    $default  reduce using rule 32 (const_decl_list)


State 15

   27 let_decl_init: decl_id .  [':', ',']
   28              | decl_id . ASSIGN_OP expr
   29              | decl_id . ASSIGN_OP table_init

    ASSIGN_OP  shift, and go to state 30

    $default  reduce using rule 27 (let_decl_init)


State 16

   23 decl: KW_LET let_decl_body .

    $default  reduce using rule 23 (decl)


State 17

   24 let_decl_body: let_decl_list . ':' type_spec ';'
   25 let_decl_list: let_decl_list . ',' let_decl_init

    ':'  shift, and go to state 31
    ','  shift, and go to state 32


State 18

   26 let_decl_list: let_decl_init .

    $default  reduce using rule 26 (let_decl_list)


State 19

    0 $accept: program $end .

    $default  accept


State 20

    3 program: decl_list KW_CONST . KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   22 decl: KW_CONST . const_decl_body
   30 const_decl_body: . const_decl_list ':' type_spec ';'
   31 const_decl_list: . const_decl_list ',' const_decl_init
   32                | . const_decl_init
   33 const_decl_init: . decl_id ASSIGN_OP expr
   34                | . decl_id ASSIGN_OP table_init
   37 func: KW_CONST . decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}' ';'

    KW_START    shift, and go to state 33
    IDENTIFIER  shift, and go to state 9

    decl_id          go to state 10
    table_id         go to state 11
    const_decl_body  go to state 12
    const_decl_list  go to state 13
    const_decl_init  go to state 14


State 21

   20 decl_list: decl_list decl .

    $default  reduce using rule 20 (decl_list)


State 22

    1 program: decl_list func_list . KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
   35 func_list: func_list . func
   37 func: . KW_CONST decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}' ';'

    KW_CONST  shift, and go to state 34

    func  go to state 24


State 23

    2 program: func_list KW_CONST . KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   37 func: KW_CONST . decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}' ';'

    KW_START    shift, and go to state 35
    IDENTIFIER  shift, and go to state 9

    decl_id   go to state 36
    table_id  go to state 11


State 24

   35 func_list: func_list func .

    $default  reduce using rule 35 (func_list)


State 25

    4 program: KW_CONST KW_START ASSIGN_OP . '(' ')' ':' KW_INT ARROW_OP '{' body '}'

    '('  shift, and go to state 37


State 26

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   14        | IDENTIFIER '[' . ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   16         | IDENTIFIER '[' . expr ']'
   50 expr: . term '+' expr
   51     | . term '-' expr
   52     | . term '*' expr
   53     | . term '/' expr
   54     | . term '%' expr
   55     | . term '=' expr
   56     | . term '<' expr
   57     | . term EQUAL_LESS_OP expr
   58     | . term DIFFERENT_OP expr
   59     | . term AND_OP expr
   60     | . term OR_OP expr
   61     | . term
   62 term: . POS_INT
   63     | . POS_REAL
   64     | . STRING
   65     | . bool
   66     | . decl_id
   67     | . func_call
   68     | . '(' expr ')'
   69     | . '-' term
   70     | . '+' term
   71     | . NOT_OP term
   72 bool: . KW_TRUE
   73     | . KW_FALSE
   74 func_call: . IDENTIFIER '(' func_stm ')'
   75          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    STRING      shift, and go to state 44
    '('         shift, and go to state 45
    ']'         shift, and go to state 46
    '+'         shift, and go to state 47
    '-'         shift, and go to state 48

    decl_id    go to state 49
    table_id   go to state 11
    expr       go to state 50
    term       go to state 51
    bool       go to state 52
    func_call  go to state 53


State 27

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   17 table_init: . '{' table_init_values '}'
   33 const_decl_init: decl_id ASSIGN_OP . expr
   34                | decl_id ASSIGN_OP . table_init
   37 func: KW_CONST decl_id ASSIGN_OP . '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}' ';'
   50 expr: . term '+' expr
   51     | . term '-' expr
   52     | . term '*' expr
   53     | . term '/' expr
   54     | . term '%' expr
   55     | . term '=' expr
   56     | . term '<' expr
   57     | . term EQUAL_LESS_OP expr
   58     | . term DIFFERENT_OP expr
   59     | . term AND_OP expr
   60     | . term OR_OP expr
   61     | . term
   62 term: . POS_INT
   63     | . POS_REAL
   64     | . STRING
   65     | . bool
   66     | . decl_id
   67     | . func_call
   68     | . '(' expr ')'
   69     | . '-' term
   70     | . '+' term
   71     | . NOT_OP term
   72 bool: . KW_TRUE
   73     | . KW_FALSE
   74 func_call: . IDENTIFIER '(' func_stm ')'
   75          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    STRING      shift, and go to state 44
    '('         shift, and go to state 54
    '{'         shift, and go to state 55
    '+'         shift, and go to state 47
    '-'         shift, and go to state 48

    decl_id     go to state 49
    table_id    go to state 11
    table_init  go to state 56
    expr        go to state 57
    term        go to state 51
    bool        go to state 52
    func_call   go to state 53


State 28

    5 type_spec: . KW_INT
    6          | . KW_REAL
    7          | . KW_BOOL
    8          | . KW_STRING
    9          | . '[' ']' KW_INT
   10          | . '[' ']' KW_REAL
   11          | . '[' ']' KW_BOOL
   12          | . '[' ']' KW_STRING
   30 const_decl_body: const_decl_list ':' . type_spec ';'

    KW_INT     shift, and go to state 58
    KW_REAL    shift, and go to state 59
    KW_BOOL    shift, and go to state 60
    KW_STRING  shift, and go to state 61
    '['        shift, and go to state 62

    type_spec  go to state 63


State 29

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   31 const_decl_list: const_decl_list ',' . const_decl_init
   33 const_decl_init: . decl_id ASSIGN_OP expr
   34                | . decl_id ASSIGN_OP table_init

    IDENTIFIER  shift, and go to state 9

    decl_id          go to state 64
    table_id         go to state 11
    const_decl_init  go to state 65


State 30

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   17 table_init: . '{' table_init_values '}'
   28 let_decl_init: decl_id ASSIGN_OP . expr
   29              | decl_id ASSIGN_OP . table_init
   50 expr: . term '+' expr
   51     | . term '-' expr
   52     | . term '*' expr
   53     | . term '/' expr
   54     | . term '%' expr
   55     | . term '=' expr
   56     | . term '<' expr
   57     | . term EQUAL_LESS_OP expr
   58     | . term DIFFERENT_OP expr
   59     | . term AND_OP expr
   60     | . term OR_OP expr
   61     | . term
   62 term: . POS_INT
   63     | . POS_REAL
   64     | . STRING
   65     | . bool
   66     | . decl_id
   67     | . func_call
   68     | . '(' expr ')'
   69     | . '-' term
   70     | . '+' term
   71     | . NOT_OP term
   72 bool: . KW_TRUE
   73     | . KW_FALSE
   74 func_call: . IDENTIFIER '(' func_stm ')'
   75          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    STRING      shift, and go to state 44
    '('         shift, and go to state 45
    '{'         shift, and go to state 55
    '+'         shift, and go to state 47
    '-'         shift, and go to state 48

    decl_id     go to state 49
    table_id    go to state 11
    table_init  go to state 66
    expr        go to state 67
    term        go to state 51
    bool        go to state 52
    func_call   go to state 53


State 31

    5 type_spec: . KW_INT
    6          | . KW_REAL
    7          | . KW_BOOL
    8          | . KW_STRING
    9          | . '[' ']' KW_INT
   10          | . '[' ']' KW_REAL
   11          | . '[' ']' KW_BOOL
   12          | . '[' ']' KW_STRING
   24 let_decl_body: let_decl_list ':' . type_spec ';'

    KW_INT     shift, and go to state 58
    KW_REAL    shift, and go to state 59
    KW_BOOL    shift, and go to state 60
    KW_STRING  shift, and go to state 61
    '['        shift, and go to state 62

    type_spec  go to state 68


State 32

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   25 let_decl_list: let_decl_list ',' . let_decl_init
   27 let_decl_init: . decl_id
   28              | . decl_id ASSIGN_OP expr
   29              | . decl_id ASSIGN_OP table_init

    IDENTIFIER  shift, and go to state 9

    decl_id        go to state 15
    table_id       go to state 11
    let_decl_init  go to state 69


State 33

    3 program: decl_list KW_CONST KW_START . ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'

    ASSIGN_OP  shift, and go to state 70


State 34

    1 program: decl_list func_list KW_CONST . KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   37 func: KW_CONST . decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}' ';'

    KW_START    shift, and go to state 71
    IDENTIFIER  shift, and go to state 9

    decl_id   go to state 36
    table_id  go to state 11


State 35

    2 program: func_list KW_CONST KW_START . ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'

    ASSIGN_OP  shift, and go to state 72


State 36

   37 func: KW_CONST decl_id . ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}' ';'

    ASSIGN_OP  shift, and go to state 73


State 37

    4 program: KW_CONST KW_START ASSIGN_OP '(' . ')' ':' KW_INT ARROW_OP '{' body '}'

    ')'  shift, and go to state 74


State 38

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   62 term: . POS_INT
   63     | . POS_REAL
   64     | . STRING
   65     | . bool
   66     | . decl_id
   67     | . func_call
   68     | . '(' expr ')'
   69     | . '-' term
   70     | . '+' term
   71     | . NOT_OP term
   71     | NOT_OP . term
   72 bool: . KW_TRUE
   73     | . KW_FALSE
   74 func_call: . IDENTIFIER '(' func_stm ')'
   75          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    STRING      shift, and go to state 44
    '('         shift, and go to state 45
    '+'         shift, and go to state 47
    '-'         shift, and go to state 48

    decl_id    go to state 49
    table_id   go to state 11
    term       go to state 75
    bool       go to state 52
    func_call  go to state 53


State 39

   62 term: POS_INT .

    $default  reduce using rule 62 (term)


State 40

   63 term: POS_REAL .

    $default  reduce using rule 63 (term)


State 41

   72 bool: KW_TRUE .

    $default  reduce using rule 72 (bool)


State 42

   73 bool: KW_FALSE .

    $default  reduce using rule 73 (bool)


State 43

   13 decl_id: IDENTIFIER .  [KW_THEN, KW_LOOP, DIFFERENT_OP, EQUAL_LESS_OP, AND_OP, OR_OP, ASSIGN_OP, ')', ':', '}', ']', ',', ';', '+', '-', '*', '/', '%', '=', '<']
   14        | IDENTIFIER . '[' ']'
   16 table_id: IDENTIFIER . '[' expr ']'
   74 func_call: IDENTIFIER . '(' func_stm ')'
   75          | IDENTIFIER . '(' ')'

    '('  shift, and go to state 76
    '['  shift, and go to state 26

    $default  reduce using rule 13 (decl_id)


State 44

   64 term: STRING .

    $default  reduce using rule 64 (term)


State 45

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   50 expr: . term '+' expr
   51     | . term '-' expr
   52     | . term '*' expr
   53     | . term '/' expr
   54     | . term '%' expr
   55     | . term '=' expr
   56     | . term '<' expr
   57     | . term EQUAL_LESS_OP expr
   58     | . term DIFFERENT_OP expr
   59     | . term AND_OP expr
   60     | . term OR_OP expr
   61     | . term
   62 term: . POS_INT
   63     | . POS_REAL
   64     | . STRING
   65     | . bool
   66     | . decl_id
   67     | . func_call
   68     | . '(' expr ')'
   68     | '(' . expr ')'
   69     | . '-' term
   70     | . '+' term
   71     | . NOT_OP term
   72 bool: . KW_TRUE
   73     | . KW_FALSE
   74 func_call: . IDENTIFIER '(' func_stm ')'
   75          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    STRING      shift, and go to state 44
    '('         shift, and go to state 45
    '+'         shift, and go to state 47
    '-'         shift, and go to state 48

    decl_id    go to state 49
    table_id   go to state 11
    expr       go to state 77
    term       go to state 51
    bool       go to state 52
    func_call  go to state 53


State 46

   14 decl_id: IDENTIFIER '[' ']' .

    $default  reduce using rule 14 (decl_id)


State 47

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   62 term: . POS_INT
   63     | . POS_REAL
   64     | . STRING
   65     | . bool
   66     | . decl_id
   67     | . func_call
   68     | . '(' expr ')'
   69     | . '-' term
   70     | . '+' term
   70     | '+' . term
   71     | . NOT_OP term
   72 bool: . KW_TRUE
   73     | . KW_FALSE
   74 func_call: . IDENTIFIER '(' func_stm ')'
   75          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    STRING      shift, and go to state 44
    '('         shift, and go to state 45
    '+'         shift, and go to state 47
    '-'         shift, and go to state 48

    decl_id    go to state 49
    table_id   go to state 11
    term       go to state 78
    bool       go to state 52
    func_call  go to state 53


State 48

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   62 term: . POS_INT
   63     | . POS_REAL
   64     | . STRING
   65     | . bool
   66     | . decl_id
   67     | . func_call
   68     | . '(' expr ')'
   69     | . '-' term
   69     | '-' . term
   70     | . '+' term
   71     | . NOT_OP term
   72 bool: . KW_TRUE
   73     | . KW_FALSE
   74 func_call: . IDENTIFIER '(' func_stm ')'
   75          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    STRING      shift, and go to state 44
    '('         shift, and go to state 45
    '+'         shift, and go to state 47
    '-'         shift, and go to state 48

    decl_id    go to state 49
    table_id   go to state 11
    term       go to state 79
    bool       go to state 52
    func_call  go to state 53


State 49

   66 term: decl_id .

    $default  reduce using rule 66 (term)


State 50

   16 table_id: IDENTIFIER '[' expr . ']'

    ']'  shift, and go to state 80


State 51

   50 expr: term . '+' expr
   51     | term . '-' expr
   52     | term . '*' expr
   53     | term . '/' expr
   54     | term . '%' expr
   55     | term . '=' expr
   56     | term . '<' expr
   57     | term . EQUAL_LESS_OP expr
   58     | term . DIFFERENT_OP expr
   59     | term . AND_OP expr
   60     | term . OR_OP expr
   61     | term .  [KW_THEN, KW_LOOP, ')', ':', '}', ']', ',', ';']

    DIFFERENT_OP   shift, and go to state 81
    EQUAL_LESS_OP  shift, and go to state 82
    AND_OP         shift, and go to state 83
    OR_OP          shift, and go to state 84
    '+'            shift, and go to state 85
    '-'            shift, and go to state 86
    '*'            shift, and go to state 87
    '/'            shift, and go to state 88
    '%'            shift, and go to state 89
    '='            shift, and go to state 90
    '<'            shift, and go to state 91

    $default  reduce using rule 61 (expr)


State 52

   65 term: bool .

    $default  reduce using rule 65 (term)


State 53

   67 term: func_call .

    $default  reduce using rule 67 (term)


State 54

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   37 func: KW_CONST decl_id ASSIGN_OP '(' . func_param_list ')' ':' type_spec ARROW_OP '{' body '}' ';'
   38 func_param_list: . %empty  [')', ',']
   39                | . func_param_list ',' func_param
   40                | . func_param
   41 func_param: . param_list ':' type_spec
   42 param_list: . param_list ',' decl_id
   43           | . decl_id
   50 expr: . term '+' expr
   51     | . term '-' expr
   52     | . term '*' expr
   53     | . term '/' expr
   54     | . term '%' expr
   55     | . term '=' expr
   56     | . term '<' expr
   57     | . term EQUAL_LESS_OP expr
   58     | . term DIFFERENT_OP expr
   59     | . term AND_OP expr
   60     | . term OR_OP expr
   61     | . term
   62 term: . POS_INT
   63     | . POS_REAL
   64     | . STRING
   65     | . bool
   66     | . decl_id
   67     | . func_call
   68     | . '(' expr ')'
   68     | '(' . expr ')'
   69     | . '-' term
   70     | . '+' term
   71     | . NOT_OP term
   72 bool: . KW_TRUE
   73     | . KW_FALSE
   74 func_call: . IDENTIFIER '(' func_stm ')'
   75          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    STRING      shift, and go to state 44
    '('         shift, and go to state 45
    '+'         shift, and go to state 47
    '-'         shift, and go to state 48

    $default  reduce using rule 38 (func_param_list)

    decl_id          go to state 92
    table_id         go to state 11
    func_param_list  go to state 93
    func_param       go to state 94
    param_list       go to state 95
    expr             go to state 77
    term             go to state 51
    bool             go to state 52
    func_call        go to state 53


State 55

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   17 table_init: '{' . table_init_values '}'
   18 table_init_values: . table_init_values ',' expr
   19                  | . expr
   50 expr: . term '+' expr
   51     | . term '-' expr
   52     | . term '*' expr
   53     | . term '/' expr
   54     | . term '%' expr
   55     | . term '=' expr
   56     | . term '<' expr
   57     | . term EQUAL_LESS_OP expr
   58     | . term DIFFERENT_OP expr
   59     | . term AND_OP expr
   60     | . term OR_OP expr
   61     | . term
   62 term: . POS_INT
   63     | . POS_REAL
   64     | . STRING
   65     | . bool
   66     | . decl_id
   67     | . func_call
   68     | . '(' expr ')'
   69     | . '-' term
   70     | . '+' term
   71     | . NOT_OP term
   72 bool: . KW_TRUE
   73     | . KW_FALSE
   74 func_call: . IDENTIFIER '(' func_stm ')'
   75          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    STRING      shift, and go to state 44
    '('         shift, and go to state 45
    '+'         shift, and go to state 47
    '-'         shift, and go to state 48

    decl_id            go to state 49
    table_id           go to state 11
    table_init_values  go to state 96
    expr               go to state 97
    term               go to state 51
    bool               go to state 52
    func_call          go to state 53


State 56

   34 const_decl_init: decl_id ASSIGN_OP table_init .

    $default  reduce using rule 34 (const_decl_init)


State 57

   33 const_decl_init: decl_id ASSIGN_OP expr .

    $default  reduce using rule 33 (const_decl_init)


State 58

    5 type_spec: KW_INT .

    $default  reduce using rule 5 (type_spec)


State 59

    6 type_spec: KW_REAL .

    $default  reduce using rule 6 (type_spec)


State 60

    7 type_spec: KW_BOOL .

    $default  reduce using rule 7 (type_spec)


State 61

    8 type_spec: KW_STRING .

    $default  reduce using rule 8 (type_spec)


State 62

    9 type_spec: '[' . ']' KW_INT
   10          | '[' . ']' KW_REAL
   11          | '[' . ']' KW_BOOL
   12          | '[' . ']' KW_STRING

    ']'  shift, and go to state 98


State 63

   30 const_decl_body: const_decl_list ':' type_spec . ';'

    ';'  shift, and go to state 99


State 64

   33 const_decl_init: decl_id . ASSIGN_OP expr
   34                | decl_id . ASSIGN_OP table_init

    ASSIGN_OP  shift, and go to state 100


State 65

   31 const_decl_list: const_decl_list ',' const_decl_init .

    $default  reduce using rule 31 (const_decl_list)


State 66

   29 let_decl_init: decl_id ASSIGN_OP table_init .

    $default  reduce using rule 29 (let_decl_init)


State 67

   28 let_decl_init: decl_id ASSIGN_OP expr .

    $default  reduce using rule 28 (let_decl_init)


State 68

   24 let_decl_body: let_decl_list ':' type_spec . ';'

    ';'  shift, and go to state 101


State 69

   25 let_decl_list: let_decl_list ',' let_decl_init .

    $default  reduce using rule 25 (let_decl_list)


State 70

    3 program: decl_list KW_CONST KW_START ASSIGN_OP . '(' ')' ':' KW_INT ARROW_OP '{' body '}'

    '('  shift, and go to state 102


State 71

    1 program: decl_list func_list KW_CONST KW_START . ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'

    ASSIGN_OP  shift, and go to state 103


State 72

    2 program: func_list KW_CONST KW_START ASSIGN_OP . '(' ')' ':' KW_INT ARROW_OP '{' body '}'

    '('  shift, and go to state 104


State 73

   37 func: KW_CONST decl_id ASSIGN_OP . '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}' ';'

    '('  shift, and go to state 105


State 74

    4 program: KW_CONST KW_START ASSIGN_OP '(' ')' . ':' KW_INT ARROW_OP '{' body '}'

    ':'  shift, and go to state 106


State 75

   71 term: NOT_OP term .

    $default  reduce using rule 71 (term)


State 76

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   50 expr: . term '+' expr
   51     | . term '-' expr
   52     | . term '*' expr
   53     | . term '/' expr
   54     | . term '%' expr
   55     | . term '=' expr
   56     | . term '<' expr
   57     | . term EQUAL_LESS_OP expr
   58     | . term DIFFERENT_OP expr
   59     | . term AND_OP expr
   60     | . term OR_OP expr
   61     | . term
   62 term: . POS_INT
   63     | . POS_REAL
   64     | . STRING
   65     | . bool
   66     | . decl_id
   67     | . func_call
   68     | . '(' expr ')'
   69     | . '-' term
   70     | . '+' term
   71     | . NOT_OP term
   72 bool: . KW_TRUE
   73     | . KW_FALSE
   74 func_call: . IDENTIFIER '(' func_stm ')'
   74          | IDENTIFIER '(' . func_stm ')'
   75          | . IDENTIFIER '(' ')'
   75          | IDENTIFIER '(' . ')'
   76 func_stm: . func_stm ',' expr
   77         | . expr

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    STRING      shift, and go to state 44
    '('         shift, and go to state 45
    ')'         shift, and go to state 107
    '+'         shift, and go to state 47
    '-'         shift, and go to state 48

    decl_id    go to state 49
    table_id   go to state 11
    expr       go to state 108
    term       go to state 51
    bool       go to state 52
    func_call  go to state 53
    func_stm   go to state 109


State 77

   68 term: '(' expr . ')'

    ')'  shift, and go to state 110


State 78

   70 term: '+' term .

    $default  reduce using rule 70 (term)


State 79

   69 term: '-' term .

    $default  reduce using rule 69 (term)


State 80

   16 table_id: IDENTIFIER '[' expr ']' .

    $default  reduce using rule 16 (table_id)


State 81

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   50 expr: . term '+' expr
   51     | . term '-' expr
   52     | . term '*' expr
   53     | . term '/' expr
   54     | . term '%' expr
   55     | . term '=' expr
   56     | . term '<' expr
   57     | . term EQUAL_LESS_OP expr
   58     | . term DIFFERENT_OP expr
   58     | term DIFFERENT_OP . expr
   59     | . term AND_OP expr
   60     | . term OR_OP expr
   61     | . term
   62 term: . POS_INT
   63     | . POS_REAL
   64     | . STRING
   65     | . bool
   66     | . decl_id
   67     | . func_call
   68     | . '(' expr ')'
   69     | . '-' term
   70     | . '+' term
   71     | . NOT_OP term
   72 bool: . KW_TRUE
   73     | . KW_FALSE
   74 func_call: . IDENTIFIER '(' func_stm ')'
   75          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    STRING      shift, and go to state 44
    '('         shift, and go to state 45
    '+'         shift, and go to state 47
    '-'         shift, and go to state 48

    decl_id    go to state 49
    table_id   go to state 11
    expr       go to state 111
    term       go to state 51
    bool       go to state 52
    func_call  go to state 53


State 82

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   50 expr: . term '+' expr
   51     | . term '-' expr
   52     | . term '*' expr
   53     | . term '/' expr
   54     | . term '%' expr
   55     | . term '=' expr
   56     | . term '<' expr
   57     | . term EQUAL_LESS_OP expr
   57     | term EQUAL_LESS_OP . expr
   58     | . term DIFFERENT_OP expr
   59     | . term AND_OP expr
   60     | . term OR_OP expr
   61     | . term
   62 term: . POS_INT
   63     | . POS_REAL
   64     | . STRING
   65     | . bool
   66     | . decl_id
   67     | . func_call
   68     | . '(' expr ')'
   69     | . '-' term
   70     | . '+' term
   71     | . NOT_OP term
   72 bool: . KW_TRUE
   73     | . KW_FALSE
   74 func_call: . IDENTIFIER '(' func_stm ')'
   75          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    STRING      shift, and go to state 44
    '('         shift, and go to state 45
    '+'         shift, and go to state 47
    '-'         shift, and go to state 48

    decl_id    go to state 49
    table_id   go to state 11
    expr       go to state 112
    term       go to state 51
    bool       go to state 52
    func_call  go to state 53


State 83

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   50 expr: . term '+' expr
   51     | . term '-' expr
   52     | . term '*' expr
   53     | . term '/' expr
   54     | . term '%' expr
   55     | . term '=' expr
   56     | . term '<' expr
   57     | . term EQUAL_LESS_OP expr
   58     | . term DIFFERENT_OP expr
   59     | . term AND_OP expr
   59     | term AND_OP . expr
   60     | . term OR_OP expr
   61     | . term
   62 term: . POS_INT
   63     | . POS_REAL
   64     | . STRING
   65     | . bool
   66     | . decl_id
   67     | . func_call
   68     | . '(' expr ')'
   69     | . '-' term
   70     | . '+' term
   71     | . NOT_OP term
   72 bool: . KW_TRUE
   73     | . KW_FALSE
   74 func_call: . IDENTIFIER '(' func_stm ')'
   75          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    STRING      shift, and go to state 44
    '('         shift, and go to state 45
    '+'         shift, and go to state 47
    '-'         shift, and go to state 48

    decl_id    go to state 49
    table_id   go to state 11
    expr       go to state 113
    term       go to state 51
    bool       go to state 52
    func_call  go to state 53


State 84

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   50 expr: . term '+' expr
   51     | . term '-' expr
   52     | . term '*' expr
   53     | . term '/' expr
   54     | . term '%' expr
   55     | . term '=' expr
   56     | . term '<' expr
   57     | . term EQUAL_LESS_OP expr
   58     | . term DIFFERENT_OP expr
   59     | . term AND_OP expr
   60     | . term OR_OP expr
   60     | term OR_OP . expr
   61     | . term
   62 term: . POS_INT
   63     | . POS_REAL
   64     | . STRING
   65     | . bool
   66     | . decl_id
   67     | . func_call
   68     | . '(' expr ')'
   69     | . '-' term
   70     | . '+' term
   71     | . NOT_OP term
   72 bool: . KW_TRUE
   73     | . KW_FALSE
   74 func_call: . IDENTIFIER '(' func_stm ')'
   75          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    STRING      shift, and go to state 44
    '('         shift, and go to state 45
    '+'         shift, and go to state 47
    '-'         shift, and go to state 48

    decl_id    go to state 49
    table_id   go to state 11
    expr       go to state 114
    term       go to state 51
    bool       go to state 52
    func_call  go to state 53


State 85

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   50 expr: . term '+' expr
   50     | term '+' . expr
   51     | . term '-' expr
   52     | . term '*' expr
   53     | . term '/' expr
   54     | . term '%' expr
   55     | . term '=' expr
   56     | . term '<' expr
   57     | . term EQUAL_LESS_OP expr
   58     | . term DIFFERENT_OP expr
   59     | . term AND_OP expr
   60     | . term OR_OP expr
   61     | . term
   62 term: . POS_INT
   63     | . POS_REAL
   64     | . STRING
   65     | . bool
   66     | . decl_id
   67     | . func_call
   68     | . '(' expr ')'
   69     | . '-' term
   70     | . '+' term
   71     | . NOT_OP term
   72 bool: . KW_TRUE
   73     | . KW_FALSE
   74 func_call: . IDENTIFIER '(' func_stm ')'
   75          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    STRING      shift, and go to state 44
    '('         shift, and go to state 45
    '+'         shift, and go to state 47
    '-'         shift, and go to state 48

    decl_id    go to state 49
    table_id   go to state 11
    expr       go to state 115
    term       go to state 51
    bool       go to state 52
    func_call  go to state 53


State 86

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   50 expr: . term '+' expr
   51     | . term '-' expr
   51     | term '-' . expr
   52     | . term '*' expr
   53     | . term '/' expr
   54     | . term '%' expr
   55     | . term '=' expr
   56     | . term '<' expr
   57     | . term EQUAL_LESS_OP expr
   58     | . term DIFFERENT_OP expr
   59     | . term AND_OP expr
   60     | . term OR_OP expr
   61     | . term
   62 term: . POS_INT
   63     | . POS_REAL
   64     | . STRING
   65     | . bool
   66     | . decl_id
   67     | . func_call
   68     | . '(' expr ')'
   69     | . '-' term
   70     | . '+' term
   71     | . NOT_OP term
   72 bool: . KW_TRUE
   73     | . KW_FALSE
   74 func_call: . IDENTIFIER '(' func_stm ')'
   75          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    STRING      shift, and go to state 44
    '('         shift, and go to state 45
    '+'         shift, and go to state 47
    '-'         shift, and go to state 48

    decl_id    go to state 49
    table_id   go to state 11
    expr       go to state 116
    term       go to state 51
    bool       go to state 52
    func_call  go to state 53


State 87

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   50 expr: . term '+' expr
   51     | . term '-' expr
   52     | . term '*' expr
   52     | term '*' . expr
   53     | . term '/' expr
   54     | . term '%' expr
   55     | . term '=' expr
   56     | . term '<' expr
   57     | . term EQUAL_LESS_OP expr
   58     | . term DIFFERENT_OP expr
   59     | . term AND_OP expr
   60     | . term OR_OP expr
   61     | . term
   62 term: . POS_INT
   63     | . POS_REAL
   64     | . STRING
   65     | . bool
   66     | . decl_id
   67     | . func_call
   68     | . '(' expr ')'
   69     | . '-' term
   70     | . '+' term
   71     | . NOT_OP term
   72 bool: . KW_TRUE
   73     | . KW_FALSE
   74 func_call: . IDENTIFIER '(' func_stm ')'
   75          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    STRING      shift, and go to state 44
    '('         shift, and go to state 45
    '+'         shift, and go to state 47
    '-'         shift, and go to state 48

    decl_id    go to state 49
    table_id   go to state 11
    expr       go to state 117
    term       go to state 51
    bool       go to state 52
    func_call  go to state 53


State 88

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   50 expr: . term '+' expr
   51     | . term '-' expr
   52     | . term '*' expr
   53     | . term '/' expr
   53     | term '/' . expr
   54     | . term '%' expr
   55     | . term '=' expr
   56     | . term '<' expr
   57     | . term EQUAL_LESS_OP expr
   58     | . term DIFFERENT_OP expr
   59     | . term AND_OP expr
   60     | . term OR_OP expr
   61     | . term
   62 term: . POS_INT
   63     | . POS_REAL
   64     | . STRING
   65     | . bool
   66     | . decl_id
   67     | . func_call
   68     | . '(' expr ')'
   69     | . '-' term
   70     | . '+' term
   71     | . NOT_OP term
   72 bool: . KW_TRUE
   73     | . KW_FALSE
   74 func_call: . IDENTIFIER '(' func_stm ')'
   75          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    STRING      shift, and go to state 44
    '('         shift, and go to state 45
    '+'         shift, and go to state 47
    '-'         shift, and go to state 48

    decl_id    go to state 49
    table_id   go to state 11
    expr       go to state 118
    term       go to state 51
    bool       go to state 52
    func_call  go to state 53


State 89

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   50 expr: . term '+' expr
   51     | . term '-' expr
   52     | . term '*' expr
   53     | . term '/' expr
   54     | . term '%' expr
   54     | term '%' . expr
   55     | . term '=' expr
   56     | . term '<' expr
   57     | . term EQUAL_LESS_OP expr
   58     | . term DIFFERENT_OP expr
   59     | . term AND_OP expr
   60     | . term OR_OP expr
   61     | . term
   62 term: . POS_INT
   63     | . POS_REAL
   64     | . STRING
   65     | . bool
   66     | . decl_id
   67     | . func_call
   68     | . '(' expr ')'
   69     | . '-' term
   70     | . '+' term
   71     | . NOT_OP term
   72 bool: . KW_TRUE
   73     | . KW_FALSE
   74 func_call: . IDENTIFIER '(' func_stm ')'
   75          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    STRING      shift, and go to state 44
    '('         shift, and go to state 45
    '+'         shift, and go to state 47
    '-'         shift, and go to state 48

    decl_id    go to state 49
    table_id   go to state 11
    expr       go to state 119
    term       go to state 51
    bool       go to state 52
    func_call  go to state 53


State 90

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   50 expr: . term '+' expr
   51     | . term '-' expr
   52     | . term '*' expr
   53     | . term '/' expr
   54     | . term '%' expr
   55     | . term '=' expr
   55     | term '=' . expr
   56     | . term '<' expr
   57     | . term EQUAL_LESS_OP expr
   58     | . term DIFFERENT_OP expr
   59     | . term AND_OP expr
   60     | . term OR_OP expr
   61     | . term
   62 term: . POS_INT
   63     | . POS_REAL
   64     | . STRING
   65     | . bool
   66     | . decl_id
   67     | . func_call
   68     | . '(' expr ')'
   69     | . '-' term
   70     | . '+' term
   71     | . NOT_OP term
   72 bool: . KW_TRUE
   73     | . KW_FALSE
   74 func_call: . IDENTIFIER '(' func_stm ')'
   75          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    STRING      shift, and go to state 44
    '('         shift, and go to state 45
    '+'         shift, and go to state 47
    '-'         shift, and go to state 48

    decl_id    go to state 49
    table_id   go to state 11
    expr       go to state 120
    term       go to state 51
    bool       go to state 52
    func_call  go to state 53


State 91

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   50 expr: . term '+' expr
   51     | . term '-' expr
   52     | . term '*' expr
   53     | . term '/' expr
   54     | . term '%' expr
   55     | . term '=' expr
   56     | . term '<' expr
   56     | term '<' . expr
   57     | . term EQUAL_LESS_OP expr
   58     | . term DIFFERENT_OP expr
   59     | . term AND_OP expr
   60     | . term OR_OP expr
   61     | . term
   62 term: . POS_INT
   63     | . POS_REAL
   64     | . STRING
   65     | . bool
   66     | . decl_id
   67     | . func_call
   68     | . '(' expr ')'
   69     | . '-' term
   70     | . '+' term
   71     | . NOT_OP term
   72 bool: . KW_TRUE
   73     | . KW_FALSE
   74 func_call: . IDENTIFIER '(' func_stm ')'
   75          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    STRING      shift, and go to state 44
    '('         shift, and go to state 45
    '+'         shift, and go to state 47
    '-'         shift, and go to state 48

    decl_id    go to state 49
    table_id   go to state 11
    expr       go to state 121
    term       go to state 51
    bool       go to state 52
    func_call  go to state 53


State 92

   43 param_list: decl_id .  [':', ',']
   66 term: decl_id .  [DIFFERENT_OP, EQUAL_LESS_OP, AND_OP, OR_OP, ')', '+', '-', '*', '/', '%', '=', '<']

    ':'       reduce using rule 43 (param_list)
    ','       reduce using rule 43 (param_list)
    $default  reduce using rule 66 (term)


State 93

   37 func: KW_CONST decl_id ASSIGN_OP '(' func_param_list . ')' ':' type_spec ARROW_OP '{' body '}' ';'
   39 func_param_list: func_param_list . ',' func_param

    ')'  shift, and go to state 122
    ','  shift, and go to state 123


State 94

   40 func_param_list: func_param .

    $default  reduce using rule 40 (func_param_list)


State 95

   41 func_param: param_list . ':' type_spec
   42 param_list: param_list . ',' decl_id

    ':'  shift, and go to state 124
    ','  shift, and go to state 125


State 96

   17 table_init: '{' table_init_values . '}'
   18 table_init_values: table_init_values . ',' expr

    '}'  shift, and go to state 126
    ','  shift, and go to state 127


State 97

   19 table_init_values: expr .

    $default  reduce using rule 19 (table_init_values)


State 98

    9 type_spec: '[' ']' . KW_INT
   10          | '[' ']' . KW_REAL
   11          | '[' ']' . KW_BOOL
   12          | '[' ']' . KW_STRING

    KW_INT     shift, and go to state 128
    KW_REAL    shift, and go to state 129
    KW_BOOL    shift, and go to state 130
    KW_STRING  shift, and go to state 131


State 99

   30 const_decl_body: const_decl_list ':' type_spec ';' .

    $default  reduce using rule 30 (const_decl_body)


State 100

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   17 table_init: . '{' table_init_values '}'
   33 const_decl_init: decl_id ASSIGN_OP . expr
   34                | decl_id ASSIGN_OP . table_init
   50 expr: . term '+' expr
   51     | . term '-' expr
   52     | . term '*' expr
   53     | . term '/' expr
   54     | . term '%' expr
   55     | . term '=' expr
   56     | . term '<' expr
   57     | . term EQUAL_LESS_OP expr
   58     | . term DIFFERENT_OP expr
   59     | . term AND_OP expr
   60     | . term OR_OP expr
   61     | . term
   62 term: . POS_INT
   63     | . POS_REAL
   64     | . STRING
   65     | . bool
   66     | . decl_id
   67     | . func_call
   68     | . '(' expr ')'
   69     | . '-' term
   70     | . '+' term
   71     | . NOT_OP term
   72 bool: . KW_TRUE
   73     | . KW_FALSE
   74 func_call: . IDENTIFIER '(' func_stm ')'
   75          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    STRING      shift, and go to state 44
    '('         shift, and go to state 45
    '{'         shift, and go to state 55
    '+'         shift, and go to state 47
    '-'         shift, and go to state 48

    decl_id     go to state 49
    table_id    go to state 11
    table_init  go to state 56
    expr        go to state 57
    term        go to state 51
    bool        go to state 52
    func_call   go to state 53


State 101

   24 let_decl_body: let_decl_list ':' type_spec ';' .

    $default  reduce using rule 24 (let_decl_body)


State 102

    3 program: decl_list KW_CONST KW_START ASSIGN_OP '(' . ')' ':' KW_INT ARROW_OP '{' body '}'

    ')'  shift, and go to state 132


State 103

    1 program: decl_list func_list KW_CONST KW_START ASSIGN_OP . '(' ')' ':' KW_INT ARROW_OP '{' body '}'

    '('  shift, and go to state 133


State 104

    2 program: func_list KW_CONST KW_START ASSIGN_OP '(' . ')' ':' KW_INT ARROW_OP '{' body '}'

    ')'  shift, and go to state 134


State 105

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   37 func: KW_CONST decl_id ASSIGN_OP '(' . func_param_list ')' ':' type_spec ARROW_OP '{' body '}' ';'
   38 func_param_list: . %empty  [')', ',']
   39                | . func_param_list ',' func_param
   40                | . func_param
   41 func_param: . param_list ':' type_spec
   42 param_list: . param_list ',' decl_id
   43           | . decl_id

    IDENTIFIER  shift, and go to state 9

    $default  reduce using rule 38 (func_param_list)

    decl_id          go to state 135
    table_id         go to state 11
    func_param_list  go to state 93
    func_param       go to state 94
    param_list       go to state 95


State 106

    4 program: KW_CONST KW_START ASSIGN_OP '(' ')' ':' . KW_INT ARROW_OP '{' body '}'

    KW_INT  shift, and go to state 136


State 107

   75 func_call: IDENTIFIER '(' ')' .

    $default  reduce using rule 75 (func_call)


State 108

   77 func_stm: expr .

    $default  reduce using rule 77 (func_stm)


State 109

   74 func_call: IDENTIFIER '(' func_stm . ')'
   76 func_stm: func_stm . ',' expr

    ')'  shift, and go to state 137
    ','  shift, and go to state 138


State 110

   68 term: '(' expr ')' .

    $default  reduce using rule 68 (term)


State 111

   58 expr: term DIFFERENT_OP expr .

    $default  reduce using rule 58 (expr)


State 112

   57 expr: term EQUAL_LESS_OP expr .

    $default  reduce using rule 57 (expr)


State 113

   59 expr: term AND_OP expr .

    $default  reduce using rule 59 (expr)


State 114

   60 expr: term OR_OP expr .

    $default  reduce using rule 60 (expr)


State 115

   50 expr: term '+' expr .

    $default  reduce using rule 50 (expr)


State 116

   51 expr: term '-' expr .

    $default  reduce using rule 51 (expr)


State 117

   52 expr: term '*' expr .

    $default  reduce using rule 52 (expr)


State 118

   53 expr: term '/' expr .

    $default  reduce using rule 53 (expr)


State 119

   54 expr: term '%' expr .

    $default  reduce using rule 54 (expr)


State 120

   55 expr: term '=' expr .

    $default  reduce using rule 55 (expr)


State 121

   56 expr: term '<' expr .

    $default  reduce using rule 56 (expr)


State 122

   37 func: KW_CONST decl_id ASSIGN_OP '(' func_param_list ')' . ':' type_spec ARROW_OP '{' body '}' ';'

    ':'  shift, and go to state 139


State 123

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   39 func_param_list: func_param_list ',' . func_param
   41 func_param: . param_list ':' type_spec
   42 param_list: . param_list ',' decl_id
   43           | . decl_id

    IDENTIFIER  shift, and go to state 9

    decl_id     go to state 135
    table_id    go to state 11
    func_param  go to state 140
    param_list  go to state 95


State 124

    5 type_spec: . KW_INT
    6          | . KW_REAL
    7          | . KW_BOOL
    8          | . KW_STRING
    9          | . '[' ']' KW_INT
   10          | . '[' ']' KW_REAL
   11          | . '[' ']' KW_BOOL
   12          | . '[' ']' KW_STRING
   41 func_param: param_list ':' . type_spec

    KW_INT     shift, and go to state 58
    KW_REAL    shift, and go to state 59
    KW_BOOL    shift, and go to state 60
    KW_STRING  shift, and go to state 61
    '['        shift, and go to state 62

    type_spec  go to state 141


State 125

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   42 param_list: param_list ',' . decl_id

    IDENTIFIER  shift, and go to state 9

    decl_id   go to state 142
    table_id  go to state 11


State 126

   17 table_init: '{' table_init_values '}' .

    $default  reduce using rule 17 (table_init)


State 127

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   18 table_init_values: table_init_values ',' . expr
   50 expr: . term '+' expr
   51     | . term '-' expr
   52     | . term '*' expr
   53     | . term '/' expr
   54     | . term '%' expr
   55     | . term '=' expr
   56     | . term '<' expr
   57     | . term EQUAL_LESS_OP expr
   58     | . term DIFFERENT_OP expr
   59     | . term AND_OP expr
   60     | . term OR_OP expr
   61     | . term
   62 term: . POS_INT
   63     | . POS_REAL
   64     | . STRING
   65     | . bool
   66     | . decl_id
   67     | . func_call
   68     | . '(' expr ')'
   69     | . '-' term
   70     | . '+' term
   71     | . NOT_OP term
   72 bool: . KW_TRUE
   73     | . KW_FALSE
   74 func_call: . IDENTIFIER '(' func_stm ')'
   75          | . IDENTIFIER '(' ')'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    STRING      shift, and go to state 44
    '('         shift, and go to state 45
    '+'         shift, and go to state 47
    '-'         shift, and go to state 48

    decl_id    go to state 49
    table_id   go to state 11
    expr       go to state 143
    term       go to state 51
    bool       go to state 52
    func_call  go to state 53


State 128

    9 type_spec: '[' ']' KW_INT .

    $default  reduce using rule 9 (type_spec)


State 129

   10 type_spec: '[' ']' KW_REAL .

    $default  reduce using rule 10 (type_spec)


State 130

   11 type_spec: '[' ']' KW_BOOL .

    $default  reduce using rule 11 (type_spec)


State 131

   12 type_spec: '[' ']' KW_STRING .

    $default  reduce using rule 12 (type_spec)


State 132

    3 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' . ':' KW_INT ARROW_OP '{' body '}'

    ':'  shift, and go to state 144


State 133

    1 program: decl_list func_list KW_CONST KW_START ASSIGN_OP '(' . ')' ':' KW_INT ARROW_OP '{' body '}'

    ')'  shift, and go to state 145


State 134

    2 program: func_list KW_CONST KW_START ASSIGN_OP '(' ')' . ':' KW_INT ARROW_OP '{' body '}'

    ':'  shift, and go to state 146


State 135

   43 param_list: decl_id .

    $default  reduce using rule 43 (param_list)


State 136

    4 program: KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT . ARROW_OP '{' body '}'

    ARROW_OP  shift, and go to state 147


State 137

   74 func_call: IDENTIFIER '(' func_stm ')' .

    $default  reduce using rule 74 (func_call)


State 138

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   50 expr: . term '+' expr
   51     | . term '-' expr
   52     | . term '*' expr
   53     | . term '/' expr
   54     | . term '%' expr
   55     | . term '=' expr
   56     | . term '<' expr
   57     | . term EQUAL_LESS_OP expr
   58     | . term DIFFERENT_OP expr
   59     | . term AND_OP expr
   60     | . term OR_OP expr
   61     | . term
   62 term: . POS_INT
   63     | . POS_REAL
   64     | . STRING
   65     | . bool
   66     | . decl_id
   67     | . func_call
   68     | . '(' expr ')'
   69     | . '-' term
   70     | . '+' term
   71     | . NOT_OP term
   72 bool: . KW_TRUE
   73     | . KW_FALSE
   74 func_call: . IDENTIFIER '(' func_stm ')'
   75          | . IDENTIFIER '(' ')'
   76 func_stm: func_stm ',' . expr

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    STRING      shift, and go to state 44
    '('         shift, and go to state 45
    '+'         shift, and go to state 47
    '-'         shift, and go to state 48

    decl_id    go to state 49
    table_id   go to state 11
    expr       go to state 148
    term       go to state 51
    bool       go to state 52
    func_call  go to state 53


State 139

    5 type_spec: . KW_INT
    6          | . KW_REAL
    7          | . KW_BOOL
    8          | . KW_STRING
    9          | . '[' ']' KW_INT
   10          | . '[' ']' KW_REAL
   11          | . '[' ']' KW_BOOL
   12          | . '[' ']' KW_STRING
   37 func: KW_CONST decl_id ASSIGN_OP '(' func_param_list ')' ':' . type_spec ARROW_OP '{' body '}' ';'

    KW_INT     shift, and go to state 58
    KW_REAL    shift, and go to state 59
    KW_BOOL    shift, and go to state 60
    KW_STRING  shift, and go to state 61
    '['        shift, and go to state 62

    type_spec  go to state 149


State 140

   39 func_param_list: func_param_list ',' func_param .

    $default  reduce using rule 39 (func_param_list)


State 141

   41 func_param: param_list ':' type_spec .

    $default  reduce using rule 41 (func_param)


State 142

   42 param_list: param_list ',' decl_id .

    $default  reduce using rule 42 (param_list)


State 143

   18 table_init_values: table_init_values ',' expr .

    $default  reduce using rule 18 (table_init_values)


State 144

    3 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' . KW_INT ARROW_OP '{' body '}'

    KW_INT  shift, and go to state 150


State 145

    1 program: decl_list func_list KW_CONST KW_START ASSIGN_OP '(' ')' . ':' KW_INT ARROW_OP '{' body '}'

    ':'  shift, and go to state 151


State 146

    2 program: func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' . KW_INT ARROW_OP '{' body '}'

    KW_INT  shift, and go to state 152


State 147

    4 program: KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP . '{' body '}'

    '{'  shift, and go to state 153


State 148

   76 func_stm: func_stm ',' expr .

    $default  reduce using rule 76 (func_stm)


State 149

   37 func: KW_CONST decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec . ARROW_OP '{' body '}' ';'

    ARROW_OP  shift, and go to state 154


State 150

    3 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT . ARROW_OP '{' body '}'

    ARROW_OP  shift, and go to state 155


State 151

    1 program: decl_list func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' . KW_INT ARROW_OP '{' body '}'

    KW_INT  shift, and go to state 156


State 152

    2 program: func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT . ARROW_OP '{' body '}'

    ARROW_OP  shift, and go to state 157


State 153

    4 program: KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' . body '}'
   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   22 decl: . KW_CONST const_decl_body
   23     | . KW_LET let_decl_body
   44 body: . instr_list
   45     | . body_decl_list instr_list
   46 body_decl_list: . body_decl_list decl
   47               | . decl
   48 instr_list: . instr_list instr
   49           | . instr
   74 func_call: . IDENTIFIER '(' func_stm ')'
   75          | . IDENTIFIER '(' ')'
   78 instr: . instr_func_call
   79      | . instr_assigment
   80      | . instr_control
   81      | . instr_loop
   82      | . return
   83 instr_assigment: . decl_id ASSIGN_OP expr ';'
   84 instr_control: . KW_IF expr KW_THEN stmt KW_ELSE stmt KW_FI ';'
   85              | . KW_IF expr KW_THEN stmt KW_FI ';'
   87 instr_loop: . KW_WHILE expr KW_LOOP stmt KW_POOL ';'
   88 return: . KW_RETURN expr ';'
   89       | . KW_RETURN ';'
   90 instr_func_call: . func_call ';'

    KW_IF       shift, and go to state 158
    KW_WHILE    shift, and go to state 159
    KW_CONST    shift, and go to state 160
    KW_LET      shift, and go to state 2
    KW_RETURN   shift, and go to state 161
    IDENTIFIER  shift, and go to state 43

    decl_id          go to state 162
    table_id         go to state 11
    decl             go to state 163
    body             go to state 164
    body_decl_list   go to state 165
    instr_list       go to state 166
    func_call        go to state 167
    instr            go to state 168
    instr_assigment  go to state 169
    instr_control    go to state 170
    instr_loop       go to state 171
    return           go to state 172
    instr_func_call  go to state 173


State 154

   37 func: KW_CONST decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP . '{' body '}' ';'

    '{'  shift, and go to state 174


State 155

    3 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP . '{' body '}'

    '{'  shift, and go to state 175


State 156

    1 program: decl_list func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT . ARROW_OP '{' body '}'

    ARROW_OP  shift, and go to state 176


State 157

    2 program: func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP . '{' body '}'

    '{'  shift, and go to state 177


State 158

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   50 expr: . term '+' expr
   51     | . term '-' expr
   52     | . term '*' expr
   53     | . term '/' expr
   54     | . term '%' expr
   55     | . term '=' expr
   56     | . term '<' expr
   57     | . term EQUAL_LESS_OP expr
   58     | . term DIFFERENT_OP expr
   59     | . term AND_OP expr
   60     | . term OR_OP expr
   61     | . term
   62 term: . POS_INT
   63     | . POS_REAL
   64     | . STRING
   65     | . bool
   66     | . decl_id
   67     | . func_call
   68     | . '(' expr ')'
   69     | . '-' term
   70     | . '+' term
   71     | . NOT_OP term
   72 bool: . KW_TRUE
   73     | . KW_FALSE
   74 func_call: . IDENTIFIER '(' func_stm ')'
   75          | . IDENTIFIER '(' ')'
   84 instr_control: KW_IF . expr KW_THEN stmt KW_ELSE stmt KW_FI ';'
   85              | KW_IF . expr KW_THEN stmt KW_FI ';'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    STRING      shift, and go to state 44
    '('         shift, and go to state 45
    '+'         shift, and go to state 47
    '-'         shift, and go to state 48

    decl_id    go to state 49
    table_id   go to state 11
    expr       go to state 178
    term       go to state 51
    bool       go to state 52
    func_call  go to state 53


State 159

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   50 expr: . term '+' expr
   51     | . term '-' expr
   52     | . term '*' expr
   53     | . term '/' expr
   54     | . term '%' expr
   55     | . term '=' expr
   56     | . term '<' expr
   57     | . term EQUAL_LESS_OP expr
   58     | . term DIFFERENT_OP expr
   59     | . term AND_OP expr
   60     | . term OR_OP expr
   61     | . term
   62 term: . POS_INT
   63     | . POS_REAL
   64     | . STRING
   65     | . bool
   66     | . decl_id
   67     | . func_call
   68     | . '(' expr ')'
   69     | . '-' term
   70     | . '+' term
   71     | . NOT_OP term
   72 bool: . KW_TRUE
   73     | . KW_FALSE
   74 func_call: . IDENTIFIER '(' func_stm ')'
   75          | . IDENTIFIER '(' ')'
   87 instr_loop: KW_WHILE . expr KW_LOOP stmt KW_POOL ';'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    STRING      shift, and go to state 44
    '('         shift, and go to state 45
    '+'         shift, and go to state 47
    '-'         shift, and go to state 48

    decl_id    go to state 49
    table_id   go to state 11
    expr       go to state 179
    term       go to state 51
    bool       go to state 52
    func_call  go to state 53


State 160

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   22 decl: KW_CONST . const_decl_body
   30 const_decl_body: . const_decl_list ':' type_spec ';'
   31 const_decl_list: . const_decl_list ',' const_decl_init
   32                | . const_decl_init
   33 const_decl_init: . decl_id ASSIGN_OP expr
   34                | . decl_id ASSIGN_OP table_init

    IDENTIFIER  shift, and go to state 9

    decl_id          go to state 64
    table_id         go to state 11
    const_decl_body  go to state 12
    const_decl_list  go to state 13
    const_decl_init  go to state 14


State 161

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   50 expr: . term '+' expr
   51     | . term '-' expr
   52     | . term '*' expr
   53     | . term '/' expr
   54     | . term '%' expr
   55     | . term '=' expr
   56     | . term '<' expr
   57     | . term EQUAL_LESS_OP expr
   58     | . term DIFFERENT_OP expr
   59     | . term AND_OP expr
   60     | . term OR_OP expr
   61     | . term
   62 term: . POS_INT
   63     | . POS_REAL
   64     | . STRING
   65     | . bool
   66     | . decl_id
   67     | . func_call
   68     | . '(' expr ')'
   69     | . '-' term
   70     | . '+' term
   71     | . NOT_OP term
   72 bool: . KW_TRUE
   73     | . KW_FALSE
   74 func_call: . IDENTIFIER '(' func_stm ')'
   75          | . IDENTIFIER '(' ')'
   88 return: KW_RETURN . expr ';'
   89       | KW_RETURN . ';'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    STRING      shift, and go to state 44
    '('         shift, and go to state 45
    ';'         shift, and go to state 180
    '+'         shift, and go to state 47
    '-'         shift, and go to state 48

    decl_id    go to state 49
    table_id   go to state 11
    expr       go to state 181
    term       go to state 51
    bool       go to state 52
    func_call  go to state 53


State 162

   83 instr_assigment: decl_id . ASSIGN_OP expr ';'

    ASSIGN_OP  shift, and go to state 182


State 163

   47 body_decl_list: decl .

    $default  reduce using rule 47 (body_decl_list)


State 164

    4 program: KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body . '}'

    '}'  shift, and go to state 183


State 165

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   22 decl: . KW_CONST const_decl_body
   23     | . KW_LET let_decl_body
   45 body: body_decl_list . instr_list
   46 body_decl_list: body_decl_list . decl
   48 instr_list: . instr_list instr
   49           | . instr
   74 func_call: . IDENTIFIER '(' func_stm ')'
   75          | . IDENTIFIER '(' ')'
   78 instr: . instr_func_call
   79      | . instr_assigment
   80      | . instr_control
   81      | . instr_loop
   82      | . return
   83 instr_assigment: . decl_id ASSIGN_OP expr ';'
   84 instr_control: . KW_IF expr KW_THEN stmt KW_ELSE stmt KW_FI ';'
   85              | . KW_IF expr KW_THEN stmt KW_FI ';'
   87 instr_loop: . KW_WHILE expr KW_LOOP stmt KW_POOL ';'
   88 return: . KW_RETURN expr ';'
   89       | . KW_RETURN ';'
   90 instr_func_call: . func_call ';'

    KW_IF       shift, and go to state 158
    KW_WHILE    shift, and go to state 159
    KW_CONST    shift, and go to state 160
    KW_LET      shift, and go to state 2
    KW_RETURN   shift, and go to state 161
    IDENTIFIER  shift, and go to state 43

    decl_id          go to state 162
    table_id         go to state 11
    decl             go to state 184
    instr_list       go to state 185
    func_call        go to state 167
    instr            go to state 168
    instr_assigment  go to state 169
    instr_control    go to state 170
    instr_loop       go to state 171
    return           go to state 172
    instr_func_call  go to state 173


State 166

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   44 body: instr_list .  ['}']
   48 instr_list: instr_list . instr
   74 func_call: . IDENTIFIER '(' func_stm ')'
   75          | . IDENTIFIER '(' ')'
   78 instr: . instr_func_call
   79      | . instr_assigment
   80      | . instr_control
   81      | . instr_loop
   82      | . return
   83 instr_assigment: . decl_id ASSIGN_OP expr ';'
   84 instr_control: . KW_IF expr KW_THEN stmt KW_ELSE stmt KW_FI ';'
   85              | . KW_IF expr KW_THEN stmt KW_FI ';'
   87 instr_loop: . KW_WHILE expr KW_LOOP stmt KW_POOL ';'
   88 return: . KW_RETURN expr ';'
   89       | . KW_RETURN ';'
   90 instr_func_call: . func_call ';'

    KW_IF       shift, and go to state 158
    KW_WHILE    shift, and go to state 159
    KW_RETURN   shift, and go to state 161
    IDENTIFIER  shift, and go to state 43

    $default  reduce using rule 44 (body)

    decl_id          go to state 162
    table_id         go to state 11
    func_call        go to state 167
    instr            go to state 186
    instr_assigment  go to state 169
    instr_control    go to state 170
    instr_loop       go to state 171
    return           go to state 172
    instr_func_call  go to state 173


State 167

   90 instr_func_call: func_call . ';'

    ';'  shift, and go to state 187


State 168

   49 instr_list: instr .

    $default  reduce using rule 49 (instr_list)


State 169

   79 instr: instr_assigment .

    $default  reduce using rule 79 (instr)


State 170

   80 instr: instr_control .

    $default  reduce using rule 80 (instr)


State 171

   81 instr: instr_loop .

    $default  reduce using rule 81 (instr)


State 172

   82 instr: return .

    $default  reduce using rule 82 (instr)


State 173

   78 instr: instr_func_call .

    $default  reduce using rule 78 (instr)


State 174

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   22 decl: . KW_CONST const_decl_body
   23     | . KW_LET let_decl_body
   37 func: KW_CONST decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' . body '}' ';'
   44 body: . instr_list
   45     | . body_decl_list instr_list
   46 body_decl_list: . body_decl_list decl
   47               | . decl
   48 instr_list: . instr_list instr
   49           | . instr
   74 func_call: . IDENTIFIER '(' func_stm ')'
   75          | . IDENTIFIER '(' ')'
   78 instr: . instr_func_call
   79      | . instr_assigment
   80      | . instr_control
   81      | . instr_loop
   82      | . return
   83 instr_assigment: . decl_id ASSIGN_OP expr ';'
   84 instr_control: . KW_IF expr KW_THEN stmt KW_ELSE stmt KW_FI ';'
   85              | . KW_IF expr KW_THEN stmt KW_FI ';'
   87 instr_loop: . KW_WHILE expr KW_LOOP stmt KW_POOL ';'
   88 return: . KW_RETURN expr ';'
   89       | . KW_RETURN ';'
   90 instr_func_call: . func_call ';'

    KW_IF       shift, and go to state 158
    KW_WHILE    shift, and go to state 159
    KW_CONST    shift, and go to state 160
    KW_LET      shift, and go to state 2
    KW_RETURN   shift, and go to state 161
    IDENTIFIER  shift, and go to state 43

    decl_id          go to state 162
    table_id         go to state 11
    decl             go to state 163
    body             go to state 188
    body_decl_list   go to state 165
    instr_list       go to state 166
    func_call        go to state 167
    instr            go to state 168
    instr_assigment  go to state 169
    instr_control    go to state 170
    instr_loop       go to state 171
    return           go to state 172
    instr_func_call  go to state 173


State 175

    3 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' . body '}'
   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   22 decl: . KW_CONST const_decl_body
   23     | . KW_LET let_decl_body
   44 body: . instr_list
   45     | . body_decl_list instr_list
   46 body_decl_list: . body_decl_list decl
   47               | . decl
   48 instr_list: . instr_list instr
   49           | . instr
   74 func_call: . IDENTIFIER '(' func_stm ')'
   75          | . IDENTIFIER '(' ')'
   78 instr: . instr_func_call
   79      | . instr_assigment
   80      | . instr_control
   81      | . instr_loop
   82      | . return
   83 instr_assigment: . decl_id ASSIGN_OP expr ';'
   84 instr_control: . KW_IF expr KW_THEN stmt KW_ELSE stmt KW_FI ';'
   85              | . KW_IF expr KW_THEN stmt KW_FI ';'
   87 instr_loop: . KW_WHILE expr KW_LOOP stmt KW_POOL ';'
   88 return: . KW_RETURN expr ';'
   89       | . KW_RETURN ';'
   90 instr_func_call: . func_call ';'

    KW_IF       shift, and go to state 158
    KW_WHILE    shift, and go to state 159
    KW_CONST    shift, and go to state 160
    KW_LET      shift, and go to state 2
    KW_RETURN   shift, and go to state 161
    IDENTIFIER  shift, and go to state 43

    decl_id          go to state 162
    table_id         go to state 11
    decl             go to state 163
    body             go to state 189
    body_decl_list   go to state 165
    instr_list       go to state 166
    func_call        go to state 167
    instr            go to state 168
    instr_assigment  go to state 169
    instr_control    go to state 170
    instr_loop       go to state 171
    return           go to state 172
    instr_func_call  go to state 173


State 176

    1 program: decl_list func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP . '{' body '}'

    '{'  shift, and go to state 190


State 177

    2 program: func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' . body '}'
   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   22 decl: . KW_CONST const_decl_body
   23     | . KW_LET let_decl_body
   44 body: . instr_list
   45     | . body_decl_list instr_list
   46 body_decl_list: . body_decl_list decl
   47               | . decl
   48 instr_list: . instr_list instr
   49           | . instr
   74 func_call: . IDENTIFIER '(' func_stm ')'
   75          | . IDENTIFIER '(' ')'
   78 instr: . instr_func_call
   79      | . instr_assigment
   80      | . instr_control
   81      | . instr_loop
   82      | . return
   83 instr_assigment: . decl_id ASSIGN_OP expr ';'
   84 instr_control: . KW_IF expr KW_THEN stmt KW_ELSE stmt KW_FI ';'
   85              | . KW_IF expr KW_THEN stmt KW_FI ';'
   87 instr_loop: . KW_WHILE expr KW_LOOP stmt KW_POOL ';'
   88 return: . KW_RETURN expr ';'
   89       | . KW_RETURN ';'
   90 instr_func_call: . func_call ';'

    KW_IF       shift, and go to state 158
    KW_WHILE    shift, and go to state 159
    KW_CONST    shift, and go to state 160
    KW_LET      shift, and go to state 2
    KW_RETURN   shift, and go to state 161
    IDENTIFIER  shift, and go to state 43

    decl_id          go to state 162
    table_id         go to state 11
    decl             go to state 163
    body             go to state 191
    body_decl_list   go to state 165
    instr_list       go to state 166
    func_call        go to state 167
    instr            go to state 168
    instr_assigment  go to state 169
    instr_control    go to state 170
    instr_loop       go to state 171
    return           go to state 172
    instr_func_call  go to state 173


State 178

   84 instr_control: KW_IF expr . KW_THEN stmt KW_ELSE stmt KW_FI ';'
   85              | KW_IF expr . KW_THEN stmt KW_FI ';'

    KW_THEN  shift, and go to state 192


State 179

   87 instr_loop: KW_WHILE expr . KW_LOOP stmt KW_POOL ';'

    KW_LOOP  shift, and go to state 193


State 180

   89 return: KW_RETURN ';' .

    $default  reduce using rule 89 (return)


State 181

   88 return: KW_RETURN expr . ';'

    ';'  shift, and go to state 194


State 182

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   50 expr: . term '+' expr
   51     | . term '-' expr
   52     | . term '*' expr
   53     | . term '/' expr
   54     | . term '%' expr
   55     | . term '=' expr
   56     | . term '<' expr
   57     | . term EQUAL_LESS_OP expr
   58     | . term DIFFERENT_OP expr
   59     | . term AND_OP expr
   60     | . term OR_OP expr
   61     | . term
   62 term: . POS_INT
   63     | . POS_REAL
   64     | . STRING
   65     | . bool
   66     | . decl_id
   67     | . func_call
   68     | . '(' expr ')'
   69     | . '-' term
   70     | . '+' term
   71     | . NOT_OP term
   72 bool: . KW_TRUE
   73     | . KW_FALSE
   74 func_call: . IDENTIFIER '(' func_stm ')'
   75          | . IDENTIFIER '(' ')'
   83 instr_assigment: decl_id ASSIGN_OP . expr ';'

    NOT_OP      shift, and go to state 38
    POS_INT     shift, and go to state 39
    POS_REAL    shift, and go to state 40
    KW_TRUE     shift, and go to state 41
    KW_FALSE    shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    STRING      shift, and go to state 44
    '('         shift, and go to state 45
    '+'         shift, and go to state 47
    '-'         shift, and go to state 48

    decl_id    go to state 49
    table_id   go to state 11
    expr       go to state 195
    term       go to state 51
    bool       go to state 52
    func_call  go to state 53


State 183

    4 program: KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}' .

    $default  reduce using rule 4 (program)


State 184

   46 body_decl_list: body_decl_list decl .

    $default  reduce using rule 46 (body_decl_list)


State 185

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   45 body: body_decl_list instr_list .  ['}']
   48 instr_list: instr_list . instr
   74 func_call: . IDENTIFIER '(' func_stm ')'
   75          | . IDENTIFIER '(' ')'
   78 instr: . instr_func_call
   79      | . instr_assigment
   80      | . instr_control
   81      | . instr_loop
   82      | . return
   83 instr_assigment: . decl_id ASSIGN_OP expr ';'
   84 instr_control: . KW_IF expr KW_THEN stmt KW_ELSE stmt KW_FI ';'
   85              | . KW_IF expr KW_THEN stmt KW_FI ';'
   87 instr_loop: . KW_WHILE expr KW_LOOP stmt KW_POOL ';'
   88 return: . KW_RETURN expr ';'
   89       | . KW_RETURN ';'
   90 instr_func_call: . func_call ';'

    KW_IF       shift, and go to state 158
    KW_WHILE    shift, and go to state 159
    KW_RETURN   shift, and go to state 161
    IDENTIFIER  shift, and go to state 43

    $default  reduce using rule 45 (body)

    decl_id          go to state 162
    table_id         go to state 11
    func_call        go to state 167
    instr            go to state 186
    instr_assigment  go to state 169
    instr_control    go to state 170
    instr_loop       go to state 171
    return           go to state 172
    instr_func_call  go to state 173


State 186

   48 instr_list: instr_list instr .

    $default  reduce using rule 48 (instr_list)


State 187

   90 instr_func_call: func_call ';' .

    $default  reduce using rule 90 (instr_func_call)


State 188

   37 func: KW_CONST decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' body . '}' ';'

    '}'  shift, and go to state 196


State 189

    3 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body . '}'

    '}'  shift, and go to state 197


State 190

    1 program: decl_list func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' . body '}'
   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   22 decl: . KW_CONST const_decl_body
   23     | . KW_LET let_decl_body
   44 body: . instr_list
   45     | . body_decl_list instr_list
   46 body_decl_list: . body_decl_list decl
   47               | . decl
   48 instr_list: . instr_list instr
   49           | . instr
   74 func_call: . IDENTIFIER '(' func_stm ')'
   75          | . IDENTIFIER '(' ')'
   78 instr: . instr_func_call
   79      | . instr_assigment
   80      | . instr_control
   81      | . instr_loop
   82      | . return
   83 instr_assigment: . decl_id ASSIGN_OP expr ';'
   84 instr_control: . KW_IF expr KW_THEN stmt KW_ELSE stmt KW_FI ';'
   85              | . KW_IF expr KW_THEN stmt KW_FI ';'
   87 instr_loop: . KW_WHILE expr KW_LOOP stmt KW_POOL ';'
   88 return: . KW_RETURN expr ';'
   89       | . KW_RETURN ';'
   90 instr_func_call: . func_call ';'

    KW_IF       shift, and go to state 158
    KW_WHILE    shift, and go to state 159
    KW_CONST    shift, and go to state 160
    KW_LET      shift, and go to state 2
    KW_RETURN   shift, and go to state 161
    IDENTIFIER  shift, and go to state 43

    decl_id          go to state 162
    table_id         go to state 11
    decl             go to state 163
    body             go to state 198
    body_decl_list   go to state 165
    instr_list       go to state 166
    func_call        go to state 167
    instr            go to state 168
    instr_assigment  go to state 169
    instr_control    go to state 170
    instr_loop       go to state 171
    return           go to state 172
    instr_func_call  go to state 173


State 191

    2 program: func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body . '}'

    '}'  shift, and go to state 199


State 192

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   48 instr_list: . instr_list instr
   49           | . instr
   74 func_call: . IDENTIFIER '(' func_stm ')'
   75          | . IDENTIFIER '(' ')'
   78 instr: . instr_func_call
   79      | . instr_assigment
   80      | . instr_control
   81      | . instr_loop
   82      | . return
   83 instr_assigment: . decl_id ASSIGN_OP expr ';'
   84 instr_control: . KW_IF expr KW_THEN stmt KW_ELSE stmt KW_FI ';'
   84              | KW_IF expr KW_THEN . stmt KW_ELSE stmt KW_FI ';'
   85              | . KW_IF expr KW_THEN stmt KW_FI ';'
   85              | KW_IF expr KW_THEN . stmt KW_FI ';'
   86 stmt: . instr_list
   87 instr_loop: . KW_WHILE expr KW_LOOP stmt KW_POOL ';'
   88 return: . KW_RETURN expr ';'
   89       | . KW_RETURN ';'
   90 instr_func_call: . func_call ';'

    KW_IF       shift, and go to state 158
    KW_WHILE    shift, and go to state 159
    KW_RETURN   shift, and go to state 161
    IDENTIFIER  shift, and go to state 43

    decl_id          go to state 162
    table_id         go to state 11
    instr_list       go to state 200
    func_call        go to state 167
    instr            go to state 168
    instr_assigment  go to state 169
    instr_control    go to state 170
    stmt             go to state 201
    instr_loop       go to state 171
    return           go to state 172
    instr_func_call  go to state 173


State 193

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   48 instr_list: . instr_list instr
   49           | . instr
   74 func_call: . IDENTIFIER '(' func_stm ')'
   75          | . IDENTIFIER '(' ')'
   78 instr: . instr_func_call
   79      | . instr_assigment
   80      | . instr_control
   81      | . instr_loop
   82      | . return
   83 instr_assigment: . decl_id ASSIGN_OP expr ';'
   84 instr_control: . KW_IF expr KW_THEN stmt KW_ELSE stmt KW_FI ';'
   85              | . KW_IF expr KW_THEN stmt KW_FI ';'
   86 stmt: . instr_list
   87 instr_loop: . KW_WHILE expr KW_LOOP stmt KW_POOL ';'
   87           | KW_WHILE expr KW_LOOP . stmt KW_POOL ';'
   88 return: . KW_RETURN expr ';'
   89       | . KW_RETURN ';'
   90 instr_func_call: . func_call ';'

    KW_IF       shift, and go to state 158
    KW_WHILE    shift, and go to state 159
    KW_RETURN   shift, and go to state 161
    IDENTIFIER  shift, and go to state 43

    decl_id          go to state 162
    table_id         go to state 11
    instr_list       go to state 200
    func_call        go to state 167
    instr            go to state 168
    instr_assigment  go to state 169
    instr_control    go to state 170
    stmt             go to state 202
    instr_loop       go to state 171
    return           go to state 172
    instr_func_call  go to state 173


State 194

   88 return: KW_RETURN expr ';' .

    $default  reduce using rule 88 (return)


State 195

   83 instr_assigment: decl_id ASSIGN_OP expr . ';'

    ';'  shift, and go to state 203


State 196

   37 func: KW_CONST decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}' . ';'

    ';'  shift, and go to state 204


State 197

    3 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}' .

    $default  reduce using rule 3 (program)


State 198

    1 program: decl_list func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body . '}'

    '}'  shift, and go to state 205


State 199

    2 program: func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}' .

    $default  reduce using rule 2 (program)


State 200

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   48 instr_list: instr_list . instr
   74 func_call: . IDENTIFIER '(' func_stm ')'
   75          | . IDENTIFIER '(' ')'
   78 instr: . instr_func_call
   79      | . instr_assigment
   80      | . instr_control
   81      | . instr_loop
   82      | . return
   83 instr_assigment: . decl_id ASSIGN_OP expr ';'
   84 instr_control: . KW_IF expr KW_THEN stmt KW_ELSE stmt KW_FI ';'
   85              | . KW_IF expr KW_THEN stmt KW_FI ';'
   86 stmt: instr_list .  [KW_ELSE, KW_FI, KW_POOL]
   87 instr_loop: . KW_WHILE expr KW_LOOP stmt KW_POOL ';'
   88 return: . KW_RETURN expr ';'
   89       | . KW_RETURN ';'
   90 instr_func_call: . func_call ';'

    KW_IF       shift, and go to state 158
    KW_WHILE    shift, and go to state 159
    KW_RETURN   shift, and go to state 161
    IDENTIFIER  shift, and go to state 43

    $default  reduce using rule 86 (stmt)

    decl_id          go to state 162
    table_id         go to state 11
    func_call        go to state 167
    instr            go to state 186
    instr_assigment  go to state 169
    instr_control    go to state 170
    instr_loop       go to state 171
    return           go to state 172
    instr_func_call  go to state 173


State 201

   84 instr_control: KW_IF expr KW_THEN stmt . KW_ELSE stmt KW_FI ';'
   85              | KW_IF expr KW_THEN stmt . KW_FI ';'

    KW_ELSE  shift, and go to state 206
    KW_FI    shift, and go to state 207


State 202

   87 instr_loop: KW_WHILE expr KW_LOOP stmt . KW_POOL ';'

    KW_POOL  shift, and go to state 208


State 203

   83 instr_assigment: decl_id ASSIGN_OP expr ';' .

    $default  reduce using rule 83 (instr_assigment)


State 204

   37 func: KW_CONST decl_id ASSIGN_OP '(' func_param_list ')' ':' type_spec ARROW_OP '{' body '}' ';' .

    $default  reduce using rule 37 (func)


State 205

    1 program: decl_list func_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}' .

    $default  reduce using rule 1 (program)


State 206

   13 decl_id: . IDENTIFIER
   14        | . IDENTIFIER '[' ']'
   15        | . table_id
   16 table_id: . IDENTIFIER '[' expr ']'
   48 instr_list: . instr_list instr
   49           | . instr
   74 func_call: . IDENTIFIER '(' func_stm ')'
   75          | . IDENTIFIER '(' ')'
   78 instr: . instr_func_call
   79      | . instr_assigment
   80      | . instr_control
   81      | . instr_loop
   82      | . return
   83 instr_assigment: . decl_id ASSIGN_OP expr ';'
   84 instr_control: . KW_IF expr KW_THEN stmt KW_ELSE stmt KW_FI ';'
   84              | KW_IF expr KW_THEN stmt KW_ELSE . stmt KW_FI ';'
   85              | . KW_IF expr KW_THEN stmt KW_FI ';'
   86 stmt: . instr_list
   87 instr_loop: . KW_WHILE expr KW_LOOP stmt KW_POOL ';'
   88 return: . KW_RETURN expr ';'
   89       | . KW_RETURN ';'
   90 instr_func_call: . func_call ';'

    KW_IF       shift, and go to state 158
    KW_WHILE    shift, and go to state 159
    KW_RETURN   shift, and go to state 161
    IDENTIFIER  shift, and go to state 43

    decl_id          go to state 162
    table_id         go to state 11
    instr_list       go to state 200
    func_call        go to state 167
    instr            go to state 168
    instr_assigment  go to state 169
    instr_control    go to state 170
    stmt             go to state 209
    instr_loop       go to state 171
    return           go to state 172
    instr_func_call  go to state 173


State 207

   85 instr_control: KW_IF expr KW_THEN stmt KW_FI . ';'

    ';'  shift, and go to state 210


State 208

   87 instr_loop: KW_WHILE expr KW_LOOP stmt KW_POOL . ';'

    ';'  shift, and go to state 211


State 209

   84 instr_control: KW_IF expr KW_THEN stmt KW_ELSE stmt . KW_FI ';'

    KW_FI  shift, and go to state 212


State 210

   85 instr_control: KW_IF expr KW_THEN stmt KW_FI ';' .

    $default  reduce using rule 85 (instr_control)


State 211

   87 instr_loop: KW_WHILE expr KW_LOOP stmt KW_POOL ';' .

    $default  reduce using rule 87 (instr_loop)


State 212

   84 instr_control: KW_IF expr KW_THEN stmt KW_ELSE stmt KW_FI . ';'

    ';'  shift, and go to state 213


State 213

   84 instr_control: KW_IF expr KW_THEN stmt KW_ELSE stmt KW_FI ';' .

    $default  reduce using rule 84 (instr_control)
