Terminals unused in grammar

   KW_IF
   KW_THEN
   KW_ELSE
   KW_FI
   KW_WHILE
   KW_LOOP
   KW_POOL
   KW_LET
   KW_BREAK
   KW_RETURN
   DIFFERENT_OP
   EQUAL_LESS_OP
   AND_OP
   OR_OP
   NOT_OP
   KW_TRUE
   KW_FALSE
   ADD_POS_OP
   SUBTRACT_NEG_OP
   MULTIPLY_OP
   DIVIDE_OP
   MOD_OP


State 41 conflicts: 5 shift/reduce
State 42 conflicts: 5 shift/reduce
State 43 conflicts: 5 shift/reduce
State 44 conflicts: 5 shift/reduce
State 45 conflicts: 5 shift/reduce


Grammar

    0 $accept: program $end

    1 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'

    2 decl_list: decl_list decl
    3          | decl

    4 decl: KW_CONST const_decl_body

    5 const_decl_body: const_decl_list ':' type_spec ';'

    6 const_decl_list: const_decl_list ',' const_decl_init
    7                | const_decl_init

    8 const_decl_init: const_decl_id
    9                | const_decl_id ASSIGN_OP expr
   10                | const_decl_id ASSIGN_OP string

   11 const_decl_id: IDENTIFIER
   12              | IDENTIFIER '[' ']'

   13 type_spec: KW_INT
   14          | KW_REAL
   15          | KW_BOOL
   16          | KW_STRING

   17 string: STRING

   18 expr: POS_INT
   19     | POS_REAL
   20     | '(' expr ')'
   21     | expr '+' expr
   22     | expr '-' expr
   23     | expr '*' expr
   24     | expr '/' expr
   25     | expr '%' expr

   26 function: IDENTIFIER '(' const_decl_id ')'
   27         | IDENTIFIER '(' expr ')'
   28         | IDENTIFIER '(' ')'

   29 body: function ';'
   30     | %empty


Terminals, with rules where they appear

$end (0) 0
'%' (37) 25
'(' (40) 1 20 26 27 28
')' (41) 1 20 26 27 28
'*' (42) 23
'+' (43) 21
',' (44) 6
'-' (45) 22
'/' (47) 24
':' (58) 1 5
';' (59) 5 29
'[' (91) 12
']' (93) 12
'{' (123) 1
'}' (125) 1
error (256)
KW_INT (258) 1 13
KW_REAL (259) 14
KW_BOOL (260) 15
KW_STRING (261) 16
KW_IF (262)
KW_THEN (263)
KW_ELSE (264)
KW_FI (265)
KW_WHILE (266)
KW_LOOP (267)
KW_POOL (268)
KW_CONST (269) 1 4
KW_LET (270)
KW_BREAK (271)
KW_RETURN (272)
KW_START (273) 1
DIFFERENT_OP (274)
EQUAL_LESS_OP (275)
AND_OP (276)
OR_OP (277)
NOT_OP (278)
ASSIGN_OP (279) 1 9 10
ARROW_OP (280) 1
POS_INT (281) 18
POS_REAL (282) 19
KW_TRUE (283)
KW_FALSE (284)
IDENTIFIER (285) 11 12 26 27 28
STRING (286) 17
ADD_POS_OP (287)
SUBTRACT_NEG_OP (288)
MULTIPLY_OP (289)
DIVIDE_OP (290)
MOD_OP (291)


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 1, on right: 0
decl_list (53)
    on left: 2 3, on right: 1 2
decl (54)
    on left: 4, on right: 2 3
const_decl_body (55)
    on left: 5, on right: 4
const_decl_list (56)
    on left: 6 7, on right: 5 6
const_decl_init (57)
    on left: 8 9 10, on right: 6 7
const_decl_id (58)
    on left: 11 12, on right: 8 9 10 26
type_spec (59)
    on left: 13 14 15 16, on right: 5
string (60)
    on left: 17, on right: 10
expr (61)
    on left: 18 19 20 21 22 23 24 25, on right: 9 20 21 22 23 24 25
    27
function (62)
    on left: 26 27 28, on right: 29
body (63)
    on left: 29 30, on right: 1


State 0

    0 $accept: . program $end
    1 program: . decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
    2 decl_list: . decl_list decl
    3          | . decl
    4 decl: . KW_CONST const_decl_body

    KW_CONST  shift, and go to state 1

    program    go to state 2
    decl_list  go to state 3
    decl       go to state 4


State 1

    4 decl: KW_CONST . const_decl_body
    5 const_decl_body: . const_decl_list ':' type_spec ';'
    6 const_decl_list: . const_decl_list ',' const_decl_init
    7                | . const_decl_init
    8 const_decl_init: . const_decl_id
    9                | . const_decl_id ASSIGN_OP expr
   10                | . const_decl_id ASSIGN_OP string
   11 const_decl_id: . IDENTIFIER
   12              | . IDENTIFIER '[' ']'

    IDENTIFIER  shift, and go to state 5

    const_decl_body  go to state 6
    const_decl_list  go to state 7
    const_decl_init  go to state 8
    const_decl_id    go to state 9


State 2

    0 $accept: program . $end

    $end  shift, and go to state 10


State 3

    1 program: decl_list . KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
    2 decl_list: decl_list . decl
    4 decl: . KW_CONST const_decl_body

    KW_CONST  shift, and go to state 11

    decl  go to state 12


State 4

    3 decl_list: decl .

    $default  reduce using rule 3 (decl_list)


State 5

   11 const_decl_id: IDENTIFIER .  [ASSIGN_OP, ')', ':', ',']
   12              | IDENTIFIER . '[' ']'

    '['  shift, and go to state 13

    $default  reduce using rule 11 (const_decl_id)


State 6

    4 decl: KW_CONST const_decl_body .

    $default  reduce using rule 4 (decl)


State 7

    5 const_decl_body: const_decl_list . ':' type_spec ';'
    6 const_decl_list: const_decl_list . ',' const_decl_init

    ':'  shift, and go to state 14
    ','  shift, and go to state 15


State 8

    7 const_decl_list: const_decl_init .

    $default  reduce using rule 7 (const_decl_list)


State 9

    8 const_decl_init: const_decl_id .  [':', ',']
    9                | const_decl_id . ASSIGN_OP expr
   10                | const_decl_id . ASSIGN_OP string

    ASSIGN_OP  shift, and go to state 16

    $default  reduce using rule 8 (const_decl_init)


State 10

    0 $accept: program $end .

    $default  accept


State 11

    1 program: decl_list KW_CONST . KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'
    4 decl: KW_CONST . const_decl_body
    5 const_decl_body: . const_decl_list ':' type_spec ';'
    6 const_decl_list: . const_decl_list ',' const_decl_init
    7                | . const_decl_init
    8 const_decl_init: . const_decl_id
    9                | . const_decl_id ASSIGN_OP expr
   10                | . const_decl_id ASSIGN_OP string
   11 const_decl_id: . IDENTIFIER
   12              | . IDENTIFIER '[' ']'

    KW_START    shift, and go to state 17
    IDENTIFIER  shift, and go to state 5

    const_decl_body  go to state 6
    const_decl_list  go to state 7
    const_decl_init  go to state 8
    const_decl_id    go to state 9


State 12

    2 decl_list: decl_list decl .

    $default  reduce using rule 2 (decl_list)


State 13

   12 const_decl_id: IDENTIFIER '[' . ']'

    ']'  shift, and go to state 18


State 14

    5 const_decl_body: const_decl_list ':' . type_spec ';'
   13 type_spec: . KW_INT
   14          | . KW_REAL
   15          | . KW_BOOL
   16          | . KW_STRING

    KW_INT     shift, and go to state 19
    KW_REAL    shift, and go to state 20
    KW_BOOL    shift, and go to state 21
    KW_STRING  shift, and go to state 22

    type_spec  go to state 23


State 15

    6 const_decl_list: const_decl_list ',' . const_decl_init
    8 const_decl_init: . const_decl_id
    9                | . const_decl_id ASSIGN_OP expr
   10                | . const_decl_id ASSIGN_OP string
   11 const_decl_id: . IDENTIFIER
   12              | . IDENTIFIER '[' ']'

    IDENTIFIER  shift, and go to state 5

    const_decl_init  go to state 24
    const_decl_id    go to state 9


State 16

    9 const_decl_init: const_decl_id ASSIGN_OP . expr
   10                | const_decl_id ASSIGN_OP . string
   17 string: . STRING
   18 expr: . POS_INT
   19     | . POS_REAL
   20     | . '(' expr ')'
   21     | . expr '+' expr
   22     | . expr '-' expr
   23     | . expr '*' expr
   24     | . expr '/' expr
   25     | . expr '%' expr

    POS_INT   shift, and go to state 25
    POS_REAL  shift, and go to state 26
    STRING    shift, and go to state 27
    '('       shift, and go to state 28

    string  go to state 29
    expr    go to state 30


State 17

    1 program: decl_list KW_CONST KW_START . ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}'

    ASSIGN_OP  shift, and go to state 31


State 18

   12 const_decl_id: IDENTIFIER '[' ']' .

    $default  reduce using rule 12 (const_decl_id)


State 19

   13 type_spec: KW_INT .

    $default  reduce using rule 13 (type_spec)


State 20

   14 type_spec: KW_REAL .

    $default  reduce using rule 14 (type_spec)


State 21

   15 type_spec: KW_BOOL .

    $default  reduce using rule 15 (type_spec)


State 22

   16 type_spec: KW_STRING .

    $default  reduce using rule 16 (type_spec)


State 23

    5 const_decl_body: const_decl_list ':' type_spec . ';'

    ';'  shift, and go to state 32


State 24

    6 const_decl_list: const_decl_list ',' const_decl_init .

    $default  reduce using rule 6 (const_decl_list)


State 25

   18 expr: POS_INT .

    $default  reduce using rule 18 (expr)


State 26

   19 expr: POS_REAL .

    $default  reduce using rule 19 (expr)


State 27

   17 string: STRING .

    $default  reduce using rule 17 (string)


State 28

   18 expr: . POS_INT
   19     | . POS_REAL
   20     | . '(' expr ')'
   20     | '(' . expr ')'
   21     | . expr '+' expr
   22     | . expr '-' expr
   23     | . expr '*' expr
   24     | . expr '/' expr
   25     | . expr '%' expr

    POS_INT   shift, and go to state 25
    POS_REAL  shift, and go to state 26
    '('       shift, and go to state 28

    expr  go to state 33


State 29

   10 const_decl_init: const_decl_id ASSIGN_OP string .

    $default  reduce using rule 10 (const_decl_init)


State 30

    9 const_decl_init: const_decl_id ASSIGN_OP expr .  [':', ',']
   21 expr: expr . '+' expr
   22     | expr . '-' expr
   23     | expr . '*' expr
   24     | expr . '/' expr
   25     | expr . '%' expr

    '+'  shift, and go to state 34
    '-'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37
    '%'  shift, and go to state 38

    $default  reduce using rule 9 (const_decl_init)


State 31

    1 program: decl_list KW_CONST KW_START ASSIGN_OP . '(' ')' ':' KW_INT ARROW_OP '{' body '}'

    '('  shift, and go to state 39


State 32

    5 const_decl_body: const_decl_list ':' type_spec ';' .

    $default  reduce using rule 5 (const_decl_body)


State 33

   20 expr: '(' expr . ')'
   21     | expr . '+' expr
   22     | expr . '-' expr
   23     | expr . '*' expr
   24     | expr . '/' expr
   25     | expr . '%' expr

    ')'  shift, and go to state 40
    '+'  shift, and go to state 34
    '-'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37
    '%'  shift, and go to state 38


State 34

   18 expr: . POS_INT
   19     | . POS_REAL
   20     | . '(' expr ')'
   21     | . expr '+' expr
   21     | expr '+' . expr
   22     | . expr '-' expr
   23     | . expr '*' expr
   24     | . expr '/' expr
   25     | . expr '%' expr

    POS_INT   shift, and go to state 25
    POS_REAL  shift, and go to state 26
    '('       shift, and go to state 28

    expr  go to state 41


State 35

   18 expr: . POS_INT
   19     | . POS_REAL
   20     | . '(' expr ')'
   21     | . expr '+' expr
   22     | . expr '-' expr
   22     | expr '-' . expr
   23     | . expr '*' expr
   24     | . expr '/' expr
   25     | . expr '%' expr

    POS_INT   shift, and go to state 25
    POS_REAL  shift, and go to state 26
    '('       shift, and go to state 28

    expr  go to state 42


State 36

   18 expr: . POS_INT
   19     | . POS_REAL
   20     | . '(' expr ')'
   21     | . expr '+' expr
   22     | . expr '-' expr
   23     | . expr '*' expr
   23     | expr '*' . expr
   24     | . expr '/' expr
   25     | . expr '%' expr

    POS_INT   shift, and go to state 25
    POS_REAL  shift, and go to state 26
    '('       shift, and go to state 28

    expr  go to state 43


State 37

   18 expr: . POS_INT
   19     | . POS_REAL
   20     | . '(' expr ')'
   21     | . expr '+' expr
   22     | . expr '-' expr
   23     | . expr '*' expr
   24     | . expr '/' expr
   24     | expr '/' . expr
   25     | . expr '%' expr

    POS_INT   shift, and go to state 25
    POS_REAL  shift, and go to state 26
    '('       shift, and go to state 28

    expr  go to state 44


State 38

   18 expr: . POS_INT
   19     | . POS_REAL
   20     | . '(' expr ')'
   21     | . expr '+' expr
   22     | . expr '-' expr
   23     | . expr '*' expr
   24     | . expr '/' expr
   25     | . expr '%' expr
   25     | expr '%' . expr

    POS_INT   shift, and go to state 25
    POS_REAL  shift, and go to state 26
    '('       shift, and go to state 28

    expr  go to state 45


State 39

    1 program: decl_list KW_CONST KW_START ASSIGN_OP '(' . ')' ':' KW_INT ARROW_OP '{' body '}'

    ')'  shift, and go to state 46


State 40

   20 expr: '(' expr ')' .

    $default  reduce using rule 20 (expr)


State 41

   21 expr: expr . '+' expr
   21     | expr '+' expr .  [')', ':', ',', '+', '-', '*', '/', '%']
   22     | expr . '-' expr
   23     | expr . '*' expr
   24     | expr . '/' expr
   25     | expr . '%' expr

    '+'  shift, and go to state 34
    '-'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37
    '%'  shift, and go to state 38

    '+'       [reduce using rule 21 (expr)]
    '-'       [reduce using rule 21 (expr)]
    '*'       [reduce using rule 21 (expr)]
    '/'       [reduce using rule 21 (expr)]
    '%'       [reduce using rule 21 (expr)]
    $default  reduce using rule 21 (expr)


State 42

   21 expr: expr . '+' expr
   22     | expr . '-' expr
   22     | expr '-' expr .  [')', ':', ',', '+', '-', '*', '/', '%']
   23     | expr . '*' expr
   24     | expr . '/' expr
   25     | expr . '%' expr

    '+'  shift, and go to state 34
    '-'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37
    '%'  shift, and go to state 38

    '+'       [reduce using rule 22 (expr)]
    '-'       [reduce using rule 22 (expr)]
    '*'       [reduce using rule 22 (expr)]
    '/'       [reduce using rule 22 (expr)]
    '%'       [reduce using rule 22 (expr)]
    $default  reduce using rule 22 (expr)


State 43

   21 expr: expr . '+' expr
   22     | expr . '-' expr
   23     | expr . '*' expr
   23     | expr '*' expr .  [')', ':', ',', '+', '-', '*', '/', '%']
   24     | expr . '/' expr
   25     | expr . '%' expr

    '+'  shift, and go to state 34
    '-'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37
    '%'  shift, and go to state 38

    '+'       [reduce using rule 23 (expr)]
    '-'       [reduce using rule 23 (expr)]
    '*'       [reduce using rule 23 (expr)]
    '/'       [reduce using rule 23 (expr)]
    '%'       [reduce using rule 23 (expr)]
    $default  reduce using rule 23 (expr)


State 44

   21 expr: expr . '+' expr
   22     | expr . '-' expr
   23     | expr . '*' expr
   24     | expr . '/' expr
   24     | expr '/' expr .  [')', ':', ',', '+', '-', '*', '/', '%']
   25     | expr . '%' expr

    '+'  shift, and go to state 34
    '-'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37
    '%'  shift, and go to state 38

    '+'       [reduce using rule 24 (expr)]
    '-'       [reduce using rule 24 (expr)]
    '*'       [reduce using rule 24 (expr)]
    '/'       [reduce using rule 24 (expr)]
    '%'       [reduce using rule 24 (expr)]
    $default  reduce using rule 24 (expr)


State 45

   21 expr: expr . '+' expr
   22     | expr . '-' expr
   23     | expr . '*' expr
   24     | expr . '/' expr
   25     | expr . '%' expr
   25     | expr '%' expr .  [')', ':', ',', '+', '-', '*', '/', '%']

    '+'  shift, and go to state 34
    '-'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37
    '%'  shift, and go to state 38

    '+'       [reduce using rule 25 (expr)]
    '-'       [reduce using rule 25 (expr)]
    '*'       [reduce using rule 25 (expr)]
    '/'       [reduce using rule 25 (expr)]
    '%'       [reduce using rule 25 (expr)]
    $default  reduce using rule 25 (expr)


State 46

    1 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' . ':' KW_INT ARROW_OP '{' body '}'

    ':'  shift, and go to state 47


State 47

    1 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' . KW_INT ARROW_OP '{' body '}'

    KW_INT  shift, and go to state 48


State 48

    1 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT . ARROW_OP '{' body '}'

    ARROW_OP  shift, and go to state 49


State 49

    1 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP . '{' body '}'

    '{'  shift, and go to state 50


State 50

    1 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' . body '}'
   26 function: . IDENTIFIER '(' const_decl_id ')'
   27         | . IDENTIFIER '(' expr ')'
   28         | . IDENTIFIER '(' ')'
   29 body: . function ';'
   30     | . %empty  ['}']

    IDENTIFIER  shift, and go to state 51

    $default  reduce using rule 30 (body)

    function  go to state 52
    body      go to state 53


State 51

   26 function: IDENTIFIER . '(' const_decl_id ')'
   27         | IDENTIFIER . '(' expr ')'
   28         | IDENTIFIER . '(' ')'

    '('  shift, and go to state 54


State 52

   29 body: function . ';'

    ';'  shift, and go to state 55


State 53

    1 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body . '}'

    '}'  shift, and go to state 56


State 54

   11 const_decl_id: . IDENTIFIER
   12              | . IDENTIFIER '[' ']'
   18 expr: . POS_INT
   19     | . POS_REAL
   20     | . '(' expr ')'
   21     | . expr '+' expr
   22     | . expr '-' expr
   23     | . expr '*' expr
   24     | . expr '/' expr
   25     | . expr '%' expr
   26 function: IDENTIFIER '(' . const_decl_id ')'
   27         | IDENTIFIER '(' . expr ')'
   28         | IDENTIFIER '(' . ')'

    POS_INT     shift, and go to state 25
    POS_REAL    shift, and go to state 26
    IDENTIFIER  shift, and go to state 5
    '('         shift, and go to state 28
    ')'         shift, and go to state 57

    const_decl_id  go to state 58
    expr           go to state 59


State 55

   29 body: function ';' .

    $default  reduce using rule 29 (body)


State 56

    1 program: decl_list KW_CONST KW_START ASSIGN_OP '(' ')' ':' KW_INT ARROW_OP '{' body '}' .

    $default  reduce using rule 1 (program)


State 57

   28 function: IDENTIFIER '(' ')' .

    $default  reduce using rule 28 (function)


State 58

   26 function: IDENTIFIER '(' const_decl_id . ')'

    ')'  shift, and go to state 60


State 59

   21 expr: expr . '+' expr
   22     | expr . '-' expr
   23     | expr . '*' expr
   24     | expr . '/' expr
   25     | expr . '%' expr
   27 function: IDENTIFIER '(' expr . ')'

    ')'  shift, and go to state 61
    '+'  shift, and go to state 34
    '-'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37
    '%'  shift, and go to state 38


State 60

   26 function: IDENTIFIER '(' const_decl_id ')' .

    $default  reduce using rule 26 (function)


State 61

   27 function: IDENTIFIER '(' expr ')' .

    $default  reduce using rule 27 (function)
