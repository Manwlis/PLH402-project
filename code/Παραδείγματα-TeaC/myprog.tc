-- "unit" test

-- dhlwseis dedomenwn -------------
-- const
const message[] <- "Hello world!\n":  string;		-- string
const c1 <- 1 : int;								-- int
const c2 <- 1.1 : real;								-- real
const c3 <- false, c4 <- true :bool;				-- bool / pollapla statement
-- const array
const ca1[2] <- {1 ,2}:int;							-- pinakas int
const ca3[10] <- "message": string;					-- pinakas string

-- let xwris init
let l0 : int;										-- int
let l1[80] :string;									-- array
let l2[] : bool;									-- pointer
let l2 : []bool;									-- pointer
-- let
let l2, l3 <- true and c3:bool;						-- pollapla statement / merika init


-- functions ----------------------
const f1 <- (x:real):real => {						-- dhlwsh sunarthshs
	let y <- f2() : int;							-- dhlwsh dedomenwn mesa se sunarthsh / klhsh sunarthshs xwris parametrous
	const c5 <- c1 * c2: real; 							-- expression

	return x; 
};

const f2 <- (): int =>{ return 5; };				-- dhlwsh sunarthshs xwris parametrous

const f3 <- (x:real, y : int):[]real => {			-- sunarthsh xwris return
	writeInt(x);									-- klish sunarthsewn teaclib.h
	writeReal(y);
};

const f4 <- (x:real): bool => {						-- pollapla return
	if x < 0 then									-- aplo if
		return true;
	fi;
	return false;
};

const f6 <- (r1, r2:real, s[]: string):real => {	-- pollapla statement se mia dhlwsh

	if r1 = r2 then									-- if me else
		writeString(s);								-- pollaples entoles mesa se if
		writeString("\n");
	else
		if r1 < r2 then								-- emfoleumena if
			writeString("r2\n");					-- expression se klhsh sunarthshs
		else
			writeString("r1\n");
		fi;
	fi;

	return (r1 - r2);								-- return me expression
};

const f7 <- (i1, i2, int3, iefcescv:int, s1[],s2: string):real => {


	let x <- -c1 : real;							-- αντίθετος της μεταβλητής a
	x <- l0 + c1 * (c1 / l0);						-- αριθμητική έκφραση
	x <- 4 + 50.0*c2 / 2.45;						-- αριθμητική έκφραση
	x <- (c1+1) % cube(l0+3);						-- αριθμητική έκφραση με κλήση συνάρτησης
	x <- (c1 <= c2) and (l0 <= c1);					-- τελεστές λογικοί με σχεσιακούς
	x <- (c1+c2) !=      (2*l0	);					-- τελεστές αριθμητικοί με σχεσιακούς
	x <- c1 + ca1[(l0+1)*2];						-- αριθμητική έκφραση με πίνακα

	while x < c1 loop								-- while
		x <- f6(x, c2, message);
		x <- x -2.6;
	pool;

	return x;
};


-- start -------------
const start <- (): int => {
	return 0;
}

(* 
 * multi-line comment
 *)